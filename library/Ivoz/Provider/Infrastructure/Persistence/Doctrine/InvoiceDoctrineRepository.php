<?php

namespace Ivoz\Provider\Infrastructure\Persistence\Doctrine;

use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Ivoz\Provider\Domain\Model\Invoice\Invoice;
use Ivoz\Provider\Domain\Model\Invoice\InvoiceRepository;
use Symfony\Bridge\Doctrine\RegistryInterface;

/**
 * InvoiceDoctrineRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InvoiceDoctrineRepository extends ServiceEntityRepository implements InvoiceRepository
{
    const ENTITY_ALIAS = 'invoice';

    public function __construct(RegistryInterface $registry)
    {
        parent::__construct($registry, Invoice::class);
    }

    /**
     * @inheritDoc
     */
    public function fetchInvoiceNumberInRange(
        int $companyId,
        int $brandId,
        string $utcInDate,
        string $utcOutDate,
        int $invoiceIdToBeExcluded = null
    ) {
        $querySegments = [
            self::ENTITY_ALIAS . '.company = :companyId',
            self::ENTITY_ALIAS . '.brand = :brandId',
            self::ENTITY_ALIAS . '.inDate >= :startTimeUtc',
            self::ENTITY_ALIAS . '.outDate <= :utcOutDate'
        ];
        $queryArguments = [
            'companyId' => $companyId,
            'brandId' => $brandId,
            'startTimeUtc' => $utcInDate,
            'utcOutDate' => $utcOutDate
        ];

        if ($invoiceIdToBeExcluded) {
            $querySegments[] = self::ENTITY_ALIAS . '.id != :invoiceIdToBeExcluded';
            $queryArguments['invoiceIdToBeExcluded'] = $invoiceIdToBeExcluded;
        }

        $query = implode(' AND ', $querySegments);
        $qb = $this->createQueryBuilder(self::ENTITY_ALIAS);
        $qb->select('count(' . self::ENTITY_ALIAS  . ')')
            ->where($query)
            ->setParameters($queryArguments);

        return $qb
            ->getQuery()
            ->getSingleScalarResult();
    }
}
