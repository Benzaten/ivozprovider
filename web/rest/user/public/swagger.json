{
    "swagger": "2.0",
    "basePath": "/api/client/",
    "info": {
        "title": "Ivoz Provider",
        "version": "3",
        "description": "Client REST API"
    },
    "paths": {
        "/billable_calls": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getBillableCallCollection",
                "summary": "Retrieves the collection of BillableCall resources.",
                "responses": {
                    "200": {
                        "description": "BillableCall collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BillableCall-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "callee",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callee[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "caller",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "caller[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callid",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callid[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "ddi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddi[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration",
                        "in": "query",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "duration[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointId",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "endpointId[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointId[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointId[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointId[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointId[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointName[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointType[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[callee]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[caller]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[callid]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[ddi]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[direction]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[endpointId]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[endpointName]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[endpointType]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[price]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[startTime]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "invoice",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "price[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "price[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "price[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "price[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "price[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[callee]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[caller]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[callid]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[direction]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[duration]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[endpointId]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[endpointName]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[endpointType]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[price]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[startTime]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_pagination",
                        "in": "query",
                        "required": false,
                        "description": "Enable or disable pagination",
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            }
        },
        "/billable_calls/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getBillableCallItem",
                "summary": "Retrieves a BillableCall resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BillableCall resource response",
                        "schema": {
                            "$ref": "#/definitions/BillableCall-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/calendar_periods": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCalendarPeriodCollection",
                "summary": "Retrieves the collection of CalendarPeriod resources.",
                "responses": {
                    "200": {
                        "description": "CalendarPeriod collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CalendarPeriod-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "calendar",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "calendar[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endDate[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endDate[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endDate[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endDate[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endDate[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[extension]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[locution]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[numberCountry]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[routeType]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[voiceMailUser]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "extension",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "extension[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "locution",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "locution[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberCountry",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberCountry[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routeType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routeType[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startDate[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startDate[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startDate[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startDate[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startDate[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "voiceMailUser",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "voiceMailUser[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[endDate]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[routeType]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[startDate]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postCalendarPeriodCollection",
                "summary": "Creates a CalendarPeriod resource.",
                "responses": {
                    "201": {
                        "description": "CalendarPeriod resource created",
                        "schema": {
                            "$ref": "#/definitions/CalendarPeriod"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "calendarPeriod",
                        "in": "body",
                        "description": "The new CalendarPeriod resource",
                        "schema": {
                            "$ref": "#/definitions/CalendarPeriod"
                        }
                    }
                ]
            }
        },
        "/calendar_periods/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCalendarPeriodItem",
                "summary": "Retrieves a CalendarPeriod resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CalendarPeriod resource response",
                        "schema": {
                            "$ref": "#/definitions/CalendarPeriod-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putCalendarPeriodItem",
                "summary": "Replaces the CalendarPeriod resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CalendarPeriod resource updated",
                        "schema": {
                            "$ref": "#/definitions/CalendarPeriod"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteCalendarPeriodItem",
                "summary": "Removes the CalendarPeriod resource.",
                "responses": {
                    "204": {
                        "description": "CalendarPeriod resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/calendar_periods_rel_schedules": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCalendarPeriodsRelScheduleCollection",
                "summary": "Retrieves the collection of CalendarPeriodsRelSchedule resources.",
                "responses": {
                    "200": {
                        "description": "CalendarPeriodsRelSchedule collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CalendarPeriodsRelSchedule-detailedCollection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "calendarPeriod",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "calendarPeriod.calendar",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "calendarPeriod.endDate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "calendarPeriod.extension",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "calendarPeriod.locution",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "calendarPeriod.numberCountry",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "calendarPeriod.numberValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "calendarPeriod.routeType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "calendarPeriod.startDate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "calendarPeriod.voiceMailUser",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "calendarPeriod[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schedule",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schedule.company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "schedule.friday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "schedule.monday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "schedule.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schedule.saturday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "schedule.sunday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "schedule.thursday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "schedule.timeIn",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schedule.timeout",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schedule.tuesday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "schedule.wednesday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "schedule[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postCalendarPeriodsRelScheduleCollection",
                "summary": "Creates a CalendarPeriodsRelSchedule resource.",
                "responses": {
                    "201": {
                        "description": "CalendarPeriodsRelSchedule resource created",
                        "schema": {
                            "$ref": "#/definitions/CalendarPeriodsRelSchedule"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "calendarPeriodsRelSchedule",
                        "in": "body",
                        "description": "The new CalendarPeriodsRelSchedule resource",
                        "schema": {
                            "$ref": "#/definitions/CalendarPeriodsRelSchedule"
                        }
                    }
                ]
            }
        },
        "/calendar_periods_rel_schedules/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCalendarPeriodsRelScheduleItem",
                "summary": "Retrieves a CalendarPeriodsRelSchedule resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CalendarPeriodsRelSchedule resource response",
                        "schema": {
                            "$ref": "#/definitions/CalendarPeriodsRelSchedule-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putCalendarPeriodsRelScheduleItem",
                "summary": "Replaces the CalendarPeriodsRelSchedule resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CalendarPeriodsRelSchedule resource updated",
                        "schema": {
                            "$ref": "#/definitions/CalendarPeriodsRelSchedule"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteCalendarPeriodsRelScheduleItem",
                "summary": "Removes the CalendarPeriodsRelSchedule resource.",
                "responses": {
                    "204": {
                        "description": "CalendarPeriodsRelSchedule resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/calendars": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCalendarCollection",
                "summary": "Retrieves the collection of Calendar resources.",
                "responses": {
                    "200": {
                        "description": "Calendar collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Calendar-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postCalendarCollection",
                "summary": "Creates a Calendar resource.",
                "responses": {
                    "201": {
                        "description": "Calendar resource created",
                        "schema": {
                            "$ref": "#/definitions/Calendar"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "calendar",
                        "in": "body",
                        "description": "The new Calendar resource",
                        "schema": {
                            "$ref": "#/definitions/Calendar"
                        }
                    }
                ]
            }
        },
        "/calendars/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCalendarItem",
                "summary": "Retrieves a Calendar resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Calendar resource response",
                        "schema": {
                            "$ref": "#/definitions/Calendar-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putCalendarItem",
                "summary": "Replaces the Calendar resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Calendar resource updated",
                        "schema": {
                            "$ref": "#/definitions/Calendar"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteCalendarItem",
                "summary": "Removes the Calendar resource.",
                "responses": {
                    "204": {
                        "description": "Calendar resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/call_acl_rel_match_lists": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCallAclRelMatchListCollection",
                "summary": "Retrieves the collection of CallAclRelMatchList resources.",
                "responses": {
                    "200": {
                        "description": "CallAclRelMatchList collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CallAclRelMatchList-detailedCollection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "callAcl",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callAcl.company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "callAcl.defaultPolicy",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callAcl.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callAcl[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "matchList",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "matchList.company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "matchList.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "matchList[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "policy",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "policy[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "priority[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[policy]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[priority]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postCallAclRelMatchListCollection",
                "summary": "Creates a CallAclRelMatchList resource.",
                "responses": {
                    "201": {
                        "description": "CallAclRelMatchList resource created",
                        "schema": {
                            "$ref": "#/definitions/CallAclRelMatchList"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "callAclRelMatchList",
                        "in": "body",
                        "description": "The new CallAclRelMatchList resource",
                        "schema": {
                            "$ref": "#/definitions/CallAclRelMatchList"
                        }
                    }
                ]
            }
        },
        "/call_acl_rel_match_lists/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCallAclRelMatchListItem",
                "summary": "Retrieves a CallAclRelMatchList resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CallAclRelMatchList resource response",
                        "schema": {
                            "$ref": "#/definitions/CallAclRelMatchList-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putCallAclRelMatchListItem",
                "summary": "Replaces the CallAclRelMatchList resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CallAclRelMatchList resource updated",
                        "schema": {
                            "$ref": "#/definitions/CallAclRelMatchList"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteCallAclRelMatchListItem",
                "summary": "Removes the CallAclRelMatchList resource.",
                "responses": {
                    "204": {
                        "description": "CallAclRelMatchList resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/call_acls": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCallAclCollection",
                "summary": "Retrieves the collection of CallAcl resources.",
                "responses": {
                    "200": {
                        "description": "CallAcl collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CallAcl-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultPolicy",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultPolicy[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[defaultPolicy]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postCallAclCollection",
                "summary": "Creates a CallAcl resource.",
                "responses": {
                    "201": {
                        "description": "CallAcl resource created",
                        "schema": {
                            "$ref": "#/definitions/CallAcl"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "callAcl",
                        "in": "body",
                        "description": "The new CallAcl resource",
                        "schema": {
                            "$ref": "#/definitions/CallAcl"
                        }
                    }
                ]
            }
        },
        "/call_acls/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCallAclItem",
                "summary": "Retrieves a CallAcl resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CallAcl resource response",
                        "schema": {
                            "$ref": "#/definitions/CallAcl-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putCallAclItem",
                "summary": "Replaces the CallAcl resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CallAcl resource updated",
                        "schema": {
                            "$ref": "#/definitions/CallAcl"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteCallAclItem",
                "summary": "Removes the CallAcl resource.",
                "responses": {
                    "204": {
                        "description": "CallAcl resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/call_csv_reports": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCallCsvReportCollection",
                "summary": "Retrieves the collection of CallCsvReport resources.",
                "responses": {
                    "200": {
                        "description": "CallCsvReport collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CallCsvReport-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "callCsvScheduler",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callCsvScheduler[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[callCsvScheduler]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "inDate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inDate[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inDate[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inDate[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inDate[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inDate[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outDate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outDate[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outDate[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outDate[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outDate[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outDate[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[inDate]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[outDate]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            }
        },
        "/call_csv_reports/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCallCsvReportItem",
                "summary": "Retrieves a CallCsvReport resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CallCsvReport resource response",
                        "schema": {
                            "$ref": "#/definitions/CallCsvReport-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/call_csv_reports/{id}/csv": {
            "get": {
                "produces": [
                    "application/octet-stream"
                ],
                "responses": {
                    "200": {
                        "description": "CallCsvReport csv"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "tags": [
                    "Provider"
                ],
                "operationId": "/callcsvreport_csvCallCsvReportItem",
                "summary": "Retrieves a CallCsvReport resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/call_csv_schedulers": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCallCsvSchedulerCollection",
                "summary": "Retrieves the collection of CallCsvScheduler resources.",
                "responses": {
                    "200": {
                        "description": "CallCsvScheduler collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CallCsvScheduler-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "callCsvNotificationTemplate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callCsvNotificationTemplate[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callDirection",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callDirection[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddi[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[callCsvNotificationTemplate]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[callDirection]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[ddi]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[fax]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[friend]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[lastExecution]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[nextExecution]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[residentialDevice]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[retailAccount]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[user]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "fax",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fax[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "frequency",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "frequency[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "frequency[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "frequency[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "frequency[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "frequency[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "friend",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "friend[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastExecution",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastExecution[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastExecution[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastExecution[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastExecution[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastExecution[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nextExecution",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nextExecution[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nextExecution[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nextExecution[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nextExecution[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nextExecution[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "residentialDevice",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "residentialDevice[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "retailAccount",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "retailAccount[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "unit",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "unit[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[callDirection]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[email]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[frequency]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[lastExecution]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[nextExecution]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[unit]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postCallCsvSchedulerCollection",
                "summary": "Creates a CallCsvScheduler resource.",
                "responses": {
                    "201": {
                        "description": "CallCsvScheduler resource created",
                        "schema": {
                            "$ref": "#/definitions/CallCsvScheduler"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "callCsvScheduler",
                        "in": "body",
                        "description": "The new CallCsvScheduler resource",
                        "schema": {
                            "$ref": "#/definitions/CallCsvScheduler"
                        }
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            }
        },
        "/call_csv_schedulers/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCallCsvSchedulerItem",
                "summary": "Retrieves a CallCsvScheduler resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CallCsvScheduler resource response",
                        "schema": {
                            "$ref": "#/definitions/CallCsvScheduler-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putCallCsvSchedulerItem",
                "summary": "Replaces the CallCsvScheduler resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CallCsvScheduler resource updated",
                        "schema": {
                            "$ref": "#/definitions/CallCsvScheduler"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteCallCsvSchedulerItem",
                "summary": "Removes the CallCsvScheduler resource.",
                "responses": {
                    "204": {
                        "description": "CallCsvScheduler resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/call_forward_settings": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCallForwardSettingCollection",
                "summary": "Retrieves the collection of CallForwardSetting resources.",
                "responses": {
                    "200": {
                        "description": "CallForwardSetting collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CallForwardSetting-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "callTypeFilter",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callTypeFilter[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callForwardType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callForwardType[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "targetType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "targetType[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberValue[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "extension",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "extension[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "voiceMailUser",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "voiceMailUser[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberCountry",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberCountry[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "residentialDevice",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "residentialDevice[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "retailAccount",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "retailAccount[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "enabled",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "noAnswerTimeout",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "noAnswerTimeout[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "noAnswerTimeout[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "noAnswerTimeout[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "noAnswerTimeout[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "noAnswerTimeout[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[callTypeFilter]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[callForwardType]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[targetType]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[numberValue]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[noAnswerTimeout]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[enabled]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[targetType]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[numberValue]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[user]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[extension]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[voiceMailUser]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[numberCountry]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[residentialDevice]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[retailAccount]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postCallForwardSettingCollection",
                "summary": "Creates a CallForwardSetting resource.",
                "responses": {
                    "201": {
                        "description": "CallForwardSetting resource created",
                        "schema": {
                            "$ref": "#/definitions/CallForwardSetting"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "callForwardSetting",
                        "in": "body",
                        "description": "The new CallForwardSetting resource",
                        "schema": {
                            "$ref": "#/definitions/CallForwardSetting"
                        }
                    }
                ]
            }
        },
        "/call_forward_settings/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCallForwardSettingItem",
                "summary": "Retrieves a CallForwardSetting resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CallForwardSetting resource response",
                        "schema": {
                            "$ref": "#/definitions/CallForwardSetting-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putCallForwardSettingItem",
                "summary": "Replaces the CallForwardSetting resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CallForwardSetting resource updated",
                        "schema": {
                            "$ref": "#/definitions/CallForwardSetting"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteCallForwardSettingItem",
                "summary": "Removes the CallForwardSetting resource.",
                "responses": {
                    "204": {
                        "description": "CallForwardSetting resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/companies": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCompanyCollection",
                "summary": "Retrieves the collection of Company resources.",
                "responses": {
                    "200": {
                        "description": "Company collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Company-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nif",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nif[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultTimezone",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultTimezone[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "country[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdiRule",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdiRule[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[type]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[nif]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[language]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[defaultTimezone]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[transformationRuleSet]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[outgoingDdi]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[outgoingDdiRule]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            }
        },
        "/companies/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCompanyItem",
                "summary": "Retrieves a Company resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company resource response",
                        "schema": {
                            "$ref": "#/definitions/Company-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/company_services": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCompanyServiceCollection",
                "summary": "Retrieves the collection of CompanyService resources.",
                "responses": {
                    "200": {
                        "description": "CompanyService collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompanyService-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "service",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "service[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[code]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postCompanyServiceCollection",
                "summary": "Creates a CompanyService resource.",
                "responses": {
                    "201": {
                        "description": "CompanyService resource created",
                        "schema": {
                            "$ref": "#/definitions/CompanyService"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "companyService",
                        "in": "body",
                        "description": "The new CompanyService resource",
                        "schema": {
                            "$ref": "#/definitions/CompanyService"
                        }
                    }
                ]
            }
        },
        "/company_services/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCompanyServiceItem",
                "summary": "Retrieves a CompanyService resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CompanyService resource response",
                        "schema": {
                            "$ref": "#/definitions/CompanyService-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putCompanyServiceItem",
                "summary": "Replaces the CompanyService resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CompanyService resource updated",
                        "schema": {
                            "$ref": "#/definitions/CompanyService"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteCompanyServiceItem",
                "summary": "Removes the CompanyService resource.",
                "responses": {
                    "204": {
                        "description": "CompanyService resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/conditional_routes": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getConditionalRouteCollection",
                "summary": "Retrieves the collection of ConditionalRoute resources.",
                "responses": {
                    "200": {
                        "description": "ConditionalRoute collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ConditionalRoute-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routetype",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routetype[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ivr",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ivr[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "huntGroup",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "huntGroup[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "voicemailUser",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "voicemailUser[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "queue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "queue[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "locution",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "locution[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "conferenceRoom",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "conferenceRoom[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "extension",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "extension[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberCountry",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberCountry[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[routetype]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[routetype]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[ivr]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[huntGroup]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[voicemailUser]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[user]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[queue]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[locution]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[conferenceRoom]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[extension]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[numberCountry]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postConditionalRouteCollection",
                "summary": "Creates a ConditionalRoute resource.",
                "responses": {
                    "201": {
                        "description": "ConditionalRoute resource created",
                        "schema": {
                            "$ref": "#/definitions/ConditionalRoute"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "conditionalRoute",
                        "in": "body",
                        "description": "The new ConditionalRoute resource",
                        "schema": {
                            "$ref": "#/definitions/ConditionalRoute"
                        }
                    }
                ]
            }
        },
        "/conditional_routes/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getConditionalRouteItem",
                "summary": "Retrieves a ConditionalRoute resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ConditionalRoute resource response",
                        "schema": {
                            "$ref": "#/definitions/ConditionalRoute-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putConditionalRouteItem",
                "summary": "Replaces the ConditionalRoute resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ConditionalRoute resource updated",
                        "schema": {
                            "$ref": "#/definitions/ConditionalRoute"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteConditionalRouteItem",
                "summary": "Removes the ConditionalRoute resource.",
                "responses": {
                    "204": {
                        "description": "ConditionalRoute resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/conditional_routes_conditions": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getConditionalRoutesConditionCollection",
                "summary": "Retrieves the collection of ConditionalRoutesCondition resources.",
                "responses": {
                    "200": {
                        "description": "ConditionalRoutesCondition collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ConditionalRoutesCondition-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "routeType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routeType[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "conditionalRoute",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "conditionalRoute[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ivr",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ivr[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "huntGroup",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "huntGroup[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "voicemailUser",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "voicemailUser[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "queue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "queue[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "locution",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "locution[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "conferenceRoom",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "conferenceRoom[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "extension",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "extension[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberCountry",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberCountry[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "priority[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[priority]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[routeType]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[routeType]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[ivr]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[huntGroup]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[voicemailUser]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[user]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[queue]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[locution]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[conferenceRoom]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[extension]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[numberCountry]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postConditionalRoutesConditionCollection",
                "summary": "Creates a ConditionalRoutesCondition resource.",
                "responses": {
                    "201": {
                        "description": "ConditionalRoutesCondition resource created",
                        "schema": {
                            "$ref": "#/definitions/ConditionalRoutesCondition-withInverseRelationships"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "conditionalRoutesCondition",
                        "in": "body",
                        "description": "The new ConditionalRoutesCondition resource",
                        "schema": {
                            "$ref": "#/definitions/ConditionalRoutesCondition"
                        }
                    }
                ]
            }
        },
        "/conditional_routes_conditions/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getConditionalRoutesConditionItem",
                "summary": "Retrieves a ConditionalRoutesCondition resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ConditionalRoutesCondition resource response",
                        "schema": {
                            "$ref": "#/definitions/ConditionalRoutesCondition-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putConditionalRoutesConditionItem",
                "summary": "Replaces the ConditionalRoutesCondition resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ConditionalRoutesCondition resource updated",
                        "schema": {
                            "$ref": "#/definitions/ConditionalRoutesCondition-withInverseRelationships"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteConditionalRoutesConditionItem",
                "summary": "Removes the ConditionalRoutesCondition resource.",
                "responses": {
                    "204": {
                        "description": "ConditionalRoutesCondition resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/conditional_routes_conditions_rel_calendars": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getConditionalRoutesConditionsRelCalendarCollection",
                "summary": "Retrieves the collection of ConditionalRoutesConditionsRelCalendar resources.",
                "responses": {
                    "200": {
                        "description": "ConditionalRoutesConditionsRelCalendar collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ConditionalRoutesConditionsRelCalendar-detailedCollection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "calendar",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "calendar.company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "calendar.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "calendar[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "condition",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "condition.conditionalRoute",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.conferenceRoom",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.extension",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.friendValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "condition.huntGroup",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.ivr",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.locution",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.numberCountry",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.numberValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "condition.priority",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.queue",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.routeType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "condition.user",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.voicemailUser",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postConditionalRoutesConditionsRelCalendarCollection",
                "summary": "Creates a ConditionalRoutesConditionsRelCalendar resource.",
                "responses": {
                    "201": {
                        "description": "ConditionalRoutesConditionsRelCalendar resource created",
                        "schema": {
                            "$ref": "#/definitions/ConditionalRoutesConditionsRelCalendar"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "conditionalRoutesConditionsRelCalendar",
                        "in": "body",
                        "description": "The new ConditionalRoutesConditionsRelCalendar resource",
                        "schema": {
                            "$ref": "#/definitions/ConditionalRoutesConditionsRelCalendar"
                        }
                    }
                ]
            }
        },
        "/conditional_routes_conditions_rel_calendars/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getConditionalRoutesConditionsRelCalendarItem",
                "summary": "Retrieves a ConditionalRoutesConditionsRelCalendar resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ConditionalRoutesConditionsRelCalendar resource response",
                        "schema": {
                            "$ref": "#/definitions/ConditionalRoutesConditionsRelCalendar-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteConditionalRoutesConditionsRelCalendarItem",
                "summary": "Removes the ConditionalRoutesConditionsRelCalendar resource.",
                "responses": {
                    "204": {
                        "description": "ConditionalRoutesConditionsRelCalendar resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/conditional_routes_conditions_rel_matchlists": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getConditionalRoutesConditionsRelMatchlistCollection",
                "summary": "Retrieves the collection of ConditionalRoutesConditionsRelMatchlist resources.",
                "responses": {
                    "200": {
                        "description": "ConditionalRoutesConditionsRelMatchlist collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ConditionalRoutesConditionsRelMatchlist-detailedCollection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "condition",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "condition.conditionalRoute",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.conferenceRoom",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.extension",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.friendValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "condition.huntGroup",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.ivr",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.locution",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.numberCountry",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.numberValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "condition.priority",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.queue",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.routeType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "condition.user",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.voicemailUser",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "matchlist",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "matchlist.company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "matchlist.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "matchlist[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postConditionalRoutesConditionsRelMatchlistCollection",
                "summary": "Creates a ConditionalRoutesConditionsRelMatchlist resource.",
                "responses": {
                    "201": {
                        "description": "ConditionalRoutesConditionsRelMatchlist resource created",
                        "schema": {
                            "$ref": "#/definitions/ConditionalRoutesConditionsRelMatchlist"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "conditionalRoutesConditionsRelMatchlist",
                        "in": "body",
                        "description": "The new ConditionalRoutesConditionsRelMatchlist resource",
                        "schema": {
                            "$ref": "#/definitions/ConditionalRoutesConditionsRelMatchlist"
                        }
                    }
                ]
            }
        },
        "/conditional_routes_conditions_rel_matchlists/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getConditionalRoutesConditionsRelMatchlistItem",
                "summary": "Retrieves a ConditionalRoutesConditionsRelMatchlist resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ConditionalRoutesConditionsRelMatchlist resource response",
                        "schema": {
                            "$ref": "#/definitions/ConditionalRoutesConditionsRelMatchlist-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteConditionalRoutesConditionsRelMatchlistItem",
                "summary": "Removes the ConditionalRoutesConditionsRelMatchlist resource.",
                "responses": {
                    "204": {
                        "description": "ConditionalRoutesConditionsRelMatchlist resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/conditional_routes_conditions_rel_route_locks": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getConditionalRoutesConditionsRelRouteLockCollection",
                "summary": "Retrieves the collection of ConditionalRoutesConditionsRelRouteLock resources.",
                "responses": {
                    "200": {
                        "description": "ConditionalRoutesConditionsRelRouteLock collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ConditionalRoutesConditionsRelRouteLock-detailedCollection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "condition",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "condition.conditionalRoute",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.conferenceRoom",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.extension",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.friendValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "condition.huntGroup",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.ivr",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.locution",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.numberCountry",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.numberValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "condition.priority",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.queue",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.routeType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "condition.user",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.voicemailUser",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routeLock",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routeLock.company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "routeLock.description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routeLock.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routeLock.open",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "routeLock[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postConditionalRoutesConditionsRelRouteLockCollection",
                "summary": "Creates a ConditionalRoutesConditionsRelRouteLock resource.",
                "responses": {
                    "201": {
                        "description": "ConditionalRoutesConditionsRelRouteLock resource created",
                        "schema": {
                            "$ref": "#/definitions/ConditionalRoutesConditionsRelRouteLock"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "conditionalRoutesConditionsRelRouteLock",
                        "in": "body",
                        "description": "The new ConditionalRoutesConditionsRelRouteLock resource",
                        "schema": {
                            "$ref": "#/definitions/ConditionalRoutesConditionsRelRouteLock"
                        }
                    }
                ]
            }
        },
        "/conditional_routes_conditions_rel_route_locks/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getConditionalRoutesConditionsRelRouteLockItem",
                "summary": "Retrieves a ConditionalRoutesConditionsRelRouteLock resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ConditionalRoutesConditionsRelRouteLock resource response",
                        "schema": {
                            "$ref": "#/definitions/ConditionalRoutesConditionsRelRouteLock-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteConditionalRoutesConditionsRelRouteLockItem",
                "summary": "Removes the ConditionalRoutesConditionsRelRouteLock resource.",
                "responses": {
                    "204": {
                        "description": "ConditionalRoutesConditionsRelRouteLock resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/conditional_routes_conditions_rel_schedules": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getConditionalRoutesConditionsRelScheduleCollection",
                "summary": "Retrieves the collection of ConditionalRoutesConditionsRelSchedule resources.",
                "responses": {
                    "200": {
                        "description": "ConditionalRoutesConditionsRelSchedule collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ConditionalRoutesConditionsRelSchedule-detailedCollection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "condition",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "condition.conditionalRoute",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.conferenceRoom",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.extension",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.friendValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "condition.huntGroup",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.ivr",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.locution",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.numberCountry",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.numberValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "condition.priority",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.queue",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.routeType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "condition.user",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition.voicemailUser",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "condition[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schedule",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schedule.company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "schedule.friday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "schedule.monday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "schedule.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schedule.saturday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "schedule.sunday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "schedule.thursday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "schedule.timeIn",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schedule.timeout",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schedule.tuesday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "schedule.wednesday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "schedule[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postConditionalRoutesConditionsRelScheduleCollection",
                "summary": "Creates a ConditionalRoutesConditionsRelSchedule resource.",
                "responses": {
                    "201": {
                        "description": "ConditionalRoutesConditionsRelSchedule resource created",
                        "schema": {
                            "$ref": "#/definitions/ConditionalRoutesConditionsRelSchedule"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "conditionalRoutesConditionsRelSchedule",
                        "in": "body",
                        "description": "The new ConditionalRoutesConditionsRelSchedule resource",
                        "schema": {
                            "$ref": "#/definitions/ConditionalRoutesConditionsRelSchedule"
                        }
                    }
                ]
            }
        },
        "/conditional_routes_conditions_rel_schedules/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getConditionalRoutesConditionsRelScheduleItem",
                "summary": "Retrieves a ConditionalRoutesConditionsRelSchedule resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ConditionalRoutesConditionsRelSchedule resource response",
                        "schema": {
                            "$ref": "#/definitions/ConditionalRoutesConditionsRelSchedule-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteConditionalRoutesConditionsRelScheduleItem",
                "summary": "Removes the ConditionalRoutesConditionsRelSchedule resource.",
                "responses": {
                    "204": {
                        "description": "ConditionalRoutesConditionsRelSchedule resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/conference_rooms": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getConferenceRoomCollection",
                "summary": "Retrieves the collection of ConferenceRoom resources.",
                "responses": {
                    "200": {
                        "description": "ConferenceRoom collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ConferenceRoom-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pinProtected",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "maxMembers",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "maxMembers[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "maxMembers[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "maxMembers[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "maxMembers[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "maxMembers[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[pinProtected]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[maxMembers]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postConferenceRoomCollection",
                "summary": "Creates a ConferenceRoom resource.",
                "responses": {
                    "201": {
                        "description": "ConferenceRoom resource created",
                        "schema": {
                            "$ref": "#/definitions/ConferenceRoom"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "conferenceRoom",
                        "in": "body",
                        "description": "The new ConferenceRoom resource",
                        "schema": {
                            "$ref": "#/definitions/ConferenceRoom"
                        }
                    }
                ]
            }
        },
        "/conference_rooms/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getConferenceRoomItem",
                "summary": "Retrieves a ConferenceRoom resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ConferenceRoom resource response",
                        "schema": {
                            "$ref": "#/definitions/ConferenceRoom-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putConferenceRoomItem",
                "summary": "Replaces the ConferenceRoom resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ConferenceRoom resource updated",
                        "schema": {
                            "$ref": "#/definitions/ConferenceRoom"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteConferenceRoomItem",
                "summary": "Removes the ConferenceRoom resource.",
                "responses": {
                    "204": {
                        "description": "ConferenceRoom resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/countries": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCountryCollection",
                "summary": "Retrieves the collection of Country resources.",
                "responses": {
                    "200": {
                        "description": "Country collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Country-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "countryCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "countryCode[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[countryCode]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[name.en]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[name.es]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "name.ca",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[code]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[countryCode]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.en]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.es]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_pagination",
                        "in": "query",
                        "required": false,
                        "description": "Enable or disable pagination",
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/countries/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCountryItem",
                "summary": "Retrieves a Country resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Country resource response",
                        "schema": {
                            "$ref": "#/definitions/Country-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/ddis": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getDdiCollection",
                "summary": "Retrieves the collection of Ddi resources.",
                "responses": {
                    "200": {
                        "description": "Ddi collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Ddi-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "ddi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddi[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddie164",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddie164[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routeType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routeType[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "conferenceRoom",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "conferenceRoom[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "queue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "queue[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "externalCallFilter",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "externalCallFilter[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ivr",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ivr[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "huntGroup",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "huntGroup[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fax",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fax[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "country[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "residentialDevice",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "residentialDevice[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "conditionalRoute",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "conditionalRoute[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "retailAccount",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "retailAccount[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[ddi]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[ddie164]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[routeType]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[ddie164]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[routeType]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[conferenceRoom]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[language]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[queue]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[externalCallFilter]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[user]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[ivr]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[huntGroup]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[fax]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[country]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[residentialDevice]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[conditionalRoute]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[retailAccount]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            }
        },
        "/ddis/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getDdiItem",
                "summary": "Retrieves a Ddi resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ddi resource response",
                        "schema": {
                            "$ref": "#/definitions/Ddi-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putDdiItem",
                "summary": "Replaces the Ddi resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ddi resource updated",
                        "schema": {
                            "$ref": "#/definitions/Ddi"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/extensions": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getExtensionCollection",
                "summary": "Retrieves the collection of Extension resources.",
                "responses": {
                    "200": {
                        "description": "Extension collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Extension-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "number",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ivr",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ivr[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "huntGroup",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "huntGroup[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "conferenceRoom",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "conferenceRoom[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "queue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "queue[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "conditionalRoute",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "conditionalRoute[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberCountry",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberCountry[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[number]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[ivr]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[huntGroup]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[conferenceRoom]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[user]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[queue]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[conditionalRoute]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[numberCountry]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postExtensionCollection",
                "summary": "Creates a Extension resource.",
                "responses": {
                    "201": {
                        "description": "Extension resource created",
                        "schema": {
                            "$ref": "#/definitions/Extension"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "extension",
                        "in": "body",
                        "description": "The new Extension resource",
                        "schema": {
                            "$ref": "#/definitions/Extension"
                        }
                    }
                ]
            }
        },
        "/extensions/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getExtensionItem",
                "summary": "Retrieves a Extension resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Extension resource response",
                        "schema": {
                            "$ref": "#/definitions/Extension-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putExtensionItem",
                "summary": "Replaces the Extension resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Extension resource updated",
                        "schema": {
                            "$ref": "#/definitions/Extension"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteExtensionItem",
                "summary": "Removes the Extension resource.",
                "responses": {
                    "204": {
                        "description": "Extension resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/external_call_filter_black_lists": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getExternalCallFilterBlackListCollection",
                "summary": "Retrieves the collection of ExternalCallFilterBlackList resources.",
                "responses": {
                    "200": {
                        "description": "ExternalCallFilterBlackList collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ExternalCallFilterBlackList-detailedCollection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.holidayExtension",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.holidayLocution",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.holidayNumberCountry",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.holidayNumberValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.holidayTargetType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.holidayVoiceMailUser",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.outOfScheduleExtension",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.outOfScheduleLocution",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.outOfScheduleNumberCountry",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.outOfScheduleNumberValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.outOfScheduleTargetType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.outOfScheduleVoiceMailUser",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.welcomeLocution",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "matchlist",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "matchlist.company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "matchlist.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "matchlist[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postExternalCallFilterBlackListCollection",
                "summary": "Creates a ExternalCallFilterBlackList resource.",
                "responses": {
                    "201": {
                        "description": "ExternalCallFilterBlackList resource created",
                        "schema": {
                            "$ref": "#/definitions/ExternalCallFilterBlackList"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "externalCallFilterBlackList",
                        "in": "body",
                        "description": "The new ExternalCallFilterBlackList resource",
                        "schema": {
                            "$ref": "#/definitions/ExternalCallFilterBlackList"
                        }
                    }
                ]
            }
        },
        "/external_call_filter_black_lists/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getExternalCallFilterBlackListItem",
                "summary": "Retrieves a ExternalCallFilterBlackList resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ExternalCallFilterBlackList resource response",
                        "schema": {
                            "$ref": "#/definitions/ExternalCallFilterBlackList-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putExternalCallFilterBlackListItem",
                "summary": "Replaces the ExternalCallFilterBlackList resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ExternalCallFilterBlackList resource updated",
                        "schema": {
                            "$ref": "#/definitions/ExternalCallFilterBlackList"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteExternalCallFilterBlackListItem",
                "summary": "Removes the ExternalCallFilterBlackList resource.",
                "responses": {
                    "204": {
                        "description": "ExternalCallFilterBlackList resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/external_call_filter_rel_calendars": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getExternalCallFilterRelCalendarCollection",
                "summary": "Retrieves the collection of ExternalCallFilterRelCalendar resources.",
                "responses": {
                    "200": {
                        "description": "ExternalCallFilterRelCalendar collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ExternalCallFilterRelCalendar-detailedCollection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "calendar",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "calendar.company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "calendar.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "calendar[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.holidayExtension",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.holidayLocution",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.holidayNumberCountry",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.holidayNumberValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.holidayTargetType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.holidayVoiceMailUser",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.outOfScheduleExtension",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.outOfScheduleLocution",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.outOfScheduleNumberCountry",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.outOfScheduleNumberValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.outOfScheduleTargetType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.outOfScheduleVoiceMailUser",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.welcomeLocution",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postExternalCallFilterRelCalendarCollection",
                "summary": "Creates a ExternalCallFilterRelCalendar resource.",
                "responses": {
                    "201": {
                        "description": "ExternalCallFilterRelCalendar resource created",
                        "schema": {
                            "$ref": "#/definitions/ExternalCallFilterRelCalendar"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "externalCallFilterRelCalendar",
                        "in": "body",
                        "description": "The new ExternalCallFilterRelCalendar resource",
                        "schema": {
                            "$ref": "#/definitions/ExternalCallFilterRelCalendar"
                        }
                    }
                ]
            }
        },
        "/external_call_filter_rel_calendars/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getExternalCallFilterRelCalendarItem",
                "summary": "Retrieves a ExternalCallFilterRelCalendar resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ExternalCallFilterRelCalendar resource response",
                        "schema": {
                            "$ref": "#/definitions/ExternalCallFilterRelCalendar-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putExternalCallFilterRelCalendarItem",
                "summary": "Replaces the ExternalCallFilterRelCalendar resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ExternalCallFilterRelCalendar resource updated",
                        "schema": {
                            "$ref": "#/definitions/ExternalCallFilterRelCalendar"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteExternalCallFilterRelCalendarItem",
                "summary": "Removes the ExternalCallFilterRelCalendar resource.",
                "responses": {
                    "204": {
                        "description": "ExternalCallFilterRelCalendar resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/external_call_filter_rel_schedules": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getExternalCallFilterRelScheduleCollection",
                "summary": "Retrieves the collection of ExternalCallFilterRelSchedule resources.",
                "responses": {
                    "200": {
                        "description": "ExternalCallFilterRelSchedule collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ExternalCallFilterRelSchedule-detailedCollection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.holidayExtension",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.holidayLocution",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.holidayNumberCountry",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.holidayNumberValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.holidayTargetType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.holidayVoiceMailUser",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.outOfScheduleExtension",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.outOfScheduleLocution",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.outOfScheduleNumberCountry",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.outOfScheduleNumberValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.outOfScheduleTargetType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.outOfScheduleVoiceMailUser",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.welcomeLocution",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schedule",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schedule.company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "schedule.friday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "schedule.monday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "schedule.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schedule.saturday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "schedule.sunday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "schedule.thursday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "schedule.timeIn",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schedule.timeout",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schedule.tuesday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "schedule.wednesday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "schedule[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postExternalCallFilterRelScheduleCollection",
                "summary": "Creates a ExternalCallFilterRelSchedule resource.",
                "responses": {
                    "201": {
                        "description": "ExternalCallFilterRelSchedule resource created",
                        "schema": {
                            "$ref": "#/definitions/ExternalCallFilterRelSchedule"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "externalCallFilterRelSchedule",
                        "in": "body",
                        "description": "The new ExternalCallFilterRelSchedule resource",
                        "schema": {
                            "$ref": "#/definitions/ExternalCallFilterRelSchedule"
                        }
                    }
                ]
            }
        },
        "/external_call_filter_rel_schedules/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getExternalCallFilterRelScheduleItem",
                "summary": "Retrieves a ExternalCallFilterRelSchedule resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ExternalCallFilterRelSchedule resource response",
                        "schema": {
                            "$ref": "#/definitions/ExternalCallFilterRelSchedule-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putExternalCallFilterRelScheduleItem",
                "summary": "Replaces the ExternalCallFilterRelSchedule resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ExternalCallFilterRelSchedule resource updated",
                        "schema": {
                            "$ref": "#/definitions/ExternalCallFilterRelSchedule"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteExternalCallFilterRelScheduleItem",
                "summary": "Removes the ExternalCallFilterRelSchedule resource.",
                "responses": {
                    "204": {
                        "description": "ExternalCallFilterRelSchedule resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/external_call_filter_white_lists": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getExternalCallFilterWhiteListCollection",
                "summary": "Retrieves the collection of ExternalCallFilterWhiteList resources.",
                "responses": {
                    "200": {
                        "description": "ExternalCallFilterWhiteList collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ExternalCallFilterWhiteList-detailedCollection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.holidayExtension",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.holidayLocution",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.holidayNumberCountry",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.holidayNumberValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.holidayTargetType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.holidayVoiceMailUser",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.outOfScheduleExtension",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.outOfScheduleLocution",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.outOfScheduleNumberCountry",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.outOfScheduleNumberValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.outOfScheduleTargetType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.outOfScheduleVoiceMailUser",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter.welcomeLocution",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "filter[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "matchlist",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "matchlist.company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "matchlist.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "matchlist[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postExternalCallFilterWhiteListCollection",
                "summary": "Creates a ExternalCallFilterWhiteList resource.",
                "responses": {
                    "201": {
                        "description": "ExternalCallFilterWhiteList resource created",
                        "schema": {
                            "$ref": "#/definitions/ExternalCallFilterWhiteList"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "externalCallFilterWhiteList",
                        "in": "body",
                        "description": "The new ExternalCallFilterWhiteList resource",
                        "schema": {
                            "$ref": "#/definitions/ExternalCallFilterWhiteList"
                        }
                    }
                ]
            }
        },
        "/external_call_filter_white_lists/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getExternalCallFilterWhiteListItem",
                "summary": "Retrieves a ExternalCallFilterWhiteList resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ExternalCallFilterWhiteList resource response",
                        "schema": {
                            "$ref": "#/definitions/ExternalCallFilterWhiteList-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putExternalCallFilterWhiteListItem",
                "summary": "Replaces the ExternalCallFilterWhiteList resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ExternalCallFilterWhiteList resource updated",
                        "schema": {
                            "$ref": "#/definitions/ExternalCallFilterWhiteList"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteExternalCallFilterWhiteListItem",
                "summary": "Removes the ExternalCallFilterWhiteList resource.",
                "responses": {
                    "204": {
                        "description": "ExternalCallFilterWhiteList resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/external_call_filters": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getExternalCallFilterCollection",
                "summary": "Retrieves the collection of ExternalCallFilter resources.",
                "responses": {
                    "200": {
                        "description": "ExternalCallFilter collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ExternalCallFilter-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "welcomeLocution",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "welcomeLocution[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "holidayLocution",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "holidayLocution[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outOfScheduleLocution",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outOfScheduleLocution[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "holidayExtension",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "holidayExtension[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outOfScheduleExtension",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outOfScheduleExtension[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "holidayVoiceMailUser",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "holidayVoiceMailUser[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outOfScheduleVoiceMailUser",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outOfScheduleVoiceMailUser[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "holidayNumberCountry",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "holidayNumberCountry[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outOfScheduleNumberCountry",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outOfScheduleNumberCountry[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[welcomeLocution]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[holidayLocution]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[outOfScheduleLocution]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[holidayExtension]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[outOfScheduleExtension]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[holidayVoiceMailUser]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[outOfScheduleVoiceMailUser]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[holidayNumberCountry]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[outOfScheduleNumberCountry]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postExternalCallFilterCollection",
                "summary": "Creates a ExternalCallFilter resource.",
                "responses": {
                    "201": {
                        "description": "ExternalCallFilter resource created",
                        "schema": {
                            "$ref": "#/definitions/ExternalCallFilter-withInverseRelationships"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "externalCallFilter",
                        "in": "body",
                        "description": "The new ExternalCallFilter resource",
                        "schema": {
                            "$ref": "#/definitions/ExternalCallFilter"
                        }
                    }
                ]
            }
        },
        "/external_call_filters/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getExternalCallFilterItem",
                "summary": "Retrieves a ExternalCallFilter resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ExternalCallFilter resource response",
                        "schema": {
                            "$ref": "#/definitions/ExternalCallFilter-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putExternalCallFilterItem",
                "summary": "Replaces the ExternalCallFilter resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ExternalCallFilter resource updated",
                        "schema": {
                            "$ref": "#/definitions/ExternalCallFilter-withInverseRelationships"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteExternalCallFilterItem",
                "summary": "Removes the ExternalCallFilter resource.",
                "responses": {
                    "204": {
                        "description": "ExternalCallFilter resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/faxes": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFaxCollection",
                "summary": "Retrieves the collection of Fax resources.",
                "responses": {
                    "200": {
                        "description": "Fax collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Fax-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sendByEmail",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[email]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[sendByEmail]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[email]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[outgoingDdi]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postFaxCollection",
                "summary": "Creates a Fax resource.",
                "responses": {
                    "201": {
                        "description": "Fax resource created",
                        "schema": {
                            "$ref": "#/definitions/Fax"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "fax",
                        "in": "body",
                        "description": "The new Fax resource",
                        "schema": {
                            "$ref": "#/definitions/Fax"
                        }
                    }
                ]
            }
        },
        "/faxes/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFaxItem",
                "summary": "Retrieves a Fax resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fax resource response",
                        "schema": {
                            "$ref": "#/definitions/Fax-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putFaxItem",
                "summary": "Replaces the Fax resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fax resource updated",
                        "schema": {
                            "$ref": "#/definitions/Fax"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteFaxItem",
                "summary": "Removes the Fax resource.",
                "responses": {
                    "204": {
                        "description": "Fax resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/faxes_in_outs": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFaxesInOutCollection",
                "summary": "Retrieves the collection of FaxesInOut resources.",
                "responses": {
                    "200": {
                        "description": "FaxesInOut collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FaxesInOut-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "calldate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "calldate[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "calldate[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "calldate[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "calldate[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "calldate[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dst",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dstCountry",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dstCountry[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dst[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[dstCountry]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[dst]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[src]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[status]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[type]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "fax",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fax[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "src",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "src[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[calldate]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[dst]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[src]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[status]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[type]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            }
        },
        "/faxes_in_outs/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFaxesInOutItem",
                "summary": "Retrieves a FaxesInOut resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FaxesInOut resource response",
                        "schema": {
                            "$ref": "#/definitions/FaxesInOut-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/faxes_in_outs/{id}/file": {
            "get": {
                "produces": [
                    "application/octet-stream"
                ],
                "responses": {
                    "200": {
                        "description": "FaxesInOut file"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "tags": [
                    "Provider"
                ],
                "operationId": "/faxesinout_fileFaxesInOutItem",
                "summary": "Retrieves a FaxesInOut resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/features_rel_companies": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFeaturesRelCompanyCollection",
                "summary": "Retrieves the collection of FeaturesRelCompany resources.",
                "responses": {
                    "200": {
                        "description": "FeaturesRelCompany collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FeaturesRelCompany-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "feature",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "feature[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/features_rel_companies/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFeaturesRelCompanyItem",
                "summary": "Retrieves a FeaturesRelCompany resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FeaturesRelCompany resource response",
                        "schema": {
                            "$ref": "#/definitions/FeaturesRelCompany-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/friends": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFriendCollection",
                "summary": "Retrieves the collection of Friend resources.",
                "responses": {
                    "200": {
                        "description": "Friend collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Friend-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callAcl",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callAcl[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[transformationRuleSet]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[callAcl]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[outgoingDdi]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[language]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postFriendCollection",
                "summary": "Creates a Friend resource.",
                "responses": {
                    "201": {
                        "description": "Friend resource created",
                        "schema": {
                            "$ref": "#/definitions/Friend"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "friend",
                        "in": "body",
                        "description": "The new Friend resource",
                        "schema": {
                            "$ref": "#/definitions/Friend"
                        }
                    }
                ]
            }
        },
        "/friends/status": {
            "get": {
                "tags": [
                    "Provider"
                ],
                "operationId": "get_status_collectionFriendCollection",
                "produces": [
                    "application/json",
                    "application/ld+json",
                    "text/csv",
                    "application/xml",
                    "text/xml",
                    "text/html",
                    "application/octet-stream"
                ],
                "summary": "Retrieves the collection of Friend resources.",
                "responses": {
                    "200": {
                        "description": "Friend collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Friend-status"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "callAcl",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callAcl[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domainName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[callAcl]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[language]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[outgoingDdi]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[transformationRuleSet]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/friends/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFriendItem",
                "summary": "Retrieves a Friend resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Friend resource response",
                        "schema": {
                            "$ref": "#/definitions/Friend-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putFriendItem",
                "summary": "Replaces the Friend resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Friend resource updated",
                        "schema": {
                            "$ref": "#/definitions/Friend"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteFriendItem",
                "summary": "Removes the Friend resource.",
                "responses": {
                    "204": {
                        "description": "Friend resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/friends/{id}/status": {
            "get": {
                "tags": [
                    "Provider"
                ],
                "operationId": "get_status_itemFriendItem",
                "produces": [
                    "application/json",
                    "application/ld+json",
                    "text/csv",
                    "application/xml",
                    "text/xml",
                    "text/html",
                    "application/octet-stream"
                ],
                "summary": "Retrieves a Friend resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Friend resource response",
                        "schema": {
                            "$ref": "#/definitions/Friend-status"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/friends_patterns": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFriendsPatternCollection",
                "summary": "Retrieves the collection of FriendsPattern resources.",
                "responses": {
                    "200": {
                        "description": "FriendsPattern collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FriendsPattern-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regExp",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regExp[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "friend",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "friend[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[regExp]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postFriendsPatternCollection",
                "summary": "Creates a FriendsPattern resource.",
                "responses": {
                    "201": {
                        "description": "FriendsPattern resource created",
                        "schema": {
                            "$ref": "#/definitions/FriendsPattern"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "friendsPattern",
                        "in": "body",
                        "description": "The new FriendsPattern resource",
                        "schema": {
                            "$ref": "#/definitions/FriendsPattern"
                        }
                    }
                ]
            }
        },
        "/friends_patterns/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFriendsPatternItem",
                "summary": "Retrieves a FriendsPattern resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FriendsPattern resource response",
                        "schema": {
                            "$ref": "#/definitions/FriendsPattern-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putFriendsPatternItem",
                "summary": "Replaces the FriendsPattern resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FriendsPattern resource updated",
                        "schema": {
                            "$ref": "#/definitions/FriendsPattern"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteFriendsPatternItem",
                "summary": "Removes the FriendsPattern resource.",
                "responses": {
                    "204": {
                        "description": "FriendsPattern resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/holiday_dates": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getHolidayDateCollection",
                "summary": "Retrieves the collection of HolidayDate resources.",
                "responses": {
                    "200": {
                        "description": "HolidayDate collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/HolidayDate-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "calendar",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "calendar[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "eventDate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "eventDate[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "eventDate[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "eventDate[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "eventDate[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "eventDate[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[extension]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[locution]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[numberCountry]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[voiceMailUser]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "extension",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "extension[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "locution",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "locution[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberCountry",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberCountry[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "voiceMailUser",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "voiceMailUser[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[eventDate]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postHolidayDateCollection",
                "summary": "Creates a HolidayDate resource.",
                "responses": {
                    "201": {
                        "description": "HolidayDate resource created",
                        "schema": {
                            "$ref": "#/definitions/HolidayDate"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "holidayDate",
                        "in": "body",
                        "description": "The new HolidayDate resource",
                        "schema": {
                            "$ref": "#/definitions/HolidayDate"
                        }
                    }
                ]
            }
        },
        "/holiday_dates/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getHolidayDateItem",
                "summary": "Retrieves a HolidayDate resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HolidayDate resource response",
                        "schema": {
                            "$ref": "#/definitions/HolidayDate-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putHolidayDateItem",
                "summary": "Replaces the HolidayDate resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HolidayDate resource updated",
                        "schema": {
                            "$ref": "#/definitions/HolidayDate"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteHolidayDateItem",
                "summary": "Removes the HolidayDate resource.",
                "responses": {
                    "204": {
                        "description": "HolidayDate resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/hunt_groups": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getHuntGroupCollection",
                "summary": "Retrieves the collection of HuntGroup resources.",
                "responses": {
                    "200": {
                        "description": "HuntGroup collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/HuntGroup-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "strategy",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "strategy[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "noAnswerLocution",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "noAnswerLocution[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "noAnswerExtension",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "noAnswerExtension[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "noAnswerVoiceMailUser",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "noAnswerVoiceMailUser[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "noAnswerNumberCountry",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "noAnswerNumberCountry[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[strategy]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[noAnswerLocution]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[noAnswerExtension]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[noAnswerVoiceMailUser]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[noAnswerNumberCountry]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postHuntGroupCollection",
                "summary": "Creates a HuntGroup resource.",
                "responses": {
                    "201": {
                        "description": "HuntGroup resource created",
                        "schema": {
                            "$ref": "#/definitions/HuntGroup"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "huntGroup",
                        "in": "body",
                        "description": "The new HuntGroup resource",
                        "schema": {
                            "$ref": "#/definitions/HuntGroup"
                        }
                    }
                ]
            }
        },
        "/hunt_groups/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getHuntGroupItem",
                "summary": "Retrieves a HuntGroup resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HuntGroup resource response",
                        "schema": {
                            "$ref": "#/definitions/HuntGroup-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putHuntGroupItem",
                "summary": "Replaces the HuntGroup resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HuntGroup resource updated",
                        "schema": {
                            "$ref": "#/definitions/HuntGroup"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteHuntGroupItem",
                "summary": "Removes the HuntGroup resource.",
                "responses": {
                    "204": {
                        "description": "HuntGroup resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/hunt_groups_rel_users": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getHuntGroupsRelUserCollection",
                "summary": "Retrieves the collection of HuntGroupsRelUser resources.",
                "responses": {
                    "200": {
                        "description": "HuntGroupsRelUser collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/HuntGroupsRelUser-detailedCollection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "exists[numberCountry]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[numberValue]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[priority]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[timeoutTime]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[user]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "huntGroup",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "huntGroup.allowCallForwards",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "huntGroup.company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "huntGroup.description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "huntGroup.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "huntGroup.noAnswerExtension",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "huntGroup.noAnswerLocution",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "huntGroup.noAnswerNumberCountry",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "huntGroup.noAnswerNumberValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "huntGroup.noAnswerTargetType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "huntGroup.noAnswerVoiceMailUser",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "huntGroup.preventMissedCalls",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "huntGroup.ringAllTimeout",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "huntGroup.strategy",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "huntGroup[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberCountry",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberCountry.code",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberCountry.countryCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberCountry[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberValue[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "priority[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routeType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routeType[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeoutTime",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "timeoutTime[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeoutTime[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeoutTime[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeoutTime[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeoutTime[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user.active",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "user.bossAssistant",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.bossAssistantWhiteList",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.callAcl",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.doNotDisturb",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "user.email",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user.extension",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.externalIpCalls",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user.gsQRCode",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "user.isBoss",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "user.language",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.lastname",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user.maxCalls",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.multiContact",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "user.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user.oldPass",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user.outgoingDdi",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.outgoingDdiRule",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.pass",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user.rejectCallMethod",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user.terminal",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.timezone",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.transformationRuleSet",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.voicemailAttachSound",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "user.voicemailEnabled",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "user.voicemailLocution",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.voicemailSendMail",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "user[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "zone.ca",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "zone.en",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "zone.es",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "zone.it",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[numberValue]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[priority]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[routeType]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[timeoutTime]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postHuntGroupsRelUserCollection",
                "summary": "Creates a HuntGroupsRelUser resource.",
                "responses": {
                    "201": {
                        "description": "HuntGroupsRelUser resource created",
                        "schema": {
                            "$ref": "#/definitions/HuntGroupsRelUser"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "huntGroupsRelUser",
                        "in": "body",
                        "description": "The new HuntGroupsRelUser resource",
                        "schema": {
                            "$ref": "#/definitions/HuntGroupsRelUser"
                        }
                    }
                ]
            }
        },
        "/hunt_groups_rel_users/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getHuntGroupsRelUserItem",
                "summary": "Retrieves a HuntGroupsRelUser resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HuntGroupsRelUser resource response",
                        "schema": {
                            "$ref": "#/definitions/HuntGroupsRelUser-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putHuntGroupsRelUserItem",
                "summary": "Replaces the HuntGroupsRelUser resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HuntGroupsRelUser resource updated",
                        "schema": {
                            "$ref": "#/definitions/HuntGroupsRelUser"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteHuntGroupsRelUserItem",
                "summary": "Removes the HuntGroupsRelUser resource.",
                "responses": {
                    "204": {
                        "description": "HuntGroupsRelUser resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/ivr_entries": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getIvrEntryCollection",
                "summary": "Retrieves the collection of IvrEntry resources.",
                "responses": {
                    "200": {
                        "description": "IvrEntry collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IvrEntry-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "entry",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "entry[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routeType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "routeType[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ivr",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ivr[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "welcomeLocution",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "welcomeLocution[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "extension",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "extension[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "voiceMailUser",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "voiceMailUser[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "conditionalRoute",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "conditionalRoute[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberCountry",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberCountry[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[entry]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[routeType]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[welcomeLocution]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[extension]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[voiceMailUser]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[conditionalRoute]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[numberCountry]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postIvrEntryCollection",
                "summary": "Creates a IvrEntry resource.",
                "responses": {
                    "201": {
                        "description": "IvrEntry resource created",
                        "schema": {
                            "$ref": "#/definitions/IvrEntry"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "ivrEntry",
                        "in": "body",
                        "description": "The new IvrEntry resource",
                        "schema": {
                            "$ref": "#/definitions/IvrEntry"
                        }
                    }
                ]
            }
        },
        "/ivr_entries/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getIvrEntryItem",
                "summary": "Retrieves a IvrEntry resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "IvrEntry resource response",
                        "schema": {
                            "$ref": "#/definitions/IvrEntry-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putIvrEntryItem",
                "summary": "Replaces the IvrEntry resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "IvrEntry resource updated",
                        "schema": {
                            "$ref": "#/definitions/IvrEntry"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteIvrEntryItem",
                "summary": "Removes the IvrEntry resource.",
                "responses": {
                    "204": {
                        "description": "IvrEntry resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/ivr_excluded_extensions": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getIvrExcludedExtensionCollection",
                "summary": "Retrieves the collection of IvrExcludedExtension resources.",
                "responses": {
                    "200": {
                        "description": "IvrExcludedExtension collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IvrExcludedExtension-detailedCollection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "extension",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "extension.company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "extension.conditionalRoute",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "extension.conferenceRoom",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "extension.friendValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "extension.huntGroup",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "extension.ivr",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "extension.number",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "extension.numberCountry",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "extension.numberValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "extension.queue",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "extension.routeType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "extension.user",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "extension[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ivr",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ivr.allowExtensions",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "ivr.company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "ivr.errorExtension",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "ivr.errorLocution",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "ivr.errorNumberCountry",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "ivr.errorNumberValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ivr.errorRouteType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ivr.errorVoiceMailUser",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "ivr.maxDigits",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "ivr.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ivr.noInputExtension",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "ivr.noInputLocution",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "ivr.noInputNumberCountry",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "ivr.noInputNumberValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ivr.noInputRouteType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ivr.noInputVoiceMailUser",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "ivr.successLocution",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "ivr.timeout",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "ivr.welcomeLocution",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "ivr[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postIvrExcludedExtensionCollection",
                "summary": "Creates a IvrExcludedExtension resource.",
                "responses": {
                    "201": {
                        "description": "IvrExcludedExtension resource created",
                        "schema": {
                            "$ref": "#/definitions/IvrExcludedExtension"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "ivrExcludedExtension",
                        "in": "body",
                        "description": "The new IvrExcludedExtension resource",
                        "schema": {
                            "$ref": "#/definitions/IvrExcludedExtension"
                        }
                    }
                ]
            }
        },
        "/ivr_excluded_extensions/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getIvrExcludedExtensionItem",
                "summary": "Retrieves a IvrExcludedExtension resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "IvrExcludedExtension resource response",
                        "schema": {
                            "$ref": "#/definitions/IvrExcludedExtension-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putIvrExcludedExtensionItem",
                "summary": "Replaces the IvrExcludedExtension resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "IvrExcludedExtension resource updated",
                        "schema": {
                            "$ref": "#/definitions/IvrExcludedExtension"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteIvrExcludedExtensionItem",
                "summary": "Removes the IvrExcludedExtension resource.",
                "responses": {
                    "204": {
                        "description": "IvrExcludedExtension resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/ivrs": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getIvrCollection",
                "summary": "Retrieves the collection of Ivr resources.",
                "responses": {
                    "200": {
                        "description": "Ivr collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Ivr-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "welcomeLocution",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "welcomeLocution[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "noInputLocution",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "noInputLocution[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "errorLocution",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "errorLocution[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "successLocution",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "successLocution[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "noInputExtension",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "noInputExtension[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "errorExtension",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "errorExtension[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "noInputVoiceMailUser",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "noInputVoiceMailUser[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "errorVoiceMailUser",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "errorVoiceMailUser[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "noInputNumberCountry",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "noInputNumberCountry[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "errorNumberCountry",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "errorNumberCountry[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[welcomeLocution]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[noInputLocution]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[errorLocution]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[successLocution]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[noInputExtension]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[errorExtension]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[noInputVoiceMailUser]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[errorVoiceMailUser]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[noInputNumberCountry]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[errorNumberCountry]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postIvrCollection",
                "summary": "Creates a Ivr resource.",
                "responses": {
                    "201": {
                        "description": "Ivr resource created",
                        "schema": {
                            "$ref": "#/definitions/Ivr-withExcludedExtensions"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "ivr",
                        "in": "body",
                        "description": "The new Ivr resource",
                        "schema": {
                            "$ref": "#/definitions/Ivr"
                        }
                    }
                ]
            }
        },
        "/ivrs/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getIvrItem",
                "summary": "Retrieves a Ivr resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ivr resource response",
                        "schema": {
                            "$ref": "#/definitions/Ivr-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putIvrItem",
                "summary": "Replaces the Ivr resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ivr resource updated",
                        "schema": {
                            "$ref": "#/definitions/Ivr-withExcludedExtensions"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteIvrItem",
                "summary": "Removes the Ivr resource.",
                "responses": {
                    "204": {
                        "description": "Ivr resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/languages": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getLanguageCollection",
                "summary": "Retrieves the collection of Language resources.",
                "responses": {
                    "200": {
                        "description": "Language collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Language-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "iden",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[iden]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            }
        },
        "/languages/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getLanguageItem",
                "summary": "Retrieves a Language resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Language resource response",
                        "schema": {
                            "$ref": "#/definitions/Language-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/locutions": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getLocutionCollection",
                "summary": "Retrieves the collection of Locution resources.",
                "responses": {
                    "200": {
                        "description": "Locution collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Locution-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[status]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[status]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "multipart/form-data",
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postLocutionCollection",
                "summary": "Creates a Locution resource.",
                "responses": {
                    "201": {
                        "description": "Locution resource created",
                        "schema": {
                            "$ref": "#/definitions/Locution"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "locution",
                        "in": "formData",
                        "description": "The new Locution resource",
                        "type": "string"
                    },
                    {
                        "name": "OriginalFile",
                        "in": "formData",
                        "type": "file",
                        "required": false
                    }
                ]
            }
        },
        "/locutions/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getLocutionItem",
                "summary": "Retrieves a Locution resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Locution resource response",
                        "schema": {
                            "$ref": "#/definitions/Locution-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "multipart/form-data",
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putLocutionItem",
                "summary": "Replaces the Locution resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "locution",
                        "in": "formData",
                        "description": "The updated Locution resource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Locution resource updated",
                        "schema": {
                            "$ref": "#/definitions/Locution"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteLocutionItem",
                "summary": "Removes the Locution resource.",
                "responses": {
                    "204": {
                        "description": "Locution resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/locutions/{id}/encodedfile": {
            "get": {
                "produces": [
                    "application/octet-stream"
                ],
                "responses": {
                    "200": {
                        "description": "Locution encodedFile"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "tags": [
                    "Provider"
                ],
                "operationId": "/locution_encodedfileLocutionItem",
                "summary": "Retrieves a Locution resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/locutions/{id}/originalfile": {
            "get": {
                "produces": [
                    "application/octet-stream"
                ],
                "responses": {
                    "200": {
                        "description": "Locution originalFile"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "tags": [
                    "Provider"
                ],
                "operationId": "/locution_originalfileLocutionItem",
                "summary": "Retrieves a Locution resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/match_list_patterns": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getMatchListPatternCollection",
                "summary": "Retrieves the collection of MatchListPattern resources.",
                "responses": {
                    "200": {
                        "description": "MatchListPattern collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MatchListPattern-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regexp",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regexp[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numbervalue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numbervalue[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "matchList",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "matchList[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberCountry",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberCountry[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[type]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[regexp]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[numbervalue]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[description]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[regexp]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[numbervalue]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[numberCountry]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postMatchListPatternCollection",
                "summary": "Creates a MatchListPattern resource.",
                "responses": {
                    "201": {
                        "description": "MatchListPattern resource created",
                        "schema": {
                            "$ref": "#/definitions/MatchListPattern"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "matchListPattern",
                        "in": "body",
                        "description": "The new MatchListPattern resource",
                        "schema": {
                            "$ref": "#/definitions/MatchListPattern"
                        }
                    }
                ]
            }
        },
        "/match_list_patterns/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getMatchListPatternItem",
                "summary": "Retrieves a MatchListPattern resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MatchListPattern resource response",
                        "schema": {
                            "$ref": "#/definitions/MatchListPattern-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putMatchListPatternItem",
                "summary": "Replaces the MatchListPattern resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MatchListPattern resource updated",
                        "schema": {
                            "$ref": "#/definitions/MatchListPattern"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteMatchListPatternItem",
                "summary": "Removes the MatchListPattern resource.",
                "responses": {
                    "204": {
                        "description": "MatchListPattern resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/match_lists": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getMatchListCollection",
                "summary": "Retrieves the collection of MatchList resources.",
                "responses": {
                    "200": {
                        "description": "MatchList collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MatchList-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postMatchListCollection",
                "summary": "Creates a MatchList resource.",
                "responses": {
                    "201": {
                        "description": "MatchList resource created",
                        "schema": {
                            "$ref": "#/definitions/MatchList"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "matchList",
                        "in": "body",
                        "description": "The new MatchList resource",
                        "schema": {
                            "$ref": "#/definitions/MatchList"
                        }
                    }
                ]
            }
        },
        "/match_lists/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getMatchListItem",
                "summary": "Retrieves a MatchList resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MatchList resource response",
                        "schema": {
                            "$ref": "#/definitions/MatchList-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putMatchListItem",
                "summary": "Replaces the MatchList resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MatchList resource updated",
                        "schema": {
                            "$ref": "#/definitions/MatchList"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteMatchListItem",
                "summary": "Removes the MatchList resource.",
                "responses": {
                    "204": {
                        "description": "MatchList resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/music_on_holds": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getMusicOnHoldCollection",
                "summary": "Retrieves the collection of MusicOnHold resources.",
                "responses": {
                    "200": {
                        "description": "MusicOnHold collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MusicOnHold-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[status]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[status]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "multipart/form-data",
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postMusicOnHoldCollection",
                "summary": "Creates a MusicOnHold resource.",
                "responses": {
                    "201": {
                        "description": "MusicOnHold resource created",
                        "schema": {
                            "$ref": "#/definitions/MusicOnHold"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "musicOnHold",
                        "in": "formData",
                        "description": "The new MusicOnHold resource",
                        "type": "string"
                    },
                    {
                        "name": "OriginalFile",
                        "in": "formData",
                        "type": "file",
                        "required": false
                    }
                ]
            }
        },
        "/music_on_holds/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getMusicOnHoldItem",
                "summary": "Retrieves a MusicOnHold resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MusicOnHold resource response",
                        "schema": {
                            "$ref": "#/definitions/MusicOnHold-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "multipart/form-data",
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putMusicOnHoldItem",
                "summary": "Replaces the MusicOnHold resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "musicOnHold",
                        "in": "formData",
                        "description": "The updated MusicOnHold resource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MusicOnHold resource updated",
                        "schema": {
                            "$ref": "#/definitions/MusicOnHold"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteMusicOnHoldItem",
                "summary": "Removes the MusicOnHold resource.",
                "responses": {
                    "204": {
                        "description": "MusicOnHold resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/music_on_holds/{id}/encodedfile": {
            "get": {
                "produces": [
                    "application/octet-stream"
                ],
                "responses": {
                    "200": {
                        "description": "MusicOnHold encodedFile"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "tags": [
                    "Provider"
                ],
                "operationId": "/musiconhold_encodedfileMusicOnHoldItem",
                "summary": "Retrieves a MusicOnHold resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/music_on_holds/{id}/originalfile": {
            "get": {
                "produces": [
                    "application/octet-stream"
                ],
                "responses": {
                    "200": {
                        "description": "MusicOnHold originalFile"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "tags": [
                    "Provider"
                ],
                "operationId": "/musiconhold_originalfileMusicOnHoldItem",
                "summary": "Retrieves a MusicOnHold resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/my/active_calls": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "My"
                ],
                "parameters": [],
                "operationId": "get_my_active_callsActiveCallsItem",
                "summary": "Retrieves a ActiveCalls resource.",
                "responses": {
                    "200": {
                        "description": "ActiveCalls resource response",
                        "schema": {
                            "$ref": "#/definitions/ActiveCalls"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/my/call_forward_settings": {
            "post": {
                "consumes": [
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "My"
                ],
                "parameters": [
                    {
                        "name": "CallForwardSetting",
                        "in": "body",
                        "description": "The updated CallForwardSetting resource",
                        "schema": {
                            "$ref": "#/definitions/CallForwardSetting"
                        }
                    }
                ],
                "operationId": "post_my_call_forward_settingsCallForwardSettingItem",
                "summary": "Creates a CallForwardSetting resource.",
                "responses": {
                    "201": {
                        "description": "CallForwardSetting resource created",
                        "schema": {
                            "$ref": "#/definitions/CallForwardSetting"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "get": {
                "parameters": [
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "My"
                ],
                "operationId": "get_my_call_forward_settingsCallForwardSettingCollection",
                "summary": "Retrieves the collection of CallForwardSetting resources.",
                "responses": {
                    "200": {
                        "description": "CallForwardSetting collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CallForwardSetting-detailedCollection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/my/call_history": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json",
                    "text/csv"
                ],
                "tags": [
                    "My"
                ],
                "operationId": "get_my_call_historyUsersCdrCollection",
                "summary": "Retrieves the collection of UsersCdr resources.",
                "responses": {
                    "200": {
                        "description": "UsersCdr collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UsersCdr"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "callee",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callee[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "caller",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "caller[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callid",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callidHash",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "diversion",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration",
                        "in": "query",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "duration[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endTime[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endTime[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endTime[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endTime[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endTime[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[callee]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[caller]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[direction]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[friend]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[residentialDevice]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[retailAccount]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[user]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "friend",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "friend[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "referee",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "referrer",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "residentialDevice",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "residentialDevice[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "retailAccount",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "retailAccount[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "xcallid",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[callee]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[caller]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[direction]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[duration]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[endTime]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[startTime]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_pagination",
                        "in": "query",
                        "required": false,
                        "description": "Enable or disable pagination",
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            }
        },
        "/my/call_stats": {
            "get": {
                "tags": [
                    "My"
                ],
                "parameters": [],
                "operationId": "getCallStatsItem",
                "produces": [
                    "application/json",
                    "application/ld+json",
                    "text/csv",
                    "application/xml",
                    "text/xml",
                    "text/html",
                    "application/octet-stream"
                ],
                "summary": "Retrieves a CallStats resource.",
                "responses": {
                    "200": {
                        "description": "CallStats resource response",
                        "schema": {
                            "$ref": "#/definitions/CallStats"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/my/company_assistants": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "My"
                ],
                "parameters": [
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ],
                "operationId": "get_my_company_assistantsUserCollection",
                "summary": "Retrieves the collection of User resources.",
                "responses": {
                    "200": {
                        "description": "User collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/my/company_country": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "My"
                ],
                "parameters": [],
                "operationId": "get_my_company_countryCountryItem",
                "summary": "Retrieves a Country resource.",
                "responses": {
                    "200": {
                        "description": "Country resource response",
                        "schema": {
                            "$ref": "#/definitions/Country-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/my/company_extensions": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "My"
                ],
                "parameters": [
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ],
                "operationId": "get_my_company_extensionsExtensionCollection",
                "summary": "Retrieves the collection of Extension resources.",
                "responses": {
                    "200": {
                        "description": "Extension collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Extension"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/my/company_voicemails": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "My"
                ],
                "parameters": [
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ],
                "operationId": "get_my_company_voicemailsUserCollection",
                "summary": "Retrieves the collection of User resources.",
                "responses": {
                    "200": {
                        "description": "User collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/my/profile": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "My"
                ],
                "parameters": [],
                "operationId": "get_my_profileUserItem",
                "summary": "Retrieves a User resource.",
                "responses": {
                    "200": {
                        "description": "User resource response",
                        "schema": {
                            "$ref": "#/definitions/User-myProfile"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "My"
                ],
                "consumes": [
                    "application/ld+json"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "The updated User resource",
                        "schema": {
                            "$ref": "#/definitions/User-updateMyProfile"
                        }
                    }
                ],
                "operationId": "put_my_profileUserItem",
                "produces": [
                    "application/json",
                    "application/ld+json",
                    "text/csv",
                    "application/xml",
                    "text/xml",
                    "text/html",
                    "application/octet-stream"
                ],
                "summary": "Replaces the User resource.",
                "responses": {
                    "200": {
                        "description": "User resource updated",
                        "schema": {
                            "$ref": "#/definitions/User-myProfile"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/my/registration_summary": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "My"
                ],
                "parameters": [],
                "operationId": "get_my_registration_summaryRegistrationSummaryItem",
                "summary": "Retrieves a RegistrationSummary resource.",
                "responses": {
                    "200": {
                        "description": "RegistrationSummary resource response",
                        "schema": {
                            "$ref": "#/definitions/RegistrationSummary"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/my/status": {
            "get": {
                "tags": [
                    "My"
                ],
                "parameters": [],
                "operationId": "getUserStatusItem",
                "produces": [
                    "application/json",
                    "application/ld+json",
                    "text/csv",
                    "application/xml",
                    "text/xml",
                    "text/html",
                    "application/octet-stream"
                ],
                "summary": "Retrieves a UserStatus resource.",
                "responses": {
                    "200": {
                        "description": "UserStatus resource response",
                        "schema": {
                            "$ref": "#/definitions/UserStatus"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/my/web_theme": {
            "get": {
                "tags": [
                    "My"
                ],
                "parameters": [],
                "operationId": "getWebThemeItem",
                "produces": [
                    "application/json",
                    "application/ld+json",
                    "text/csv",
                    "application/xml",
                    "text/xml",
                    "text/html",
                    "application/octet-stream"
                ],
                "summary": "Retrieves a WebTheme resource.",
                "responses": {
                    "200": {
                        "description": "WebTheme resource response",
                        "schema": {
                            "$ref": "#/definitions/WebTheme"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/outgoing_ddi_rules": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getOutgoingDdiRuleCollection",
                "summary": "Retrieves the collection of OutgoingDdiRule resources.",
                "responses": {
                    "200": {
                        "description": "OutgoingDdiRule collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OutgoingDdiRule-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultAction",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultAction[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "forcedDdi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "forcedDdi[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[defaultAction]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[forcedDdi]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postOutgoingDdiRuleCollection",
                "summary": "Creates a OutgoingDdiRule resource.",
                "responses": {
                    "201": {
                        "description": "OutgoingDdiRule resource created",
                        "schema": {
                            "$ref": "#/definitions/OutgoingDdiRule"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "outgoingDdiRule",
                        "in": "body",
                        "description": "The new OutgoingDdiRule resource",
                        "schema": {
                            "$ref": "#/definitions/OutgoingDdiRule"
                        }
                    }
                ]
            }
        },
        "/outgoing_ddi_rules/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getOutgoingDdiRuleItem",
                "summary": "Retrieves a OutgoingDdiRule resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OutgoingDdiRule resource response",
                        "schema": {
                            "$ref": "#/definitions/OutgoingDdiRule-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putOutgoingDdiRuleItem",
                "summary": "Replaces the OutgoingDdiRule resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OutgoingDdiRule resource updated",
                        "schema": {
                            "$ref": "#/definitions/OutgoingDdiRule"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteOutgoingDdiRuleItem",
                "summary": "Removes the OutgoingDdiRule resource.",
                "responses": {
                    "204": {
                        "description": "OutgoingDdiRule resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/outgoing_ddi_rules_patterns": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getOutgoingDdiRulesPatternCollection",
                "summary": "Retrieves the collection of OutgoingDdiRulesPattern resources.",
                "responses": {
                    "200": {
                        "description": "OutgoingDdiRulesPattern collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OutgoingDdiRulesPattern-detailedCollection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "action",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "action[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[forcedDdi]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[matchList]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[prefix]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "forcedDdi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "forcedDdi.billInboundCalls",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "forcedDdi.company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "forcedDdi.conditionalRoute",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "forcedDdi.conferenceRoom",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "forcedDdi.country",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "forcedDdi.ddi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "forcedDdi.ddie164",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "forcedDdi.displayName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "forcedDdi.externalCallFilter",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "forcedDdi.fax",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "forcedDdi.friendValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "forcedDdi.huntGroup",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "forcedDdi.ivr",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "forcedDdi.language",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "forcedDdi.queue",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "forcedDdi.recordCalls",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "forcedDdi.residentialDevice",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "forcedDdi.retailAccount",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "forcedDdi.routeType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "forcedDdi.user",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "forcedDdi[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "matchList",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "matchList.company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "matchList.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "matchList[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdiRule",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdiRule.company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "outgoingDdiRule.defaultAction",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdiRule.forcedDdi",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "outgoingDdiRule.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdiRule[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "prefix",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "prefix[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "priority[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "priority[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[action]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[prefix]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[priority]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[type]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postOutgoingDdiRulesPatternCollection",
                "summary": "Creates a OutgoingDdiRulesPattern resource.",
                "responses": {
                    "201": {
                        "description": "OutgoingDdiRulesPattern resource created",
                        "schema": {
                            "$ref": "#/definitions/OutgoingDdiRulesPattern"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "outgoingDdiRulesPattern",
                        "in": "body",
                        "description": "The new OutgoingDdiRulesPattern resource",
                        "schema": {
                            "$ref": "#/definitions/OutgoingDdiRulesPattern"
                        }
                    }
                ]
            }
        },
        "/outgoing_ddi_rules_patterns/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getOutgoingDdiRulesPatternItem",
                "summary": "Retrieves a OutgoingDdiRulesPattern resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OutgoingDdiRulesPattern resource response",
                        "schema": {
                            "$ref": "#/definitions/OutgoingDdiRulesPattern-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putOutgoingDdiRulesPatternItem",
                "summary": "Replaces the OutgoingDdiRulesPattern resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OutgoingDdiRulesPattern resource updated",
                        "schema": {
                            "$ref": "#/definitions/OutgoingDdiRulesPattern"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteOutgoingDdiRulesPatternItem",
                "summary": "Removes the OutgoingDdiRulesPattern resource.",
                "responses": {
                    "204": {
                        "description": "OutgoingDdiRulesPattern resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/pick_up_groups": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getPickUpGroupCollection",
                "summary": "Retrieves the collection of PickUpGroup resources.",
                "responses": {
                    "200": {
                        "description": "PickUpGroup collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PickUpGroup-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postPickUpGroupCollection",
                "summary": "Creates a PickUpGroup resource.",
                "responses": {
                    "201": {
                        "description": "PickUpGroup resource created",
                        "schema": {
                            "$ref": "#/definitions/PickUpGroup-withUsers"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "pickUpGroup",
                        "in": "body",
                        "description": "The new PickUpGroup resource",
                        "schema": {
                            "$ref": "#/definitions/PickUpGroup"
                        }
                    }
                ]
            }
        },
        "/pick_up_groups/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getPickUpGroupItem",
                "summary": "Retrieves a PickUpGroup resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PickUpGroup resource response",
                        "schema": {
                            "$ref": "#/definitions/PickUpGroup-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putPickUpGroupItem",
                "summary": "Replaces the PickUpGroup resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PickUpGroup resource updated",
                        "schema": {
                            "$ref": "#/definitions/PickUpGroup-withUsers"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deletePickUpGroupItem",
                "summary": "Removes the PickUpGroup resource.",
                "responses": {
                    "204": {
                        "description": "PickUpGroup resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/pick_up_rel_users": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getPickUpRelUserCollection",
                "summary": "Retrieves the collection of PickUpRelUser resources.",
                "responses": {
                    "200": {
                        "description": "PickUpRelUser collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PickUpRelUser-detailedCollection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "pickUpGroup",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pickUpGroup.company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pickUpGroup.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pickUpGroup[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user.active",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "user.bossAssistant",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.bossAssistantWhiteList",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.callAcl",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.doNotDisturb",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "user.email",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user.extension",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.externalIpCalls",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user.gsQRCode",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "user.isBoss",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "user.language",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.lastname",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user.maxCalls",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.multiContact",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "user.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user.oldPass",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user.outgoingDdi",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.outgoingDdiRule",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.pass",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user.rejectCallMethod",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user.terminal",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.timezone",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.transformationRuleSet",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.voicemailAttachSound",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "user.voicemailEnabled",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "user.voicemailLocution",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.voicemailSendMail",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "user[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postPickUpRelUserCollection",
                "summary": "Creates a PickUpRelUser resource.",
                "responses": {
                    "201": {
                        "description": "PickUpRelUser resource created",
                        "schema": {
                            "$ref": "#/definitions/PickUpRelUser"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "pickUpRelUser",
                        "in": "body",
                        "description": "The new PickUpRelUser resource",
                        "schema": {
                            "$ref": "#/definitions/PickUpRelUser"
                        }
                    }
                ]
            }
        },
        "/pick_up_rel_users/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getPickUpRelUserItem",
                "summary": "Retrieves a PickUpRelUser resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PickUpRelUser resource response",
                        "schema": {
                            "$ref": "#/definitions/PickUpRelUser-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putPickUpRelUserItem",
                "summary": "Replaces the PickUpRelUser resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PickUpRelUser resource updated",
                        "schema": {
                            "$ref": "#/definitions/PickUpRelUser"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deletePickUpRelUserItem",
                "summary": "Removes the PickUpRelUser resource.",
                "responses": {
                    "204": {
                        "description": "PickUpRelUser resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/queue_members": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getQueueMemberCollection",
                "summary": "Retrieves the collection of QueueMember resources.",
                "responses": {
                    "200": {
                        "description": "QueueMember collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/QueueMember-detailedCollection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "exists[penalty]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "penalty",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "penalty[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "penalty[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "penalty[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "penalty[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "penalty[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "queue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "queue.company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "queue.fullExtension",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "queue.fullLocution",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "queue.fullNumberCountry",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "queue.fullNumberValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "queue.fullTargetType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "queue.fullVoiceMailUser",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "queue.maxWaitTime",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "queue.maxlen",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "queue.memberCallRest",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "queue.memberCallTimeout",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "queue.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "queue.periodicAnnounceFrequency",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "queue.periodicAnnounceLocution",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "queue.preventMissedCalls",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "queue.strategy",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "queue.timeoutExtension",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "queue.timeoutLocution",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "queue.timeoutNumberCountry",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "queue.timeoutNumberValue",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "queue.timeoutTargetType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "queue.timeoutVoiceMailUser",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "queue.weight",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "queue[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user.active",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "user.bossAssistant",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.bossAssistantWhiteList",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.callAcl",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.doNotDisturb",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "user.email",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user.extension",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.externalIpCalls",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user.gsQRCode",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "user.isBoss",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "user.language",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.lastname",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user.maxCalls",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.multiContact",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "user.name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user.oldPass",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user.outgoingDdi",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.outgoingDdiRule",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.pass",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user.rejectCallMethod",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user.terminal",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.timezone",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.transformationRuleSet",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.voicemailAttachSound",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "user.voicemailEnabled",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "user.voicemailLocution",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "user.voicemailSendMail",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "user[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[penalty]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postQueueMemberCollection",
                "summary": "Creates a QueueMember resource.",
                "responses": {
                    "201": {
                        "description": "QueueMember resource created",
                        "schema": {
                            "$ref": "#/definitions/QueueMember"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "queueMember",
                        "in": "body",
                        "description": "The new QueueMember resource",
                        "schema": {
                            "$ref": "#/definitions/QueueMember"
                        }
                    }
                ]
            }
        },
        "/queue_members/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getQueueMemberItem",
                "summary": "Retrieves a QueueMember resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QueueMember resource response",
                        "schema": {
                            "$ref": "#/definitions/QueueMember-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putQueueMemberItem",
                "summary": "Replaces the QueueMember resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QueueMember resource updated",
                        "schema": {
                            "$ref": "#/definitions/QueueMember"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteQueueMemberItem",
                "summary": "Removes the QueueMember resource.",
                "responses": {
                    "204": {
                        "description": "QueueMember resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/queues": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getQueueCollection",
                "summary": "Retrieves the collection of Queue resources.",
                "responses": {
                    "200": {
                        "description": "Queue collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Queue-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "periodicAnnounceLocution",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "periodicAnnounceLocution[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeoutLocution",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeoutLocution[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeoutExtension",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeoutExtension[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeoutVoiceMailUser",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeoutVoiceMailUser[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fullLocution",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fullLocution[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fullExtension",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fullExtension[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fullVoiceMailUser",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fullVoiceMailUser[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeoutNumberCountry",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeoutNumberCountry[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fullNumberCountry",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fullNumberCountry[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "weight",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "weight[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "weight[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "weight[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "weight[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "weight[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[weight]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[name]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[weight]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[periodicAnnounceLocution]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[timeoutLocution]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[timeoutExtension]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[timeoutVoiceMailUser]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[fullLocution]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[fullExtension]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[fullVoiceMailUser]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[timeoutNumberCountry]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[fullNumberCountry]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postQueueCollection",
                "summary": "Creates a Queue resource.",
                "responses": {
                    "201": {
                        "description": "Queue resource created",
                        "schema": {
                            "$ref": "#/definitions/Queue"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "queue",
                        "in": "body",
                        "description": "The new Queue resource",
                        "schema": {
                            "$ref": "#/definitions/Queue"
                        }
                    }
                ]
            }
        },
        "/queues/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getQueueItem",
                "summary": "Retrieves a Queue resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Queue resource response",
                        "schema": {
                            "$ref": "#/definitions/Queue-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putQueueItem",
                "summary": "Replaces the Queue resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Queue resource updated",
                        "schema": {
                            "$ref": "#/definitions/Queue"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteQueueItem",
                "summary": "Removes the Queue resource.",
                "responses": {
                    "204": {
                        "description": "Queue resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/rating_plan_groups/{id}/prices": {
            "get": {
                "produces": [
                    "text/csv"
                ],
                "tags": [
                    "Provider"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true,
                        "description": "Rating plan group Id"
                    }
                ],
                "operationId": "get_my_rating_plan_pricesRatingPlanPricesCollection",
                "summary": "Retrieves the collection of RatingPlanPrices resources.",
                "responses": {
                    "200": {
                        "description": "RatingPlanPrices collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RatingPlanPrices"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/rating_profiles": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getRatingProfileCollection",
                "summary": "Retrieves the collection of RatingProfile resources.",
                "responses": {
                    "200": {
                        "description": "RatingProfile collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RatingProfile-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "activationTime",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "activationTime[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "activationTime[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "activationTime[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "activationTime[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "activationTime[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "ratingPlanGroup",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ratingPlanGroup[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[activationTime]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            }
        },
        "/rating_profiles/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getRatingProfileItem",
                "summary": "Retrieves a RatingProfile resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RatingProfile resource response",
                        "schema": {
                            "$ref": "#/definitions/RatingProfile-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/recordings": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getRecordingCollection",
                "summary": "Retrieves the collection of Recording resources.",
                "responses": {
                    "200": {
                        "description": "Recording collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Recording-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "calldate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "calldate[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "calldate[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "calldate[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "calldate[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "calldate[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callee",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callee[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "caller",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "caller[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callid",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callid[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration",
                        "in": "query",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "duration[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[callee]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[caller]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[callid]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[calldate]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[callee]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[caller]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[callid]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[duration]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[type]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            }
        },
        "/recordings/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getRecordingItem",
                "summary": "Retrieves a Recording resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recording resource response",
                        "schema": {
                            "$ref": "#/definitions/Recording-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteRecordingItem",
                "summary": "Removes the Recording resource.",
                "responses": {
                    "204": {
                        "description": "Recording resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/recordings/{id}/recordedfile": {
            "get": {
                "produces": [
                    "application/octet-stream"
                ],
                "responses": {
                    "200": {
                        "description": "Recording recordedFile"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "tags": [
                    "Provider"
                ],
                "operationId": "/recording_recordedfileRecordingItem",
                "summary": "Retrieves a Recording resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/residential_devices": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getResidentialDeviceCollection",
                "summary": "Retrieves the collection of ResidentialDevice resources.",
                "responses": {
                    "200": {
                        "description": "ResidentialDevice collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ResidentialDevice-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[transformationRuleSet]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[outgoingDdi]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[language]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            }
        },
        "/residential_devices/status": {
            "get": {
                "tags": [
                    "Provider"
                ],
                "operationId": "get_status_collectionResidentialDeviceCollection",
                "produces": [
                    "application/json",
                    "application/ld+json",
                    "text/csv",
                    "application/xml",
                    "text/xml",
                    "text/html",
                    "application/octet-stream"
                ],
                "summary": "Retrieves the collection of ResidentialDevice resources.",
                "responses": {
                    "200": {
                        "description": "ResidentialDevice collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ResidentialDevice-status"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "domainName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[language]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[outgoingDdi]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[transformationRuleSet]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/residential_devices/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getResidentialDeviceItem",
                "summary": "Retrieves a ResidentialDevice resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ResidentialDevice resource response",
                        "schema": {
                            "$ref": "#/definitions/ResidentialDevice-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putResidentialDeviceItem",
                "summary": "Replaces the ResidentialDevice resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ResidentialDevice resource updated",
                        "schema": {
                            "$ref": "#/definitions/ResidentialDevice"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/residential_devices/{id}/status": {
            "get": {
                "tags": [
                    "Provider"
                ],
                "operationId": "get_status_itemResidentialDeviceItem",
                "produces": [
                    "application/json",
                    "application/ld+json",
                    "text/csv",
                    "application/xml",
                    "text/xml",
                    "text/html",
                    "application/octet-stream"
                ],
                "summary": "Retrieves a ResidentialDevice resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ResidentialDevice resource response",
                        "schema": {
                            "$ref": "#/definitions/ResidentialDevice-status"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/retail_accounts": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getRetailAccountCollection",
                "summary": "Retrieves the collection of RetailAccount resources.",
                "responses": {
                    "200": {
                        "description": "RetailAccount collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RetailAccount-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[transformationRuleSet]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[outgoingDdi]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            }
        },
        "/retail_accounts/status": {
            "get": {
                "tags": [
                    "Provider"
                ],
                "operationId": "get_status_collectionRetailAccountCollection",
                "produces": [
                    "application/json",
                    "application/ld+json",
                    "text/csv",
                    "application/xml",
                    "text/xml",
                    "text/html",
                    "application/octet-stream"
                ],
                "summary": "Retrieves the collection of RetailAccount resources.",
                "responses": {
                    "200": {
                        "description": "RetailAccount collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RetailAccount-status"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "domainName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[outgoingDdi]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[transformationRuleSet]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/retail_accounts/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getRetailAccountItem",
                "summary": "Retrieves a RetailAccount resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RetailAccount resource response",
                        "schema": {
                            "$ref": "#/definitions/RetailAccount-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putRetailAccountItem",
                "summary": "Replaces the RetailAccount resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RetailAccount resource updated",
                        "schema": {
                            "$ref": "#/definitions/RetailAccount"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/retail_accounts/{id}/status": {
            "get": {
                "tags": [
                    "Provider"
                ],
                "operationId": "get_status_itemRetailAccountItem",
                "produces": [
                    "application/json",
                    "application/ld+json",
                    "text/csv",
                    "application/xml",
                    "text/xml",
                    "text/html",
                    "application/octet-stream"
                ],
                "summary": "Retrieves a RetailAccount resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RetailAccount resource response",
                        "schema": {
                            "$ref": "#/definitions/RetailAccount-status"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/route_locks": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getRouteLockCollection",
                "summary": "Retrieves the collection of RouteLock resources.",
                "responses": {
                    "200": {
                        "description": "RouteLock collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RouteLock-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "open",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[open]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postRouteLockCollection",
                "summary": "Creates a RouteLock resource.",
                "responses": {
                    "201": {
                        "description": "RouteLock resource created",
                        "schema": {
                            "$ref": "#/definitions/RouteLock"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "routeLock",
                        "in": "body",
                        "description": "The new RouteLock resource",
                        "schema": {
                            "$ref": "#/definitions/RouteLock"
                        }
                    }
                ]
            }
        },
        "/route_locks/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getRouteLockItem",
                "summary": "Retrieves a RouteLock resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RouteLock resource response",
                        "schema": {
                            "$ref": "#/definitions/RouteLock-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putRouteLockItem",
                "summary": "Replaces the RouteLock resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RouteLock resource updated",
                        "schema": {
                            "$ref": "#/definitions/RouteLock"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteRouteLockItem",
                "summary": "Removes the RouteLock resource.",
                "responses": {
                    "204": {
                        "description": "RouteLock resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/schedules": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getScheduleCollection",
                "summary": "Retrieves the collection of Schedule resources.",
                "responses": {
                    "200": {
                        "description": "Schedule collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Schedule-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "exists[friday]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[monday]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[saturday]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[sunday]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[thursday]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[tuesday]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[wednesday]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "friday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "monday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "saturday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "sunday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "thursday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "timeIn",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeIn[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeIn[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeIn[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeIn[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeIn[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeout[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeout[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeout[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeout[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timeout[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tuesday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "wednesday",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[friday]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[monday]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[saturday]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[sunday]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[thursday]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[timeIn]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[timeout]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[tuesday]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[wednesday]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postScheduleCollection",
                "summary": "Creates a Schedule resource.",
                "responses": {
                    "201": {
                        "description": "Schedule resource created",
                        "schema": {
                            "$ref": "#/definitions/Schedule"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "schedule",
                        "in": "body",
                        "description": "The new Schedule resource",
                        "schema": {
                            "$ref": "#/definitions/Schedule"
                        }
                    }
                ]
            }
        },
        "/schedules/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getScheduleItem",
                "summary": "Retrieves a Schedule resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Schedule resource response",
                        "schema": {
                            "$ref": "#/definitions/Schedule-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putScheduleItem",
                "summary": "Replaces the Schedule resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Schedule resource updated",
                        "schema": {
                            "$ref": "#/definitions/Schedule"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteScheduleItem",
                "summary": "Removes the Schedule resource.",
                "responses": {
                    "204": {
                        "description": "Schedule resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/services": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getServiceCollection",
                "summary": "Retrieves the collection of Service resources.",
                "responses": {
                    "200": {
                        "description": "Service collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Service-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "iden",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultCode[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "extraArgs",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[iden]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[defaultCode]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[extraArgs]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            }
        },
        "/services/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getServiceItem",
                "summary": "Retrieves a Service resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service resource response",
                        "schema": {
                            "$ref": "#/definitions/Service-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/terminal_models": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getTerminalModelCollection",
                "summary": "Retrieves the collection of TerminalModel resources.",
                "responses": {
                    "200": {
                        "description": "TerminalModel collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TerminalModel-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "iden",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[iden]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            }
        },
        "/terminal_models/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getTerminalModelItem",
                "summary": "Retrieves a TerminalModel resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TerminalModel resource response",
                        "schema": {
                            "$ref": "#/definitions/TerminalModel-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/terminals": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getTerminalCollection",
                "summary": "Retrieves the collection of Terminal resources.",
                "responses": {
                    "200": {
                        "description": "Terminal collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Terminal-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "exists[terminalModel]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "lastProvisionDate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "terminalModel",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "terminalModel[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postTerminalCollection",
                "summary": "Creates a Terminal resource.",
                "responses": {
                    "201": {
                        "description": "Terminal resource created",
                        "schema": {
                            "$ref": "#/definitions/Terminal"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "terminal",
                        "in": "body",
                        "description": "The new Terminal resource",
                        "schema": {
                            "$ref": "#/definitions/Terminal"
                        }
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            }
        },
        "/terminals/status": {
            "get": {
                "tags": [
                    "Provider"
                ],
                "operationId": "get_status_collectionTerminalCollection",
                "produces": [
                    "application/json",
                    "application/ld+json",
                    "text/csv",
                    "application/xml",
                    "text/xml",
                    "text/html",
                    "application/octet-stream"
                ],
                "summary": "Retrieves the collection of Terminal resources.",
                "responses": {
                    "200": {
                        "description": "Terminal collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Terminal-status"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "domainName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[terminalModel]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "terminalModel",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "terminalModel[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/terminals/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getTerminalItem",
                "summary": "Retrieves a Terminal resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Terminal resource response",
                        "schema": {
                            "$ref": "#/definitions/Terminal-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putTerminalItem",
                "summary": "Replaces the Terminal resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Terminal resource updated",
                        "schema": {
                            "$ref": "#/definitions/Terminal"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteTerminalItem",
                "summary": "Removes the Terminal resource.",
                "responses": {
                    "204": {
                        "description": "Terminal resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/terminals/{id}/status": {
            "get": {
                "tags": [
                    "Provider"
                ],
                "operationId": "get_status_itemTerminalItem",
                "produces": [
                    "application/json",
                    "application/ld+json",
                    "text/csv",
                    "application/xml",
                    "text/xml",
                    "text/html",
                    "application/octet-stream"
                ],
                "summary": "Retrieves a Terminal resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Terminal resource response",
                        "schema": {
                            "$ref": "#/definitions/Terminal-status"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/timezones": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getTimezoneCollection",
                "summary": "Retrieves the collection of Timezone resources.",
                "responses": {
                    "200": {
                        "description": "Timezone collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Timezone-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "tz",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tz[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "country[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[tz]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[country]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_pagination",
                        "in": "query",
                        "required": false,
                        "description": "Enable or disable pagination",
                        "type": "boolean"
                    }
                ]
            }
        },
        "/timezones/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getTimezoneItem",
                "summary": "Retrieves a Timezone resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Timezone resource response",
                        "schema": {
                            "$ref": "#/definitions/Timezone-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/token/exchange": {
            "post": {
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "parameters": [
                    {
                        "name": "token",
                        "in": "formData",
                        "type": "string",
                        "required": true,
                        "description": "Brand admin token"
                    },
                    {
                        "name": "username",
                        "in": "formData",
                        "type": "string",
                        "required": true,
                        "description": "Target client admin user name"
                    }
                ],
                "operationId": "post_auth_token_exchangeTokenCollection",
                "summary": "Creates a Token resource.",
                "responses": {
                    "201": {
                        "description": "Token resource created",
                        "schema": {
                            "$ref": "#/definitions/Token"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/transformation_rule_sets": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getTransformationRuleSetCollection",
                "summary": "Retrieves the collection of TransformationRuleSet resources.",
                "responses": {
                    "200": {
                        "description": "TransformationRuleSet collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TransformationRuleSet-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "internationalCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "internationalCode[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "trunkPrefix",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "trunkPrefix[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "areaCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "areaCode[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "country[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nationalLen",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "nationalLen[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nationalLen[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nationalLen[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nationalLen[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nationalLen[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[internationalCode]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[trunkPrefix]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[areaCode]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[nationalLen]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[description]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[internationalCode]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[trunkPrefix]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[areaCode]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[nationalLen]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[country]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            }
        },
        "/transformation_rule_sets/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getTransformationRuleSetItem",
                "summary": "Retrieves a TransformationRuleSet resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TransformationRuleSet resource response",
                        "schema": {
                            "$ref": "#/definitions/TransformationRuleSet-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getUserCollection",
                "summary": "Retrieves the collection of User resources.",
                "responses": {
                    "200": {
                        "description": "User collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastname",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastname[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callAcl",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callAcl[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "bossAssistant",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "bossAssistant[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "bossAssistantWhiteList",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "bossAssistantWhiteList[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "transformationRuleSet[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "terminal",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "terminal[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "extension",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "extension[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timezone[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdi[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdiRule",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "outgoingDdiRule[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "voicemailLocution",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "voicemailLocution[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[lastname]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[callAcl]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[bossAssistant]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[bossAssistantWhiteList]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[transformationRuleSet]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[language]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[terminal]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[extension]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[timezone]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[outgoingDdi]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[outgoingDdiRule]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[voicemailLocution]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postUserCollection",
                "summary": "Creates a User resource.",
                "responses": {
                    "201": {
                        "description": "User resource created",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "The new User resource",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ]
            }
        },
        "/users/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getUserItem",
                "summary": "Retrieves a User resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User resource response",
                        "schema": {
                            "$ref": "#/definitions/User-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putUserItem",
                "summary": "Replaces the User resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User resource updated",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteUserItem",
                "summary": "Removes the User resource.",
                "responses": {
                    "204": {
                        "description": "User resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/users_cdrs": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json",
                    "text/csv"
                ],
                "tags": [
                    "Kam"
                ],
                "operationId": "getUsersCdrCollection",
                "summary": "Retrieves the collection of UsersCdr resources.",
                "responses": {
                    "200": {
                        "description": "UsersCdr collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UsersCdr-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "callee",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callee[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "caller",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "caller[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration",
                        "in": "query",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "duration[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endTime[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endTime[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endTime[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endTime[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endTime[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[callee]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[caller]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[direction]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[friend]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[residentialDevice]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[retailAccount]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[user]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "friend",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "friend[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "residentialDevice",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "residentialDevice[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "retailAccount",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "retailAccount[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[callee]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[caller]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[direction]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[duration]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[endTime]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[startTime]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_pagination",
                        "in": "query",
                        "required": false,
                        "description": "Enable or disable pagination",
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            }
        },
        "/users_cdrs/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Kam"
                ],
                "operationId": "getUsersCdrItem",
                "summary": "Retrieves a UsersCdr resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UsersCdr resource response",
                        "schema": {
                            "$ref": "#/definitions/UsersCdr-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        }
    },
    "security": [
        {
            "bearer": []
        }
    ],
    "securityDefinitions": {
        "bearer": {
            "type": "apiKey",
            "in": "header",
            "description": "Value for the Authorization header",
            "name": "Authorization"
        }
    },
    "definitions": {
        "ActiveCalls": {
            "type": "object",
            "properties": {
                "inbound": {
                    "description": "",
                    "type": "integer"
                },
                "outbound": {
                    "description": "",
                    "type": "integer"
                },
                "total": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "BillableCall-collection": {
            "type": "object",
            "properties": {
                "startTime": {
                    "format": "date-time",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "invoice": {
                    "description": "",
                    "type": "integer"
                },
                "ddi": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "company"
            ]
        },
        "BillableCall-detailed": {
            "type": "object",
            "properties": {
                "startTime": {
                    "format": "date-time",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "ratingPlanGroup": {
                    "$ref": "#/definitions/RatingPlanGroup"
                },
                "invoice": {
                    "$ref": "#/definitions/Invoice"
                },
                "ddi": {
                    "$ref": "#/definitions/Ddi"
                }
            },
            "required": [
                "company"
            ]
        },
        "Calendar": {
            "type": "object",
            "required": [
                "name",
                "company"
            ],
            "properties": {
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Calendar-collection": {
            "type": "object"
        },
        "Calendar-detailed": {
            "type": "object",
            "required": [
                "company"
            ],
            "properties": {
                "company": {
                    "$ref": "#/definitions/Company"
                }
            }
        },
        "CalendarPeriod": {
            "type": "object",
            "required": [
                "startDate",
                "endDate",
                "calendar",
                "locution",
                "extension",
                "voiceMailUser",
                "numberCountry"
            ],
            "properties": {
                "startDate": {
                    "format": "date",
                    "description": "",
                    "type": "string"
                },
                "endDate": {
                    "format": "date",
                    "description": "",
                    "type": "string"
                },
                "routeType": {
                    "enum": [
                        "number",
                        "extension",
                        "voicemail"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "numberValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "calendar": {
                    "description": "",
                    "type": "integer"
                },
                "locution": {
                    "description": "",
                    "type": "integer"
                },
                "extension": {
                    "description": "",
                    "type": "integer"
                },
                "voiceMailUser": {
                    "description": "",
                    "type": "integer"
                },
                "numberCountry": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "CalendarPeriod-collection": {
            "type": "object",
            "properties": {
                "startDate": {
                    "format": "date",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                },
                "endDate": {
                    "format": "date",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "CalendarPeriod-detailed": {
            "type": "object",
            "properties": {
                "startDate": {
                    "format": "date",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                },
                "endDate": {
                    "format": "date",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                },
                "calendar": {
                    "$ref": "#/definitions/Calendar"
                },
                "locution": {
                    "$ref": "#/definitions/Locution"
                },
                "extension": {
                    "$ref": "#/definitions/Extension"
                },
                "voiceMailUser": {
                    "$ref": "#/definitions/User"
                },
                "numberCountry": {
                    "$ref": "#/definitions/Country"
                }
            },
            "required": [
                "calendar",
                "locution",
                "extension",
                "voiceMailUser",
                "numberCountry"
            ]
        },
        "CalendarPeriodsRelSchedule": {
            "type": "object",
            "properties": {
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "calendarPeriod": {
                    "description": "",
                    "type": "integer"
                },
                "schedule": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "calendarPeriod",
                "schedule"
            ]
        },
        "CalendarPeriodsRelSchedule-detailed": {
            "type": "object",
            "required": [
                "calendarPeriod",
                "schedule"
            ],
            "properties": {
                "calendarPeriod": {
                    "$ref": "#/definitions/CalendarPeriod"
                },
                "schedule": {
                    "$ref": "#/definitions/Schedule"
                }
            }
        },
        "CalendarPeriodsRelSchedule-detailedCollection": {
            "type": "object",
            "required": [
                "calendarPeriod",
                "schedule"
            ],
            "properties": {
                "calendarPeriod": {
                    "$ref": "#/definitions/CalendarPeriod"
                },
                "schedule": {
                    "$ref": "#/definitions/Schedule"
                }
            }
        },
        "CallAcl": {
            "type": "object",
            "required": [
                "name",
                "defaultPolicy",
                "company"
            ],
            "properties": {
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "defaultPolicy": {
                    "enum": [
                        "allow",
                        "deny"
                    ],
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "CallAcl-collection": {
            "type": "object"
        },
        "CallAcl-detailed": {
            "type": "object",
            "required": [
                "company"
            ],
            "properties": {
                "company": {
                    "$ref": "#/definitions/Company"
                }
            }
        },
        "CallAclRelMatchList": {
            "type": "object",
            "required": [
                "priority",
                "policy",
                "callAcl",
                "matchList"
            ],
            "properties": {
                "priority": {
                    "description": "",
                    "type": "integer"
                },
                "policy": {
                    "enum": [
                        "allow",
                        "deny"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "callAcl": {
                    "description": "",
                    "type": "integer"
                },
                "matchList": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "CallAclRelMatchList-detailed": {
            "type": "object",
            "required": [
                "callAcl",
                "matchList"
            ],
            "properties": {
                "callAcl": {
                    "$ref": "#/definitions/CallAcl"
                },
                "matchList": {
                    "$ref": "#/definitions/MatchList"
                }
            }
        },
        "CallAclRelMatchList-detailedCollection": {
            "type": "object",
            "required": [
                "callAcl",
                "matchList"
            ],
            "properties": {
                "callAcl": {
                    "$ref": "#/definitions/CallAcl"
                },
                "matchList": {
                    "$ref": "#/definitions/MatchList"
                }
            }
        },
        "CallCsvReport-collection": {
            "type": "object",
            "properties": {
                "inDate": {
                    "format": "date-time",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                },
                "outDate": {
                    "format": "date-time",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "CallCsvReport-detailed": {
            "type": "object",
            "properties": {
                "inDate": {
                    "format": "date-time",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                },
                "outDate": {
                    "format": "date-time",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                },
                "createdOn": {
                    "format": "date-time",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                },
                "csv": {
                    "readOnly": true,
                    "$ref": "#/definitions/Csv"
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "callCsvScheduler": {
                    "$ref": "#/definitions/CallCsvScheduler"
                }
            },
            "required": [
                "company"
            ]
        },
        "CallCsvScheduler": {
            "type": "object",
            "required": [
                "name",
                "unit",
                "frequency",
                "email",
                "company"
            ],
            "properties": {
                "name": {
                    "maxLength": 40,
                    "description": "",
                    "type": "string"
                },
                "unit": {
                    "default": "month",
                    "enum": [
                        "day",
                        "week",
                        "month"
                    ],
                    "maxLength": 30,
                    "description": "",
                    "example": "month",
                    "type": "string"
                },
                "frequency": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "callDirection": {
                    "default": "outbound",
                    "enum": [
                        "inbound",
                        "outbound"
                    ],
                    "description": "",
                    "example": "outbound",
                    "type": "string"
                },
                "email": {
                    "maxLength": 140,
                    "description": "",
                    "type": "string"
                },
                "lastExecution": {
                    "readOnly": true,
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "lastExecutionError": {
                    "readOnly": true,
                    "maxLength": 300,
                    "description": "",
                    "type": "string"
                },
                "nextExecution": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "callCsvNotificationTemplate": {
                    "description": "",
                    "type": "integer"
                },
                "ddi": {
                    "description": "",
                    "type": "integer"
                },
                "retailAccount": {
                    "description": "",
                    "type": "integer"
                },
                "residentialDevice": {
                    "description": "",
                    "type": "integer"
                },
                "user": {
                    "description": "",
                    "type": "integer"
                },
                "fax": {
                    "description": "",
                    "type": "integer"
                },
                "friend": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "CallCsvScheduler-collection": {
            "type": "object",
            "properties": {
                "lastExecution": {
                    "readOnly": true,
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "nextExecution": {
                    "format": "date-time",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "CallCsvScheduler-detailed": {
            "type": "object",
            "properties": {
                "lastExecution": {
                    "readOnly": true,
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "nextExecution": {
                    "format": "date-time",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "callCsvNotificationTemplate": {
                    "$ref": "#/definitions/NotificationTemplate"
                },
                "ddi": {
                    "$ref": "#/definitions/Ddi"
                },
                "retailAccount": {
                    "$ref": "#/definitions/RetailAccount"
                },
                "residentialDevice": {
                    "$ref": "#/definitions/ResidentialDevice"
                },
                "user": {
                    "$ref": "#/definitions/User"
                },
                "fax": {
                    "$ref": "#/definitions/Fax"
                },
                "friend": {
                    "$ref": "#/definitions/Friend"
                }
            },
            "required": [
                "company"
            ]
        },
        "CallForwardSetting": {
            "type": "object",
            "required": [
                "callTypeFilter",
                "callForwardType",
                "noAnswerTimeout",
                "enabled"
            ],
            "properties": {
                "callTypeFilter": {
                    "enum": [
                        "internal",
                        "external",
                        "both"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "callForwardType": {
                    "enum": [
                        "inconditional",
                        "noAnswer",
                        "busy",
                        "userNotRegistered"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "targetType": {
                    "enum": [
                        "number",
                        "extension",
                        "voicemail"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "numberValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "noAnswerTimeout": {
                    "default": "10",
                    "description": "",
                    "example": "10",
                    "type": "integer"
                },
                "enabled": {
                    "default": "1",
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "user": {
                    "description": "",
                    "type": "integer"
                },
                "extension": {
                    "description": "",
                    "type": "integer"
                },
                "voiceMailUser": {
                    "description": "",
                    "type": "integer"
                },
                "numberCountry": {
                    "description": "",
                    "type": "integer"
                },
                "residentialDevice": {
                    "description": "",
                    "type": "integer"
                },
                "retailAccount": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "CallForwardSetting-collection": {
            "type": "object"
        },
        "CallForwardSetting-detailed": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/User"
                },
                "extension": {
                    "$ref": "#/definitions/Extension"
                },
                "voiceMailUser": {
                    "$ref": "#/definitions/User"
                },
                "numberCountry": {
                    "$ref": "#/definitions/Country"
                },
                "residentialDevice": {
                    "$ref": "#/definitions/ResidentialDevice"
                },
                "retailAccount": {
                    "$ref": "#/definitions/RetailAccount"
                }
            }
        },
        "CallForwardSetting-detailedCollection": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/User"
                },
                "extension": {
                    "$ref": "#/definitions/Extension"
                },
                "voiceMailUser": {
                    "$ref": "#/definitions/User"
                },
                "numberCountry": {
                    "$ref": "#/definitions/Country"
                }
            }
        },
        "CallStats": {
            "type": "object",
            "properties": {
                "totalCalls": {
                    "description": "",
                    "type": "integer"
                },
                "totalDetours": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Company": {
            "type": "object",
            "required": [
                "type",
                "distributeMethod",
                "maxCalls",
                "maxDailyUsage",
                "postalAddress",
                "postalCode",
                "town",
                "province",
                "countryName",
                "allowRecordingRemoval",
                "billingMethod",
                "language",
                "defaultTimezone",
                "country",
                "transformationRuleSet",
                "outgoingDdi"
            ],
            "properties": {
                "type": {
                    "default": "vpbx",
                    "enum": [
                        "vpbx",
                        "retail",
                        "wholesale",
                        "residential"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "vpbx",
                    "type": "string"
                },
                "name": {
                    "readOnly": true,
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "domainUsers": {
                    "readOnly": true,
                    "maxLength": 190,
                    "description": "",
                    "type": "string"
                },
                "nif": {
                    "readOnly": true,
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "distributeMethod": {
                    "default": "hash",
                    "enum": [
                        "static",
                        "rr",
                        "hash"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "hash",
                    "type": "string"
                },
                "maxCalls": {
                    "default": "0",
                    "minimum": 0,
                    "description": "",
                    "example": "0",
                    "type": "integer"
                },
                "maxDailyUsage": {
                    "default": "1000000",
                    "minimum": 0,
                    "description": "",
                    "example": "1000000",
                    "type": "integer"
                },
                "currentDayUsage": {
                    "default": "0",
                    "format": "float",
                    "description": "",
                    "example": "0",
                    "type": "number"
                },
                "maxDailyUsageEmail": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "postalAddress": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "postalCode": {
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "town": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "province": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "countryName": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "ipfilter": {
                    "default": "1",
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "onDemandRecord": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "integer"
                },
                "allowRecordingRemoval": {
                    "default": "1",
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "onDemandRecordCode": {
                    "readOnly": true,
                    "maxLength": 3,
                    "description": "",
                    "type": "string"
                },
                "externallyextraopts": {
                    "maxLength": 65535,
                    "description": "",
                    "type": "string"
                },
                "recordingsLimitMB": {
                    "description": "",
                    "type": "integer"
                },
                "recordingsLimitEmail": {
                    "maxLength": 250,
                    "description": "",
                    "type": "string"
                },
                "billingMethod": {
                    "default": "postpaid",
                    "enum": [
                        "postpaid",
                        "prepaid",
                        "pseudoprepaid"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "postpaid",
                    "type": "string"
                },
                "balance": {
                    "readOnly": true,
                    "default": "0",
                    "format": "float",
                    "description": "",
                    "example": "0",
                    "type": "number"
                },
                "showInvoices": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "language": {
                    "description": "",
                    "type": "integer"
                },
                "defaultTimezone": {
                    "description": "",
                    "type": "integer"
                },
                "country": {
                    "description": "",
                    "type": "integer"
                },
                "transformationRuleSet": {
                    "description": "",
                    "type": "integer"
                },
                "outgoingDdi": {
                    "description": "",
                    "type": "integer"
                },
                "outgoingDdiRule": {
                    "description": "",
                    "type": "integer"
                },
                "voicemailNotificationTemplate": {
                    "description": "",
                    "type": "integer"
                },
                "faxNotificationTemplate": {
                    "description": "",
                    "type": "integer"
                },
                "invoiceNotificationTemplate": {
                    "description": "",
                    "type": "integer"
                },
                "callCsvNotificationTemplate": {
                    "description": "",
                    "type": "integer"
                },
                "maxDailyUsageNotificationTemplate": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Company-collection": {
            "type": "object"
        },
        "Company-detailed": {
            "type": "object",
            "required": [
                "language",
                "defaultTimezone",
                "country",
                "transformationRuleSet",
                "outgoingDdi"
            ],
            "properties": {
                "language": {
                    "$ref": "#/definitions/Language"
                },
                "defaultTimezone": {
                    "$ref": "#/definitions/Timezone"
                },
                "country": {
                    "$ref": "#/definitions/Country"
                },
                "transformationRuleSet": {
                    "$ref": "#/definitions/TransformationRuleSet"
                },
                "outgoingDdi": {
                    "$ref": "#/definitions/Ddi"
                },
                "outgoingDdiRule": {
                    "$ref": "#/definitions/OutgoingDdiRule"
                },
                "voicemailNotificationTemplate": {
                    "$ref": "#/definitions/NotificationTemplate"
                },
                "faxNotificationTemplate": {
                    "$ref": "#/definitions/NotificationTemplate"
                },
                "invoiceNotificationTemplate": {
                    "$ref": "#/definitions/NotificationTemplate"
                },
                "callCsvNotificationTemplate": {
                    "$ref": "#/definitions/NotificationTemplate"
                },
                "maxDailyUsageNotificationTemplate": {
                    "$ref": "#/definitions/NotificationTemplate"
                },
                "featureIds": {
                    "description": "Active feature ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "CompanyService": {
            "type": "object",
            "required": [
                "code",
                "company",
                "service"
            ],
            "properties": {
                "code": {
                    "maxLength": 3,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "service": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "CompanyService-collection": {
            "type": "object"
        },
        "CompanyService-detailed": {
            "type": "object",
            "required": [
                "company",
                "service"
            ],
            "properties": {
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "service": {
                    "$ref": "#/definitions/Service"
                }
            }
        },
        "ConditionalRoute": {
            "type": "object",
            "required": [
                "name",
                "company",
                "ivr",
                "huntGroup",
                "voicemailUser",
                "user",
                "queue",
                "locution",
                "conferenceRoom",
                "extension",
                "numberCountry"
            ],
            "properties": {
                "name": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "routetype": {
                    "enum": [
                        "user",
                        "number",
                        "ivr",
                        "huntGroup",
                        "voicemail",
                        "friend",
                        "queue",
                        "conferenceRoom",
                        "extension"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "numbervalue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "friendvalue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "ivr": {
                    "description": "",
                    "type": "integer"
                },
                "huntGroup": {
                    "description": "",
                    "type": "integer"
                },
                "voicemailUser": {
                    "description": "",
                    "type": "integer"
                },
                "user": {
                    "description": "",
                    "type": "integer"
                },
                "queue": {
                    "description": "",
                    "type": "integer"
                },
                "locution": {
                    "description": "",
                    "type": "integer"
                },
                "conferenceRoom": {
                    "description": "",
                    "type": "integer"
                },
                "extension": {
                    "description": "",
                    "type": "integer"
                },
                "numberCountry": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "ConditionalRoute-collection": {
            "type": "object"
        },
        "ConditionalRoute-detailed": {
            "type": "object",
            "required": [
                "company",
                "ivr",
                "huntGroup",
                "voicemailUser",
                "user",
                "queue",
                "locution",
                "conferenceRoom",
                "extension",
                "numberCountry"
            ],
            "properties": {
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "ivr": {
                    "$ref": "#/definitions/Ivr"
                },
                "huntGroup": {
                    "$ref": "#/definitions/HuntGroup"
                },
                "voicemailUser": {
                    "$ref": "#/definitions/User"
                },
                "user": {
                    "$ref": "#/definitions/User"
                },
                "queue": {
                    "$ref": "#/definitions/Queue"
                },
                "locution": {
                    "$ref": "#/definitions/Locution"
                },
                "conferenceRoom": {
                    "$ref": "#/definitions/ConferenceRoom"
                },
                "extension": {
                    "$ref": "#/definitions/Extension"
                },
                "numberCountry": {
                    "$ref": "#/definitions/Country"
                }
            }
        },
        "ConditionalRoutesCondition": {
            "type": "object",
            "required": [
                "priority",
                "conditionalRoute"
            ],
            "properties": {
                "priority": {
                    "default": "1",
                    "description": "",
                    "example": "1",
                    "type": "integer"
                },
                "routeType": {
                    "enum": [
                        "user",
                        "number",
                        "ivr",
                        "huntGroup",
                        "voicemail",
                        "friend",
                        "queue",
                        "conferenceRoom",
                        "extension"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "numberValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "friendValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "conditionalRoute": {
                    "description": "",
                    "type": "integer"
                },
                "ivr": {
                    "description": "",
                    "type": "integer"
                },
                "huntGroup": {
                    "description": "",
                    "type": "integer"
                },
                "voicemailUser": {
                    "description": "",
                    "type": "integer"
                },
                "user": {
                    "description": "",
                    "type": "integer"
                },
                "queue": {
                    "description": "",
                    "type": "integer"
                },
                "locution": {
                    "description": "",
                    "type": "integer"
                },
                "conferenceRoom": {
                    "description": "",
                    "type": "integer"
                },
                "extension": {
                    "description": "",
                    "type": "integer"
                },
                "numberCountry": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "ConditionalRoutesCondition-collection": {
            "type": "object"
        },
        "ConditionalRoutesCondition-detailed": {
            "type": "object",
            "required": [
                "conditionalRoute"
            ],
            "properties": {
                "conditionalRoute": {
                    "$ref": "#/definitions/ConditionalRoute"
                },
                "ivr": {
                    "$ref": "#/definitions/Ivr"
                },
                "huntGroup": {
                    "$ref": "#/definitions/HuntGroup"
                },
                "voicemailUser": {
                    "$ref": "#/definitions/User"
                },
                "user": {
                    "$ref": "#/definitions/User"
                },
                "queue": {
                    "$ref": "#/definitions/Queue"
                },
                "locution": {
                    "$ref": "#/definitions/Locution"
                },
                "conferenceRoom": {
                    "$ref": "#/definitions/ConferenceRoom"
                },
                "extension": {
                    "$ref": "#/definitions/Extension"
                },
                "numberCountry": {
                    "$ref": "#/definitions/Country"
                },
                "matchListIds": {
                    "description": "Matchlist ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "scheduleIds": {
                    "description": "Schedule ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "calendarIds": {
                    "description": "Calendar ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "routeLockIds": {
                    "description": "Route lock ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "ConditionalRoutesCondition-withInverseRelationships": {
            "type": "object",
            "required": [
                "priority",
                "conditionalRoute"
            ],
            "properties": {
                "priority": {
                    "default": "1",
                    "description": "",
                    "type": "integer"
                },
                "routeType": {
                    "enum": [
                        "user",
                        "number",
                        "ivr",
                        "huntGroup",
                        "voicemail",
                        "friend",
                        "queue",
                        "conferenceRoom",
                        "extension"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "numberValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "friendValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "conditionalRoute": {
                    "$ref": "#/definitions/ConditionalRoute"
                },
                "ivr": {
                    "$ref": "#/definitions/Ivr"
                },
                "huntGroup": {
                    "$ref": "#/definitions/HuntGroup"
                },
                "voicemailUser": {
                    "$ref": "#/definitions/User"
                },
                "user": {
                    "$ref": "#/definitions/User"
                },
                "queue": {
                    "$ref": "#/definitions/Queue"
                },
                "locution": {
                    "$ref": "#/definitions/Locution"
                },
                "conferenceRoom": {
                    "$ref": "#/definitions/ConferenceRoom"
                },
                "extension": {
                    "$ref": "#/definitions/Extension"
                },
                "numberCountry": {
                    "$ref": "#/definitions/Country"
                },
                "matchListIds": {
                    "description": "Matchlist ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "scheduleIds": {
                    "description": "Schedule ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "calendarIds": {
                    "description": "Calendar ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "routeLockIds": {
                    "description": "Route lock ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "ConditionalRoutesConditionsRelCalendar": {
            "type": "object",
            "properties": {
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "condition": {
                    "description": "",
                    "type": "integer"
                },
                "calendar": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "condition",
                "calendar"
            ]
        },
        "ConditionalRoutesConditionsRelCalendar-detailed": {
            "type": "object",
            "required": [
                "condition",
                "calendar"
            ],
            "properties": {
                "condition": {
                    "$ref": "#/definitions/ConditionalRoutesCondition"
                },
                "calendar": {
                    "$ref": "#/definitions/Calendar"
                }
            }
        },
        "ConditionalRoutesConditionsRelCalendar-detailedCollection": {
            "type": "object",
            "required": [
                "condition",
                "calendar"
            ],
            "properties": {
                "condition": {
                    "$ref": "#/definitions/ConditionalRoutesCondition"
                },
                "calendar": {
                    "$ref": "#/definitions/Calendar"
                }
            }
        },
        "ConditionalRoutesConditionsRelMatchlist": {
            "type": "object",
            "properties": {
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "condition": {
                    "description": "",
                    "type": "integer"
                },
                "matchlist": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "condition",
                "matchlist"
            ]
        },
        "ConditionalRoutesConditionsRelMatchlist-detailed": {
            "type": "object",
            "required": [
                "condition",
                "matchlist"
            ],
            "properties": {
                "condition": {
                    "$ref": "#/definitions/ConditionalRoutesCondition"
                },
                "matchlist": {
                    "$ref": "#/definitions/MatchList"
                }
            }
        },
        "ConditionalRoutesConditionsRelMatchlist-detailedCollection": {
            "type": "object",
            "required": [
                "condition",
                "matchlist"
            ],
            "properties": {
                "condition": {
                    "$ref": "#/definitions/ConditionalRoutesCondition"
                },
                "matchlist": {
                    "$ref": "#/definitions/MatchList"
                }
            }
        },
        "ConditionalRoutesConditionsRelRouteLock": {
            "type": "object",
            "properties": {
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "condition": {
                    "description": "",
                    "type": "integer"
                },
                "routeLock": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "condition",
                "routeLock"
            ]
        },
        "ConditionalRoutesConditionsRelRouteLock-detailed": {
            "type": "object",
            "required": [
                "condition",
                "routeLock"
            ],
            "properties": {
                "condition": {
                    "$ref": "#/definitions/ConditionalRoutesCondition"
                },
                "routeLock": {
                    "$ref": "#/definitions/RouteLock"
                }
            }
        },
        "ConditionalRoutesConditionsRelRouteLock-detailedCollection": {
            "type": "object",
            "required": [
                "condition",
                "routeLock"
            ],
            "properties": {
                "condition": {
                    "$ref": "#/definitions/ConditionalRoutesCondition"
                },
                "routeLock": {
                    "$ref": "#/definitions/RouteLock"
                }
            }
        },
        "ConditionalRoutesConditionsRelSchedule": {
            "type": "object",
            "properties": {
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "condition": {
                    "description": "",
                    "type": "integer"
                },
                "schedule": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "condition",
                "schedule"
            ]
        },
        "ConditionalRoutesConditionsRelSchedule-detailed": {
            "type": "object",
            "required": [
                "condition",
                "schedule"
            ],
            "properties": {
                "condition": {
                    "$ref": "#/definitions/ConditionalRoutesCondition"
                },
                "schedule": {
                    "$ref": "#/definitions/Schedule"
                }
            }
        },
        "ConditionalRoutesConditionsRelSchedule-detailedCollection": {
            "type": "object",
            "required": [
                "condition",
                "schedule"
            ],
            "properties": {
                "condition": {
                    "$ref": "#/definitions/ConditionalRoutesCondition"
                },
                "schedule": {
                    "$ref": "#/definitions/Schedule"
                }
            }
        },
        "ConferenceRoom": {
            "type": "object",
            "required": [
                "name",
                "pinProtected",
                "maxMembers",
                "company"
            ],
            "properties": {
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "pinProtected": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "pinCode": {
                    "maxLength": 6,
                    "description": "",
                    "type": "string"
                },
                "maxMembers": {
                    "default": "0",
                    "minimum": 0,
                    "description": "",
                    "example": "0",
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "ConferenceRoom-collection": {
            "type": "object"
        },
        "ConferenceRoom-detailed": {
            "type": "object",
            "required": [
                "company"
            ],
            "properties": {
                "company": {
                    "$ref": "#/definitions/Company"
                }
            }
        },
        "Country": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "default": "",
                    "maxLength": 100,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "countryCode": {
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "name": {
                    "$ref": "#/definitions/Country_Name"
                },
                "zone": {
                    "$ref": "#/definitions/Country_Zone"
                }
            }
        },
        "Country-collection": {
            "type": "object",
            "properties": {
                "name": {
                    "readOnly": true,
                    "$ref": "#/definitions/Country_Name"
                }
            }
        },
        "Country-detailed": {
            "type": "object",
            "properties": {
                "name": {
                    "readOnly": true,
                    "$ref": "#/definitions/Country_Name"
                },
                "zone": {
                    "readOnly": true,
                    "$ref": "#/definitions/Country_Zone"
                }
            }
        },
        "Country_Name": {
            "type": "object",
            "properties": {
                "en": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "es": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "ca": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "it": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "Country_Zone": {
            "type": "object",
            "required": [
                "en",
                "es",
                "ca",
                "it"
            ],
            "properties": {
                "en": {
                    "default": "",
                    "maxLength": 55,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "es": {
                    "default": "",
                    "maxLength": 55,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "ca": {
                    "default": "",
                    "maxLength": 55,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "it": {
                    "default": "",
                    "maxLength": 55,
                    "description": "",
                    "example": "",
                    "type": "string"
                }
            }
        },
        "Csv": {
            "type": "object",
            "properties": {
                "fileSize": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "mimeType": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "baseName": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "Ddi": {
            "type": "object",
            "properties": {
                "ddi": {
                    "readOnly": true,
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "ddie164": {
                    "readOnly": true,
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "recordCalls": {
                    "default": "none",
                    "enum": [
                        "none",
                        "all",
                        "inbound",
                        "outbound"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "none",
                    "type": "string"
                },
                "displayName": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "routeType": {
                    "enum": [
                        "user",
                        "ivr",
                        "huntGroup",
                        "fax",
                        "conferenceRoom",
                        "friend",
                        "queue",
                        "conditional",
                        "residential",
                        "retail"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "billInboundCalls": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "friendValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "conferenceRoom": {
                    "description": "",
                    "type": "integer"
                },
                "language": {
                    "description": "",
                    "type": "integer"
                },
                "queue": {
                    "description": "",
                    "type": "integer"
                },
                "externalCallFilter": {
                    "description": "",
                    "type": "integer"
                },
                "user": {
                    "description": "",
                    "type": "integer"
                },
                "ivr": {
                    "description": "",
                    "type": "integer"
                },
                "huntGroup": {
                    "description": "",
                    "type": "integer"
                },
                "fax": {
                    "description": "",
                    "type": "integer"
                },
                "country": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "residentialDevice": {
                    "description": "",
                    "type": "integer"
                },
                "conditionalRoute": {
                    "description": "",
                    "type": "integer"
                },
                "retailAccount": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "recordCalls",
                "billInboundCalls",
                "company"
            ]
        },
        "Ddi-collection": {
            "type": "object"
        },
        "Ddi-detailed": {
            "type": "object",
            "required": [
                "company"
            ],
            "properties": {
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "conferenceRoom": {
                    "$ref": "#/definitions/ConferenceRoom"
                },
                "language": {
                    "$ref": "#/definitions/Language"
                },
                "queue": {
                    "$ref": "#/definitions/Queue"
                },
                "externalCallFilter": {
                    "$ref": "#/definitions/ExternalCallFilter"
                },
                "user": {
                    "$ref": "#/definitions/User"
                },
                "ivr": {
                    "$ref": "#/definitions/Ivr"
                },
                "huntGroup": {
                    "$ref": "#/definitions/HuntGroup"
                },
                "fax": {
                    "$ref": "#/definitions/Fax"
                },
                "country": {
                    "readOnly": true,
                    "$ref": "#/definitions/Country"
                },
                "residentialDevice": {
                    "$ref": "#/definitions/ResidentialDevice"
                },
                "conditionalRoute": {
                    "$ref": "#/definitions/ConditionalRoute"
                },
                "retailAccount": {
                    "$ref": "#/definitions/RetailAccount"
                }
            }
        },
        "Description": {
            "type": "object",
            "required": [
                "en",
                "es",
                "ca",
                "it"
            ],
            "properties": {
                "en": {
                    "default": "",
                    "maxLength": 255,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "es": {
                    "default": "",
                    "maxLength": 255,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "ca": {
                    "default": "",
                    "maxLength": 255,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "it": {
                    "default": "",
                    "maxLength": 255,
                    "description": "",
                    "example": "",
                    "type": "string"
                }
            }
        },
        "EncodedFile": {
            "type": "object",
            "properties": {
                "fileSize": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "mimeType": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "baseName": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "Extension": {
            "type": "object",
            "required": [
                "number",
                "company"
            ],
            "properties": {
                "number": {
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "routeType": {
                    "enum": [
                        "user",
                        "number",
                        "ivr",
                        "huntGroup",
                        "conferenceRoom",
                        "friend",
                        "queue",
                        "conditional"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "numberValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "friendValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "ivr": {
                    "description": "",
                    "type": "integer"
                },
                "huntGroup": {
                    "description": "",
                    "type": "integer"
                },
                "conferenceRoom": {
                    "description": "",
                    "type": "integer"
                },
                "user": {
                    "description": "",
                    "type": "integer"
                },
                "queue": {
                    "description": "",
                    "type": "integer"
                },
                "conditionalRoute": {
                    "description": "",
                    "type": "integer"
                },
                "numberCountry": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Extension-collection": {
            "type": "object"
        },
        "Extension-detailed": {
            "type": "object",
            "required": [
                "company"
            ],
            "properties": {
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "ivr": {
                    "$ref": "#/definitions/Ivr"
                },
                "huntGroup": {
                    "$ref": "#/definitions/HuntGroup"
                },
                "conferenceRoom": {
                    "$ref": "#/definitions/ConferenceRoom"
                },
                "user": {
                    "$ref": "#/definitions/User"
                },
                "queue": {
                    "$ref": "#/definitions/Queue"
                },
                "conditionalRoute": {
                    "$ref": "#/definitions/ConditionalRoute"
                },
                "numberCountry": {
                    "$ref": "#/definitions/Country"
                }
            }
        },
        "ExternalCallFilter": {
            "type": "object",
            "required": [
                "name",
                "company"
            ],
            "properties": {
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "holidayTargetType": {
                    "enum": [
                        "number",
                        "extension",
                        "voicemail"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "holidayNumberValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "outOfScheduleTargetType": {
                    "enum": [
                        "number",
                        "extension",
                        "voicemail"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "outOfScheduleNumberValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "welcomeLocution": {
                    "description": "",
                    "type": "integer"
                },
                "holidayLocution": {
                    "description": "",
                    "type": "integer"
                },
                "outOfScheduleLocution": {
                    "description": "",
                    "type": "integer"
                },
                "holidayExtension": {
                    "description": "",
                    "type": "integer"
                },
                "outOfScheduleExtension": {
                    "description": "",
                    "type": "integer"
                },
                "holidayVoiceMailUser": {
                    "description": "",
                    "type": "integer"
                },
                "outOfScheduleVoiceMailUser": {
                    "description": "",
                    "type": "integer"
                },
                "holidayNumberCountry": {
                    "description": "",
                    "type": "integer"
                },
                "outOfScheduleNumberCountry": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "ExternalCallFilter-collection": {
            "type": "object"
        },
        "ExternalCallFilter-detailed": {
            "type": "object",
            "required": [
                "company"
            ],
            "properties": {
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "welcomeLocution": {
                    "$ref": "#/definitions/Locution"
                },
                "holidayLocution": {
                    "$ref": "#/definitions/Locution"
                },
                "outOfScheduleLocution": {
                    "$ref": "#/definitions/Locution"
                },
                "holidayExtension": {
                    "$ref": "#/definitions/Extension"
                },
                "outOfScheduleExtension": {
                    "$ref": "#/definitions/Extension"
                },
                "holidayVoiceMailUser": {
                    "$ref": "#/definitions/User"
                },
                "outOfScheduleVoiceMailUser": {
                    "$ref": "#/definitions/User"
                },
                "holidayNumberCountry": {
                    "$ref": "#/definitions/Country"
                },
                "outOfScheduleNumberCountry": {
                    "$ref": "#/definitions/Country"
                },
                "scheduleIds": {
                    "description": "Schedule ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "calendarIds": {
                    "description": "Calendar ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "whiteListIds": {
                    "description": "Whitelisted matchlists",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "blackListIds": {
                    "description": "Blacklisted matchlists",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "ExternalCallFilter-withInverseRelationships": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "holidayTargetType": {
                    "enum": [
                        "number",
                        "extension",
                        "voicemail"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "holidayNumberValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "outOfScheduleTargetType": {
                    "enum": [
                        "number",
                        "extension",
                        "voicemail"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "outOfScheduleNumberValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "welcomeLocution": {
                    "$ref": "#/definitions/Locution"
                },
                "holidayLocution": {
                    "$ref": "#/definitions/Locution"
                },
                "outOfScheduleLocution": {
                    "$ref": "#/definitions/Locution"
                },
                "holidayExtension": {
                    "$ref": "#/definitions/Extension"
                },
                "outOfScheduleExtension": {
                    "$ref": "#/definitions/Extension"
                },
                "holidayVoiceMailUser": {
                    "$ref": "#/definitions/User"
                },
                "outOfScheduleVoiceMailUser": {
                    "$ref": "#/definitions/User"
                },
                "holidayNumberCountry": {
                    "$ref": "#/definitions/Country"
                },
                "outOfScheduleNumberCountry": {
                    "$ref": "#/definitions/Country"
                },
                "scheduleIds": {
                    "description": "Schedule ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "calendarIds": {
                    "description": "Calendar ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "whiteListIds": {
                    "description": "Whitelisted matchlists",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "blackListIds": {
                    "description": "Blacklisted matchlists",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "ExternalCallFilterBlackList": {
            "type": "object",
            "properties": {
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "filter": {
                    "description": "",
                    "type": "integer"
                },
                "matchlist": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "filter",
                "matchlist"
            ]
        },
        "ExternalCallFilterBlackList-detailed": {
            "type": "object",
            "required": [
                "filter",
                "matchlist"
            ],
            "properties": {
                "filter": {
                    "$ref": "#/definitions/ExternalCallFilter"
                },
                "matchlist": {
                    "$ref": "#/definitions/MatchList"
                }
            }
        },
        "ExternalCallFilterBlackList-detailedCollection": {
            "type": "object",
            "required": [
                "filter",
                "matchlist"
            ],
            "properties": {
                "filter": {
                    "$ref": "#/definitions/ExternalCallFilter"
                },
                "matchlist": {
                    "$ref": "#/definitions/MatchList"
                }
            }
        },
        "ExternalCallFilterRelCalendar": {
            "type": "object",
            "properties": {
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "filter": {
                    "description": "",
                    "type": "integer"
                },
                "calendar": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "filter",
                "calendar"
            ]
        },
        "ExternalCallFilterRelCalendar-detailed": {
            "type": "object",
            "required": [
                "filter",
                "calendar"
            ],
            "properties": {
                "filter": {
                    "$ref": "#/definitions/ExternalCallFilter"
                },
                "calendar": {
                    "$ref": "#/definitions/Calendar"
                }
            }
        },
        "ExternalCallFilterRelCalendar-detailedCollection": {
            "type": "object",
            "required": [
                "filter",
                "calendar"
            ],
            "properties": {
                "filter": {
                    "$ref": "#/definitions/ExternalCallFilter"
                },
                "calendar": {
                    "$ref": "#/definitions/Calendar"
                }
            }
        },
        "ExternalCallFilterRelSchedule": {
            "type": "object",
            "properties": {
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "filter": {
                    "description": "",
                    "type": "integer"
                },
                "schedule": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "filter",
                "schedule"
            ]
        },
        "ExternalCallFilterRelSchedule-detailed": {
            "type": "object",
            "required": [
                "filter",
                "schedule"
            ],
            "properties": {
                "filter": {
                    "$ref": "#/definitions/ExternalCallFilter"
                },
                "schedule": {
                    "$ref": "#/definitions/Schedule"
                }
            }
        },
        "ExternalCallFilterRelSchedule-detailedCollection": {
            "type": "object",
            "required": [
                "filter",
                "schedule"
            ],
            "properties": {
                "filter": {
                    "$ref": "#/definitions/ExternalCallFilter"
                },
                "schedule": {
                    "$ref": "#/definitions/Schedule"
                }
            }
        },
        "ExternalCallFilterWhiteList": {
            "type": "object",
            "properties": {
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "filter": {
                    "description": "",
                    "type": "integer"
                },
                "matchlist": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "filter",
                "matchlist"
            ]
        },
        "ExternalCallFilterWhiteList-detailed": {
            "type": "object",
            "required": [
                "filter",
                "matchlist"
            ],
            "properties": {
                "filter": {
                    "$ref": "#/definitions/ExternalCallFilter"
                },
                "matchlist": {
                    "$ref": "#/definitions/MatchList"
                }
            }
        },
        "ExternalCallFilterWhiteList-detailedCollection": {
            "type": "object",
            "required": [
                "filter",
                "matchlist"
            ],
            "properties": {
                "filter": {
                    "$ref": "#/definitions/ExternalCallFilter"
                },
                "matchlist": {
                    "$ref": "#/definitions/MatchList"
                }
            }
        },
        "Fax": {
            "type": "object",
            "required": [
                "name",
                "sendByEmail",
                "company"
            ],
            "properties": {
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "email": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "sendByEmail": {
                    "default": "1",
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "outgoingDdi": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Fax-collection": {
            "type": "object"
        },
        "Fax-detailed": {
            "type": "object",
            "required": [
                "company"
            ],
            "properties": {
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "outgoingDdi": {
                    "$ref": "#/definitions/Ddi"
                }
            }
        },
        "FaxesInOut-collection": {
            "type": "object",
            "properties": {
                "calldate": {
                    "format": "date-time",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "FaxesInOut-detailed": {
            "type": "object",
            "properties": {
                "calldate": {
                    "format": "date-time",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                },
                "file": {
                    "readOnly": true,
                    "$ref": "#/definitions/File"
                },
                "fax": {
                    "$ref": "#/definitions/Fax"
                },
                "dstCountry": {
                    "$ref": "#/definitions/Country"
                }
            },
            "required": [
                "fax",
                "dstCountry"
            ]
        },
        "Feature": {
            "type": "object",
            "required": [
                "iden"
            ],
            "properties": {
                "iden": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "FeaturesRelCompany-collection": {
            "type": "object",
            "required": [
                "company",
                "feature"
            ],
            "properties": {
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "feature": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "FeaturesRelCompany-detailed": {
            "type": "object",
            "required": [
                "company",
                "feature"
            ],
            "properties": {
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "feature": {
                    "$ref": "#/definitions/Feature"
                }
            }
        },
        "File": {
            "type": "object",
            "properties": {
                "fileSize": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "mimeType": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "baseName": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "Friend": {
            "type": "object",
            "required": [
                "name",
                "description",
                "priority",
                "disallow",
                "allow",
                "directMediaMethod",
                "calleridUpdateHeader",
                "updateCallerid",
                "directConnectivity",
                "ddiIn",
                "t38Passthrough",
                "alwaysApplyTransformations",
                "rtpEncryption",
                "multiContact",
                "company"
            ],
            "properties": {
                "name": {
                    "maxLength": 65,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "maxLength": 500,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "transport": {
                    "enum": [
                        "udp",
                        "tcp",
                        "tls"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "ip": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "port": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "password": {
                    "maxLength": 64,
                    "description": "",
                    "type": "string"
                },
                "priority": {
                    "default": "1",
                    "description": "",
                    "example": "1",
                    "type": "integer"
                },
                "disallow": {
                    "default": "all",
                    "maxLength": 200,
                    "description": "",
                    "example": "all",
                    "type": "string"
                },
                "allow": {
                    "default": "alaw",
                    "maxLength": 200,
                    "description": "",
                    "example": "alaw",
                    "type": "string"
                },
                "directMediaMethod": {
                    "default": "update",
                    "enum": [
                        "invite",
                        "update"
                    ],
                    "description": "",
                    "example": "update",
                    "type": "string"
                },
                "calleridUpdateHeader": {
                    "default": "pai",
                    "enum": [
                        "pai",
                        "rpid"
                    ],
                    "description": "",
                    "example": "pai",
                    "type": "string"
                },
                "updateCallerid": {
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "yes",
                    "type": "string"
                },
                "fromUser": {
                    "maxLength": 190,
                    "description": "",
                    "type": "string"
                },
                "fromDomain": {
                    "maxLength": 190,
                    "description": "",
                    "type": "string"
                },
                "directConnectivity": {
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no",
                        "intervpbx"
                    ],
                    "maxLength": 20,
                    "description": "",
                    "example": "yes",
                    "type": "string"
                },
                "ddiIn": {
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "yes",
                    "type": "string"
                },
                "t38Passthrough": {
                    "default": "no",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "no",
                    "type": "string"
                },
                "alwaysApplyTransformations": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "rtpEncryption": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "multiContact": {
                    "default": "1",
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "transformationRuleSet": {
                    "description": "",
                    "type": "integer"
                },
                "callAcl": {
                    "description": "",
                    "type": "integer"
                },
                "outgoingDdi": {
                    "description": "",
                    "type": "integer"
                },
                "language": {
                    "description": "",
                    "type": "integer"
                },
                "interCompany": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Friend-collection": {
            "type": "object"
        },
        "Friend-detailed": {
            "type": "object",
            "required": [
                "company"
            ],
            "properties": {
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "transformationRuleSet": {
                    "$ref": "#/definitions/TransformationRuleSet"
                },
                "callAcl": {
                    "$ref": "#/definitions/CallAcl"
                },
                "outgoingDdi": {
                    "$ref": "#/definitions/Ddi"
                },
                "language": {
                    "$ref": "#/definitions/Language"
                },
                "interCompany": {
                    "$ref": "#/definitions/Company"
                }
            }
        },
        "Friend-status": {
            "type": "object",
            "properties": {
                "domainName": {
                    "description": "Registration domain",
                    "type": "string"
                },
                "status": {
                    "description": "Registration status",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegistrationStatus"
                    }
                }
            }
        },
        "FriendsPattern": {
            "type": "object",
            "required": [
                "name",
                "regExp",
                "friend"
            ],
            "properties": {
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "regExp": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "friend": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "FriendsPattern-collection": {
            "type": "object"
        },
        "FriendsPattern-detailed": {
            "type": "object",
            "required": [
                "friend"
            ],
            "properties": {
                "friend": {
                    "$ref": "#/definitions/Friend"
                }
            }
        },
        "HolidayDate": {
            "type": "object",
            "required": [
                "name",
                "eventDate",
                "wholeDayEvent",
                "calendar"
            ],
            "properties": {
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "eventDate": {
                    "format": "date",
                    "description": "",
                    "type": "string"
                },
                "wholeDayEvent": {
                    "default": "1",
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "timeIn": {
                    "format": "time",
                    "description": "",
                    "type": "string"
                },
                "timeOut": {
                    "format": "time",
                    "description": "",
                    "type": "string"
                },
                "routeType": {
                    "enum": [
                        "number",
                        "extension",
                        "voicemail"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "numberValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "calendar": {
                    "description": "",
                    "type": "integer"
                },
                "locution": {
                    "description": "",
                    "type": "integer"
                },
                "extension": {
                    "description": "",
                    "type": "integer"
                },
                "voiceMailUser": {
                    "description": "",
                    "type": "integer"
                },
                "numberCountry": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "HolidayDate-collection": {
            "type": "object",
            "properties": {
                "eventDate": {
                    "format": "date",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "HolidayDate-detailed": {
            "type": "object",
            "properties": {
                "eventDate": {
                    "format": "date",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                },
                "timeIn": {
                    "format": "time",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                },
                "timeOut": {
                    "format": "time",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                },
                "calendar": {
                    "$ref": "#/definitions/Calendar"
                },
                "locution": {
                    "$ref": "#/definitions/Locution"
                },
                "extension": {
                    "$ref": "#/definitions/Extension"
                },
                "voiceMailUser": {
                    "$ref": "#/definitions/User"
                },
                "numberCountry": {
                    "$ref": "#/definitions/Country"
                }
            },
            "required": [
                "calendar"
            ]
        },
        "HuntGroup": {
            "type": "object",
            "required": [
                "name",
                "description",
                "strategy",
                "preventMissedCalls",
                "allowCallForwards",
                "company",
                "noAnswerLocution",
                "noAnswerExtension",
                "noAnswerVoiceMailUser",
                "noAnswerNumberCountry"
            ],
            "properties": {
                "name": {
                    "default": "",
                    "maxLength": 100,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "maxLength": 500,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "strategy": {
                    "enum": [
                        "ringAll",
                        "linear",
                        "roundRobin",
                        "random"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "ringAllTimeout": {
                    "description": "",
                    "type": "integer"
                },
                "noAnswerTargetType": {
                    "enum": [
                        "number",
                        "extension",
                        "voicemail"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "noAnswerNumberValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "preventMissedCalls": {
                    "default": "1",
                    "minimum": 0,
                    "description": "",
                    "example": "1",
                    "type": "integer"
                },
                "allowCallForwards": {
                    "default": "0",
                    "minimum": 0,
                    "description": "",
                    "example": "0",
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "noAnswerLocution": {
                    "description": "",
                    "type": "integer"
                },
                "noAnswerExtension": {
                    "description": "",
                    "type": "integer"
                },
                "noAnswerVoiceMailUser": {
                    "description": "",
                    "type": "integer"
                },
                "noAnswerNumberCountry": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "HuntGroup-collection": {
            "type": "object"
        },
        "HuntGroup-detailed": {
            "type": "object",
            "required": [
                "company",
                "noAnswerLocution",
                "noAnswerExtension",
                "noAnswerVoiceMailUser",
                "noAnswerNumberCountry"
            ],
            "properties": {
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "noAnswerLocution": {
                    "$ref": "#/definitions/Locution"
                },
                "noAnswerExtension": {
                    "$ref": "#/definitions/Extension"
                },
                "noAnswerVoiceMailUser": {
                    "$ref": "#/definitions/User"
                },
                "noAnswerNumberCountry": {
                    "$ref": "#/definitions/Country"
                }
            }
        },
        "HuntGroupsRelUser": {
            "type": "object",
            "properties": {
                "timeoutTime": {
                    "description": "",
                    "type": "integer"
                },
                "priority": {
                    "description": "",
                    "type": "integer"
                },
                "routeType": {
                    "enum": [
                        "number",
                        "user"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "numberValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "huntGroup": {
                    "description": "",
                    "type": "integer"
                },
                "user": {
                    "description": "",
                    "type": "integer"
                },
                "numberCountry": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "routeType",
                "huntGroup",
                "user"
            ]
        },
        "HuntGroupsRelUser-detailed": {
            "type": "object",
            "required": [
                "huntGroup",
                "user"
            ],
            "properties": {
                "huntGroup": {
                    "$ref": "#/definitions/HuntGroup"
                },
                "user": {
                    "$ref": "#/definitions/User"
                },
                "numberCountry": {
                    "$ref": "#/definitions/Country"
                }
            }
        },
        "HuntGroupsRelUser-detailedCollection": {
            "type": "object",
            "required": [
                "huntGroup",
                "user"
            ],
            "properties": {
                "huntGroup": {
                    "$ref": "#/definitions/HuntGroup"
                },
                "user": {
                    "$ref": "#/definitions/User"
                },
                "numberCountry": {
                    "$ref": "#/definitions/Country"
                }
            }
        },
        "Invoice": {
            "type": "object",
            "properties": {
                "number": {
                    "maxLength": 30,
                    "description": "",
                    "type": "string"
                },
                "inDate": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "outDate": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "total": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "taxRate": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "totalWithTax": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "status": {
                    "enum": [
                        "waiting",
                        "processing",
                        "created",
                        "error"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "statusMsg": {
                    "maxLength": 140,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "company"
            ]
        },
        "Ivr": {
            "type": "object",
            "required": [
                "name",
                "timeout",
                "maxDigits",
                "allowExtensions",
                "company",
                "welcomeLocution",
                "noInputLocution",
                "errorLocution",
                "successLocution",
                "noInputExtension",
                "errorExtension",
                "noInputVoiceMailUser",
                "errorVoiceMailUser",
                "noInputNumberCountry",
                "errorNumberCountry"
            ],
            "properties": {
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "timeout": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "maxDigits": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "allowExtensions": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "noInputRouteType": {
                    "enum": [
                        "number",
                        "extension",
                        "voicemail"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "noInputNumberValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "errorRouteType": {
                    "enum": [
                        "number",
                        "extension",
                        "voicemail"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "errorNumberValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "welcomeLocution": {
                    "description": "",
                    "type": "integer"
                },
                "noInputLocution": {
                    "description": "",
                    "type": "integer"
                },
                "errorLocution": {
                    "description": "",
                    "type": "integer"
                },
                "successLocution": {
                    "description": "",
                    "type": "integer"
                },
                "noInputExtension": {
                    "description": "",
                    "type": "integer"
                },
                "errorExtension": {
                    "description": "",
                    "type": "integer"
                },
                "noInputVoiceMailUser": {
                    "description": "",
                    "type": "integer"
                },
                "errorVoiceMailUser": {
                    "description": "",
                    "type": "integer"
                },
                "noInputNumberCountry": {
                    "description": "",
                    "type": "integer"
                },
                "errorNumberCountry": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Ivr-collection": {
            "type": "object"
        },
        "Ivr-detailed": {
            "type": "object",
            "required": [
                "company",
                "welcomeLocution",
                "noInputLocution",
                "errorLocution",
                "successLocution",
                "noInputExtension",
                "errorExtension",
                "noInputVoiceMailUser",
                "errorVoiceMailUser",
                "noInputNumberCountry",
                "errorNumberCountry"
            ],
            "properties": {
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "welcomeLocution": {
                    "$ref": "#/definitions/Locution"
                },
                "noInputLocution": {
                    "$ref": "#/definitions/Locution"
                },
                "errorLocution": {
                    "$ref": "#/definitions/Locution"
                },
                "successLocution": {
                    "$ref": "#/definitions/Locution"
                },
                "noInputExtension": {
                    "$ref": "#/definitions/Extension"
                },
                "errorExtension": {
                    "$ref": "#/definitions/Extension"
                },
                "noInputVoiceMailUser": {
                    "$ref": "#/definitions/User"
                },
                "errorVoiceMailUser": {
                    "$ref": "#/definitions/User"
                },
                "noInputNumberCountry": {
                    "$ref": "#/definitions/Country"
                },
                "errorNumberCountry": {
                    "$ref": "#/definitions/Country"
                },
                "excludedExtensionIds": {
                    "description": "Excluded extensions",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "Ivr-withExcludedExtensions": {
            "type": "object",
            "required": [
                "name",
                "timeout",
                "maxDigits",
                "allowExtensions",
                "welcomeLocution",
                "noInputLocution",
                "errorLocution",
                "successLocution",
                "noInputExtension",
                "errorExtension",
                "noInputVoiceMailUser",
                "errorVoiceMailUser",
                "noInputNumberCountry",
                "errorNumberCountry"
            ],
            "properties": {
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "timeout": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "maxDigits": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "allowExtensions": {
                    "default": "0",
                    "description": "",
                    "type": "boolean"
                },
                "noInputRouteType": {
                    "enum": [
                        "number",
                        "extension",
                        "voicemail"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "noInputNumberValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "errorRouteType": {
                    "enum": [
                        "number",
                        "extension",
                        "voicemail"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "errorNumberValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "welcomeLocution": {
                    "$ref": "#/definitions/Locution"
                },
                "noInputLocution": {
                    "$ref": "#/definitions/Locution"
                },
                "errorLocution": {
                    "$ref": "#/definitions/Locution"
                },
                "successLocution": {
                    "$ref": "#/definitions/Locution"
                },
                "noInputExtension": {
                    "$ref": "#/definitions/Extension"
                },
                "errorExtension": {
                    "$ref": "#/definitions/Extension"
                },
                "noInputVoiceMailUser": {
                    "$ref": "#/definitions/User"
                },
                "errorVoiceMailUser": {
                    "$ref": "#/definitions/User"
                },
                "noInputNumberCountry": {
                    "$ref": "#/definitions/Country"
                },
                "errorNumberCountry": {
                    "$ref": "#/definitions/Country"
                },
                "excludedExtensionIds": {
                    "description": "Excluded extensions",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "IvrEntry": {
            "type": "object",
            "required": [
                "entry",
                "routeType",
                "ivr",
                "welcomeLocution",
                "numberCountry"
            ],
            "properties": {
                "entry": {
                    "maxLength": 40,
                    "description": "",
                    "type": "string"
                },
                "routeType": {
                    "enum": [
                        "number",
                        "extension",
                        "voicemail",
                        "conditional"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "numberValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "ivr": {
                    "description": "",
                    "type": "integer"
                },
                "welcomeLocution": {
                    "description": "",
                    "type": "integer"
                },
                "extension": {
                    "description": "",
                    "type": "integer"
                },
                "voiceMailUser": {
                    "description": "",
                    "type": "integer"
                },
                "conditionalRoute": {
                    "description": "",
                    "type": "integer"
                },
                "numberCountry": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "IvrEntry-collection": {
            "type": "object"
        },
        "IvrEntry-detailed": {
            "type": "object",
            "required": [
                "ivr",
                "welcomeLocution",
                "numberCountry"
            ],
            "properties": {
                "ivr": {
                    "$ref": "#/definitions/Ivr"
                },
                "welcomeLocution": {
                    "$ref": "#/definitions/Locution"
                },
                "extension": {
                    "$ref": "#/definitions/Extension"
                },
                "voiceMailUser": {
                    "$ref": "#/definitions/User"
                },
                "conditionalRoute": {
                    "$ref": "#/definitions/ConditionalRoute"
                },
                "numberCountry": {
                    "$ref": "#/definitions/Country"
                }
            }
        },
        "IvrExcludedExtension": {
            "type": "object",
            "properties": {
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "ivr": {
                    "description": "",
                    "type": "integer"
                },
                "extension": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "ivr",
                "extension"
            ]
        },
        "IvrExcludedExtension-detailed": {
            "type": "object",
            "required": [
                "ivr",
                "extension"
            ],
            "properties": {
                "ivr": {
                    "$ref": "#/definitions/Ivr"
                },
                "extension": {
                    "$ref": "#/definitions/Extension"
                }
            }
        },
        "IvrExcludedExtension-detailedCollection": {
            "type": "object",
            "required": [
                "ivr",
                "extension"
            ],
            "properties": {
                "ivr": {
                    "$ref": "#/definitions/Ivr"
                },
                "extension": {
                    "$ref": "#/definitions/Extension"
                }
            }
        },
        "Label": {
            "type": "object",
            "required": [
                "en",
                "es",
                "ca",
                "it"
            ],
            "properties": {
                "en": {
                    "default": "",
                    "maxLength": 20,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "es": {
                    "default": "",
                    "maxLength": 20,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "ca": {
                    "default": "",
                    "maxLength": 20,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "it": {
                    "default": "",
                    "maxLength": 20,
                    "description": "",
                    "example": "",
                    "type": "string"
                }
            }
        },
        "Language": {
            "type": "object",
            "required": [
                "iden"
            ],
            "properties": {
                "iden": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "name": {
                    "$ref": "#/definitions/Language_Name"
                }
            }
        },
        "Language-collection": {
            "type": "object"
        },
        "Language-detailed": {
            "type": "object",
            "properties": {
                "name": {
                    "readOnly": true,
                    "$ref": "#/definitions/Language_Name"
                }
            }
        },
        "Language_Name": {
            "type": "object",
            "required": [
                "en",
                "es",
                "ca",
                "it"
            ],
            "properties": {
                "en": {
                    "default": "",
                    "maxLength": 100,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "es": {
                    "default": "",
                    "maxLength": 100,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "ca": {
                    "default": "",
                    "maxLength": 100,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "it": {
                    "default": "",
                    "maxLength": 100,
                    "description": "",
                    "example": "",
                    "type": "string"
                }
            }
        },
        "Locution": {
            "type": "object",
            "required": [
                "name",
                "company"
            ],
            "properties": {
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "enum": [
                        "pending",
                        "encoding",
                        "ready",
                        "error"
                    ],
                    "maxLength": 20,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "encodedFile": {
                    "description": "",
                    "type": "integer"
                },
                "originalFile": {
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Locution-collection": {
            "type": "object"
        },
        "Locution-detailed": {
            "type": "object",
            "properties": {
                "encodedFile": {
                    "readOnly": true,
                    "$ref": "#/definitions/EncodedFile"
                },
                "originalFile": {
                    "readOnly": true,
                    "$ref": "#/definitions/OriginalFile"
                },
                "company": {
                    "$ref": "#/definitions/Company"
                }
            },
            "required": [
                "company"
            ]
        },
        "MatchList": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "MatchList-collection": {
            "type": "object"
        },
        "MatchList-detailed": {
            "type": "object",
            "properties": {
                "company": {
                    "$ref": "#/definitions/Company"
                }
            }
        },
        "MatchListPattern": {
            "type": "object",
            "properties": {
                "description": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "number",
                        "regexp"
                    ],
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "regexp": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "numbervalue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "matchList": {
                    "description": "",
                    "type": "integer"
                },
                "numberCountry": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "type",
                "matchList",
                "numberCountry"
            ]
        },
        "MatchListPattern-collection": {
            "type": "object"
        },
        "MatchListPattern-detailed": {
            "type": "object",
            "required": [
                "matchList",
                "numberCountry"
            ],
            "properties": {
                "matchList": {
                    "$ref": "#/definitions/MatchList"
                },
                "numberCountry": {
                    "$ref": "#/definitions/Country"
                }
            }
        },
        "MusicOnHold": {
            "type": "object",
            "required": [
                "name",
                "company"
            ],
            "properties": {
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "status": {
                    "enum": [
                        "pending",
                        "encoding",
                        "ready",
                        "error"
                    ],
                    "maxLength": 20,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "originalFile": {
                    "description": "",
                    "type": "integer"
                },
                "encodedFile": {
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "MusicOnHold-collection": {
            "type": "object"
        },
        "MusicOnHold-detailed": {
            "type": "object",
            "properties": {
                "originalFile": {
                    "readOnly": true,
                    "$ref": "#/definitions/OriginalFile"
                },
                "encodedFile": {
                    "readOnly": true,
                    "$ref": "#/definitions/EncodedFile"
                },
                "company": {
                    "$ref": "#/definitions/Company"
                }
            },
            "required": [
                "company"
            ]
        },
        "Name": {
            "type": "object",
            "required": [
                "en",
                "es",
                "ca",
                "it"
            ],
            "properties": {
                "en": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "es": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "ca": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "it": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "NotificationTemplate": {
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "properties": {
                "name": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "voicemail",
                        "fax",
                        "limit",
                        "lowbalance",
                        "invoice",
                        "callCsv",
                        "maxDailyUsage"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "OriginalFile": {
            "type": "object",
            "properties": {
                "fileSize": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "mimeType": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "baseName": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "OutgoingDdiRule": {
            "type": "object",
            "required": [
                "name",
                "defaultAction",
                "company",
                "forcedDdi"
            ],
            "properties": {
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "defaultAction": {
                    "enum": [
                        "keep",
                        "force"
                    ],
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "forcedDdi": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "OutgoingDdiRule-collection": {
            "type": "object"
        },
        "OutgoingDdiRule-detailed": {
            "type": "object",
            "required": [
                "company",
                "forcedDdi"
            ],
            "properties": {
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "forcedDdi": {
                    "$ref": "#/definitions/Ddi"
                }
            }
        },
        "OutgoingDdiRulesPattern": {
            "type": "object",
            "required": [
                "type",
                "action",
                "priority",
                "outgoingDdiRule"
            ],
            "properties": {
                "type": {
                    "enum": [
                        "prefix",
                        "destination"
                    ],
                    "maxLength": 20,
                    "description": "",
                    "type": "string"
                },
                "prefix": {
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "action": {
                    "enum": [
                        "keep",
                        "force"
                    ],
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "priority": {
                    "default": "1",
                    "description": "",
                    "example": "1",
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "outgoingDdiRule": {
                    "description": "",
                    "type": "integer"
                },
                "matchList": {
                    "description": "",
                    "type": "integer"
                },
                "forcedDdi": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "OutgoingDdiRulesPattern-detailed": {
            "type": "object",
            "required": [
                "outgoingDdiRule"
            ],
            "properties": {
                "outgoingDdiRule": {
                    "$ref": "#/definitions/OutgoingDdiRule"
                },
                "matchList": {
                    "$ref": "#/definitions/MatchList"
                },
                "forcedDdi": {
                    "$ref": "#/definitions/Ddi"
                }
            }
        },
        "OutgoingDdiRulesPattern-detailedCollection": {
            "type": "object",
            "required": [
                "outgoingDdiRule"
            ],
            "properties": {
                "outgoingDdiRule": {
                    "$ref": "#/definitions/OutgoingDdiRule"
                },
                "matchList": {
                    "$ref": "#/definitions/MatchList"
                },
                "forcedDdi": {
                    "$ref": "#/definitions/Ddi"
                }
            }
        },
        "PickUpGroup": {
            "type": "object",
            "required": [
                "name",
                "company"
            ],
            "properties": {
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "PickUpGroup-collection": {
            "type": "object"
        },
        "PickUpGroup-detailed": {
            "type": "object",
            "required": [
                "company"
            ],
            "properties": {
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "userIds": {
                    "description": "User ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "PickUpGroup-withUsers": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "userIds": {
                    "description": "User ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "PickUpRelUser": {
            "type": "object",
            "properties": {
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "pickUpGroup": {
                    "description": "",
                    "type": "integer"
                },
                "user": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "pickUpGroup",
                "user"
            ]
        },
        "PickUpRelUser-detailed": {
            "type": "object",
            "required": [
                "pickUpGroup",
                "user"
            ],
            "properties": {
                "pickUpGroup": {
                    "$ref": "#/definitions/PickUpGroup"
                },
                "user": {
                    "$ref": "#/definitions/User"
                }
            }
        },
        "PickUpRelUser-detailedCollection": {
            "type": "object",
            "required": [
                "pickUpGroup",
                "user"
            ],
            "properties": {
                "pickUpGroup": {
                    "$ref": "#/definitions/PickUpGroup"
                },
                "user": {
                    "$ref": "#/definitions/User"
                }
            }
        },
        "Queue": {
            "type": "object",
            "properties": {
                "name": {
                    "maxLength": 128,
                    "description": "",
                    "type": "string"
                },
                "maxWaitTime": {
                    "description": "",
                    "type": "integer"
                },
                "timeoutTargetType": {
                    "enum": [
                        "number",
                        "extension",
                        "voicemail"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "timeoutNumberValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "maxlen": {
                    "description": "",
                    "type": "integer"
                },
                "fullTargetType": {
                    "enum": [
                        "number",
                        "extension",
                        "voicemail"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "fullNumberValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "periodicAnnounceFrequency": {
                    "description": "",
                    "type": "integer"
                },
                "memberCallRest": {
                    "description": "",
                    "type": "integer"
                },
                "memberCallTimeout": {
                    "description": "",
                    "type": "integer"
                },
                "strategy": {
                    "description": "",
                    "type": "string"
                },
                "weight": {
                    "description": "",
                    "type": "integer"
                },
                "preventMissedCalls": {
                    "default": "1",
                    "minimum": 0,
                    "description": "",
                    "example": "1",
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "periodicAnnounceLocution": {
                    "description": "",
                    "type": "integer"
                },
                "timeoutLocution": {
                    "description": "",
                    "type": "integer"
                },
                "timeoutExtension": {
                    "description": "",
                    "type": "integer"
                },
                "timeoutVoiceMailUser": {
                    "description": "",
                    "type": "integer"
                },
                "fullLocution": {
                    "description": "",
                    "type": "integer"
                },
                "fullExtension": {
                    "description": "",
                    "type": "integer"
                },
                "fullVoiceMailUser": {
                    "description": "",
                    "type": "integer"
                },
                "timeoutNumberCountry": {
                    "description": "",
                    "type": "integer"
                },
                "fullNumberCountry": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "preventMissedCalls",
                "company"
            ]
        },
        "Queue-collection": {
            "type": "object"
        },
        "Queue-detailed": {
            "type": "object",
            "required": [
                "company"
            ],
            "properties": {
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "periodicAnnounceLocution": {
                    "$ref": "#/definitions/Locution"
                },
                "timeoutLocution": {
                    "$ref": "#/definitions/Locution"
                },
                "timeoutExtension": {
                    "$ref": "#/definitions/Extension"
                },
                "timeoutVoiceMailUser": {
                    "$ref": "#/definitions/User"
                },
                "fullLocution": {
                    "$ref": "#/definitions/Locution"
                },
                "fullExtension": {
                    "$ref": "#/definitions/Extension"
                },
                "fullVoiceMailUser": {
                    "$ref": "#/definitions/User"
                },
                "timeoutNumberCountry": {
                    "$ref": "#/definitions/Country"
                },
                "fullNumberCountry": {
                    "$ref": "#/definitions/Country"
                }
            }
        },
        "QueueMember": {
            "type": "object",
            "properties": {
                "penalty": {
                    "description": "",
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "queue": {
                    "description": "",
                    "type": "integer"
                },
                "user": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "queue",
                "user"
            ]
        },
        "QueueMember-detailed": {
            "type": "object",
            "required": [
                "queue",
                "user"
            ],
            "properties": {
                "queue": {
                    "$ref": "#/definitions/Queue"
                },
                "user": {
                    "$ref": "#/definitions/User"
                }
            }
        },
        "QueueMember-detailedCollection": {
            "type": "object",
            "required": [
                "queue",
                "user"
            ],
            "properties": {
                "queue": {
                    "$ref": "#/definitions/Queue"
                },
                "user": {
                    "$ref": "#/definitions/User"
                }
            }
        },
        "RatingPlanGroup": {
            "type": "object",
            "properties": {
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "RatingPlanPrices": {
            "type": "object",
            "properties": {
                "ratingPlan": {
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "description": "",
                    "type": "string"
                },
                "prefix": {
                    "description": "",
                    "type": "string"
                },
                "connectFee": {
                    "description": "",
                    "type": "number"
                },
                "cost": {
                    "description": "",
                    "type": "number"
                },
                "rateIncrement": {
                    "description": "",
                    "type": "string"
                },
                "groupIntervalStart": {
                    "description": "",
                    "type": "string"
                },
                "timeIn": {
                    "description": "",
                    "type": "string"
                },
                "days": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "RatingProfile-collection": {
            "type": "object",
            "properties": {
                "activationTime": {
                    "default": "CURRENT_TIMESTAMP",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "",
                    "example": "CURRENT_TIMESTAMP",
                    "type": "string"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "ratingPlanGroup": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "company",
                "ratingPlanGroup"
            ]
        },
        "RatingProfile-detailed": {
            "type": "object",
            "properties": {
                "activationTime": {
                    "default": "CURRENT_TIMESTAMP",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "",
                    "example": "CURRENT_TIMESTAMP",
                    "type": "string"
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "ratingPlanGroup": {
                    "$ref": "#/definitions/RatingPlanGroup"
                }
            },
            "required": [
                "company",
                "ratingPlanGroup"
            ]
        },
        "RecordedFile": {
            "type": "object",
            "properties": {
                "fileSize": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "mimeType": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "baseName": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "Recording-collection": {
            "type": "object",
            "properties": {
                "calldate": {
                    "default": "CURRENT_TIMESTAMP",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "",
                    "example": "CURRENT_TIMESTAMP",
                    "type": "string"
                }
            }
        },
        "Recording-detailed": {
            "type": "object",
            "properties": {
                "calldate": {
                    "default": "CURRENT_TIMESTAMP",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "",
                    "example": "CURRENT_TIMESTAMP",
                    "type": "string"
                },
                "recordedFile": {
                    "readOnly": true,
                    "$ref": "#/definitions/RecordedFile"
                },
                "company": {
                    "$ref": "#/definitions/Company"
                }
            },
            "required": [
                "company"
            ]
        },
        "RegistrationStatus": {
            "type": "object",
            "properties": {
                "contact": {
                    "description": "",
                    "type": "string"
                },
                "expires": {
                    "description": "",
                    "type": "string"
                },
                "userAgent": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "RegistrationSummary": {
            "type": "object",
            "properties": {
                "active": {
                    "description": "",
                    "type": "integer"
                },
                "total": {
                    "description": "",
                    "type": "integer"
                },
                "percent": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "ResidentialDevice": {
            "type": "object",
            "required": [
                "name",
                "description",
                "authNeeded",
                "disallow",
                "allow",
                "directMediaMethod",
                "calleridUpdateHeader",
                "updateCallerid",
                "directConnectivity",
                "ddiIn",
                "maxCalls",
                "t38Passthrough",
                "rtpEncryption",
                "multiContact",
                "company",
                "transformationRuleSet",
                "outgoingDdi",
                "language"
            ],
            "properties": {
                "name": {
                    "maxLength": 65,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "maxLength": 500,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "transport": {
                    "enum": [
                        "udp",
                        "tcp",
                        "tls"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "ip": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "port": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "authNeeded": {
                    "default": "yes",
                    "description": "",
                    "example": "yes",
                    "type": "string"
                },
                "password": {
                    "maxLength": 64,
                    "description": "",
                    "type": "string"
                },
                "disallow": {
                    "default": "all",
                    "maxLength": 200,
                    "description": "",
                    "example": "all",
                    "type": "string"
                },
                "allow": {
                    "default": "alaw",
                    "maxLength": 200,
                    "description": "",
                    "example": "alaw",
                    "type": "string"
                },
                "directMediaMethod": {
                    "default": "update",
                    "enum": [
                        "invite",
                        "update"
                    ],
                    "description": "",
                    "example": "update",
                    "type": "string"
                },
                "calleridUpdateHeader": {
                    "default": "pai",
                    "enum": [
                        "pai",
                        "rpid"
                    ],
                    "description": "",
                    "example": "pai",
                    "type": "string"
                },
                "updateCallerid": {
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "yes",
                    "type": "string"
                },
                "fromDomain": {
                    "maxLength": 190,
                    "description": "",
                    "type": "string"
                },
                "directConnectivity": {
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "yes",
                    "type": "string"
                },
                "ddiIn": {
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "yes",
                    "type": "string"
                },
                "maxCalls": {
                    "default": "1",
                    "minimum": 0,
                    "description": "",
                    "example": "1",
                    "type": "integer"
                },
                "t38Passthrough": {
                    "default": "no",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "no",
                    "type": "string"
                },
                "rtpEncryption": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "multiContact": {
                    "default": "1",
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "transformationRuleSet": {
                    "description": "",
                    "type": "integer"
                },
                "outgoingDdi": {
                    "description": "",
                    "type": "integer"
                },
                "language": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "ResidentialDevice-collection": {
            "type": "object"
        },
        "ResidentialDevice-detailed": {
            "type": "object",
            "required": [
                "company",
                "transformationRuleSet",
                "outgoingDdi",
                "language"
            ],
            "properties": {
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "transformationRuleSet": {
                    "$ref": "#/definitions/TransformationRuleSet"
                },
                "outgoingDdi": {
                    "$ref": "#/definitions/Ddi"
                },
                "language": {
                    "$ref": "#/definitions/Language"
                }
            }
        },
        "ResidentialDevice-status": {
            "type": "object",
            "properties": {
                "domainName": {
                    "description": "Registration domain",
                    "type": "string"
                },
                "status": {
                    "description": "Registration status",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegistrationStatus"
                    }
                }
            }
        },
        "RetailAccount": {
            "type": "object",
            "required": [
                "name",
                "description",
                "directConnectivity",
                "ddiIn",
                "t38Passthrough",
                "rtpEncryption",
                "multiContact",
                "company",
                "transformationRuleSet",
                "outgoingDdi"
            ],
            "properties": {
                "name": {
                    "maxLength": 65,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "maxLength": 500,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "transport": {
                    "enum": [
                        "udp",
                        "tcp",
                        "tls"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "ip": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "port": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "password": {
                    "maxLength": 64,
                    "description": "",
                    "type": "string"
                },
                "fromDomain": {
                    "maxLength": 190,
                    "description": "",
                    "type": "string"
                },
                "directConnectivity": {
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "yes",
                    "type": "string"
                },
                "ddiIn": {
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "yes",
                    "type": "string"
                },
                "t38Passthrough": {
                    "default": "no",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "no",
                    "type": "string"
                },
                "rtpEncryption": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "multiContact": {
                    "default": "1",
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "transformationRuleSet": {
                    "description": "",
                    "type": "integer"
                },
                "outgoingDdi": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "RetailAccount-collection": {
            "type": "object"
        },
        "RetailAccount-detailed": {
            "type": "object",
            "required": [
                "company",
                "transformationRuleSet",
                "outgoingDdi"
            ],
            "properties": {
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "transformationRuleSet": {
                    "$ref": "#/definitions/TransformationRuleSet"
                },
                "outgoingDdi": {
                    "$ref": "#/definitions/Ddi"
                }
            }
        },
        "RetailAccount-status": {
            "type": "object",
            "properties": {
                "domainName": {
                    "description": "Registration domain",
                    "type": "string"
                },
                "status": {
                    "description": "Registration status",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegistrationStatus"
                    }
                }
            }
        },
        "RouteLock": {
            "type": "object",
            "required": [
                "name",
                "description",
                "open",
                "company"
            ],
            "properties": {
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "maxLength": 100,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "open": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "RouteLock-collection": {
            "type": "object"
        },
        "RouteLock-detailed": {
            "type": "object",
            "required": [
                "company"
            ],
            "properties": {
                "company": {
                    "$ref": "#/definitions/Company"
                }
            }
        },
        "Schedule": {
            "type": "object",
            "required": [
                "name",
                "timeIn",
                "timeout",
                "company"
            ],
            "properties": {
                "name": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "timeIn": {
                    "format": "time",
                    "description": "",
                    "type": "string"
                },
                "timeout": {
                    "format": "time",
                    "description": "",
                    "type": "string"
                },
                "monday": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "tuesday": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "wednesday": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "thursday": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "friday": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "saturday": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "sunday": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Schedule-collection": {
            "type": "object",
            "properties": {
                "timeIn": {
                    "format": "time",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                },
                "timeout": {
                    "format": "time",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "Schedule-detailed": {
            "type": "object",
            "properties": {
                "timeIn": {
                    "format": "time",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                },
                "timeout": {
                    "format": "time",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                },
                "company": {
                    "$ref": "#/definitions/Company"
                }
            },
            "required": [
                "company"
            ]
        },
        "Service": {
            "type": "object",
            "required": [
                "iden",
                "defaultCode",
                "extraArgs"
            ],
            "properties": {
                "iden": {
                    "default": "",
                    "maxLength": 50,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "defaultCode": {
                    "maxLength": 3,
                    "description": "",
                    "type": "string"
                },
                "extraArgs": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "name": {
                    "description": "",
                    "type": "integer"
                },
                "description": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Service-collection": {
            "type": "object"
        },
        "Service-detailed": {
            "type": "object",
            "properties": {
                "name": {
                    "readOnly": true,
                    "$ref": "#/definitions/Name"
                },
                "description": {
                    "readOnly": true,
                    "$ref": "#/definitions/Description"
                }
            }
        },
        "Terminal": {
            "type": "object",
            "required": [
                "name",
                "disallow",
                "allowAudio",
                "directMediaMethod",
                "password",
                "t38Passthrough",
                "rtpEncryption",
                "company",
                "terminalModel"
            ],
            "properties": {
                "name": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "disallow": {
                    "default": "all",
                    "maxLength": 200,
                    "description": "",
                    "example": "all",
                    "type": "string"
                },
                "allowAudio": {
                    "default": "alaw",
                    "maxLength": 200,
                    "description": "",
                    "example": "alaw",
                    "type": "string"
                },
                "allowVideo": {
                    "maxLength": 200,
                    "description": "",
                    "type": "string"
                },
                "directMediaMethod": {
                    "default": "update",
                    "enum": [
                        "update",
                        "invite",
                        "reinvite"
                    ],
                    "description": "",
                    "example": "update",
                    "type": "string"
                },
                "password": {
                    "default": "",
                    "maxLength": 25,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "mac": {
                    "maxLength": 12,
                    "description": "",
                    "type": "string"
                },
                "lastProvisionDate": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "t38Passthrough": {
                    "default": "no",
                    "enum": [
                        "yes",
                        "no"
                    ],
                    "description": "",
                    "example": "no",
                    "type": "string"
                },
                "rtpEncryption": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "terminalModel": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Terminal-collection": {
            "type": "object",
            "properties": {
                "lastProvisionDate": {
                    "format": "date-time",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "Terminal-detailed": {
            "type": "object",
            "properties": {
                "lastProvisionDate": {
                    "format": "date-time",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "terminalModel": {
                    "$ref": "#/definitions/TerminalModel"
                }
            },
            "required": [
                "company",
                "terminalModel"
            ]
        },
        "Terminal-status": {
            "type": "object",
            "properties": {
                "domainName": {
                    "description": "Registration domain",
                    "type": "string"
                },
                "status": {
                    "description": "Registration status",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegistrationStatus"
                    }
                }
            }
        },
        "TerminalModel": {
            "type": "object",
            "required": [
                "iden",
                "name",
                "description"
            ],
            "properties": {
                "iden": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "default": "",
                    "maxLength": 100,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "maxLength": 500,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "genericTemplate": {
                    "maxLength": 65535,
                    "description": "",
                    "type": "string"
                },
                "specificTemplate": {
                    "maxLength": 65535,
                    "description": "",
                    "type": "string"
                },
                "genericUrlPattern": {
                    "maxLength": 225,
                    "description": "",
                    "type": "string"
                },
                "specificUrlPattern": {
                    "maxLength": 225,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "TerminalModel-collection": {
            "type": "object"
        },
        "TerminalModel-detailed": {
            "type": "object"
        },
        "Timezone": {
            "type": "object",
            "required": [
                "tz"
            ],
            "properties": {
                "tz": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "comment": {
                    "default": "",
                    "maxLength": 150,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "label": {
                    "description": "",
                    "type": "integer"
                },
                "country": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Timezone-collection": {
            "type": "object"
        },
        "Timezone-detailed": {
            "type": "object",
            "properties": {
                "label": {
                    "readOnly": true,
                    "$ref": "#/definitions/Label"
                },
                "country": {
                    "$ref": "#/definitions/Country"
                }
            }
        },
        "Token": {
            "type": "object",
            "properties": {
                "token": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "TransformationRuleSet": {
            "type": "object",
            "properties": {
                "description": {
                    "maxLength": 250,
                    "description": "",
                    "type": "string"
                },
                "internationalCode": {
                    "default": "00",
                    "maxLength": 10,
                    "description": "",
                    "example": "00",
                    "type": "string"
                },
                "trunkPrefix": {
                    "default": "",
                    "maxLength": 5,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "areaCode": {
                    "default": "",
                    "maxLength": 5,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "nationalLen": {
                    "default": "9",
                    "minimum": 0,
                    "description": "",
                    "example": "9",
                    "type": "integer"
                },
                "generateRules": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "name": {
                    "description": "",
                    "type": "integer"
                },
                "country": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "TransformationRuleSet-collection": {
            "type": "object"
        },
        "TransformationRuleSet-detailed": {
            "type": "object",
            "properties": {
                "name": {
                    "readOnly": true,
                    "$ref": "#/definitions/Name"
                },
                "country": {
                    "$ref": "#/definitions/Country"
                }
            }
        },
        "User": {
            "type": "object",
            "required": [
                "name",
                "lastname",
                "doNotDisturb",
                "isBoss",
                "active",
                "maxCalls",
                "externalIpCalls",
                "rejectCallMethod",
                "voicemailEnabled",
                "voicemailSendMail",
                "voicemailAttachSound",
                "multiContact",
                "gsQRCode",
                "company",
                "callAcl",
                "bossAssistant",
                "bossAssistantWhiteList",
                "transformationRuleSet",
                "language",
                "terminal",
                "extension",
                "timezone",
                "outgoingDdi",
                "outgoingDdiRule",
                "voicemailLocution"
            ],
            "properties": {
                "name": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "lastname": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "email": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "pass": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "doNotDisturb": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "isBoss": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "active": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "maxCalls": {
                    "default": "0",
                    "minimum": 0,
                    "description": "",
                    "example": "0",
                    "type": "integer"
                },
                "externalIpCalls": {
                    "default": "0",
                    "enum": [
                        "0",
                        "1",
                        "2",
                        "3"
                    ],
                    "maxLength": 1,
                    "description": "",
                    "example": "0",
                    "type": "string"
                },
                "rejectCallMethod": {
                    "default": "rfc",
                    "enum": [
                        "rfc",
                        "486",
                        "600"
                    ],
                    "maxLength": 3,
                    "description": "",
                    "example": "rfc",
                    "type": "string"
                },
                "voicemailEnabled": {
                    "default": "1",
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "voicemailSendMail": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "voicemailAttachSound": {
                    "default": "1",
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "multiContact": {
                    "default": "1",
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "gsQRCode": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "callAcl": {
                    "description": "",
                    "type": "integer"
                },
                "bossAssistant": {
                    "description": "",
                    "type": "integer"
                },
                "bossAssistantWhiteList": {
                    "description": "",
                    "type": "integer"
                },
                "transformationRuleSet": {
                    "description": "",
                    "type": "integer"
                },
                "language": {
                    "description": "",
                    "type": "integer"
                },
                "terminal": {
                    "description": "",
                    "type": "integer"
                },
                "extension": {
                    "description": "",
                    "type": "integer"
                },
                "timezone": {
                    "description": "",
                    "type": "integer"
                },
                "outgoingDdi": {
                    "description": "",
                    "type": "integer"
                },
                "outgoingDdiRule": {
                    "description": "",
                    "type": "integer"
                },
                "voicemailLocution": {
                    "description": "",
                    "type": "integer"
                },
                "oldPass": {
                    "description": "required in order to update user password",
                    "type": "string"
                }
            }
        },
        "User-collection": {
            "type": "object"
        },
        "User-detailed": {
            "type": "object",
            "required": [
                "company",
                "callAcl",
                "bossAssistant",
                "bossAssistantWhiteList",
                "transformationRuleSet",
                "language",
                "terminal",
                "extension",
                "timezone",
                "outgoingDdi",
                "outgoingDdiRule",
                "voicemailLocution"
            ],
            "properties": {
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "callAcl": {
                    "$ref": "#/definitions/CallAcl"
                },
                "bossAssistant": {
                    "$ref": "#/definitions/User"
                },
                "bossAssistantWhiteList": {
                    "$ref": "#/definitions/MatchList"
                },
                "transformationRuleSet": {
                    "$ref": "#/definitions/TransformationRuleSet"
                },
                "language": {
                    "$ref": "#/definitions/Language"
                },
                "terminal": {
                    "$ref": "#/definitions/Terminal"
                },
                "extension": {
                    "$ref": "#/definitions/Extension"
                },
                "timezone": {
                    "$ref": "#/definitions/Timezone"
                },
                "outgoingDdi": {
                    "$ref": "#/definitions/Ddi"
                },
                "outgoingDdiRule": {
                    "$ref": "#/definitions/OutgoingDdiRule"
                },
                "voicemailLocution": {
                    "$ref": "#/definitions/Locution"
                },
                "oldPass": {
                    "description": "required in order to update user password",
                    "type": "string"
                },
                "pickupGroupIds": {
                    "description": "Pickup group ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "User-myProfile": {
            "type": "object",
            "required": [
                "bossAssistant",
                "timezone"
            ],
            "properties": {
                "bossAssistant": {
                    "$ref": "#/definitions/User"
                },
                "timezone": {
                    "$ref": "#/definitions/Timezone"
                }
            }
        },
        "User-updateMyProfile": {
            "type": "object",
            "properties": {
                "oldPass": {
                    "description": "required in order to update user password",
                    "type": "string"
                },
                "bossAssistant": {
                    "$ref": "#/definitions/User"
                },
                "timezone": {
                    "$ref": "#/definitions/Timezone"
                }
            },
            "required": [
                "bossAssistant",
                "timezone"
            ]
        },
        "UserStatus": {
            "type": "object",
            "properties": {
                "userName": {
                    "description": "",
                    "type": "string"
                },
                "companyName": {
                    "description": "",
                    "type": "string"
                },
                "companyDomain": {
                    "description": "",
                    "type": "string"
                },
                "language": {
                    "description": "",
                    "type": "string"
                },
                "voiceMail": {
                    "description": "",
                    "type": "string"
                },
                "gsQRCode": {
                    "description": "",
                    "type": "string"
                },
                "userAgent": {
                    "description": "",
                    "type": "string"
                },
                "ipRegistered": {
                    "description": "",
                    "type": "string"
                },
                "statusTerminal": {
                    "description": "",
                    "type": "string"
                },
                "terminalName": {
                    "description": "",
                    "type": "string"
                },
                "terminalPassword": {
                    "description": "",
                    "type": "string"
                },
                "extensionNumber": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "UsersCdr": {
            "type": "object",
            "required": [
                "startTime",
                "endTime",
                "duration"
            ],
            "properties": {
                "startTime": {
                    "default": "2000-01-01 00:00:00",
                    "format": "date-time",
                    "description": "",
                    "example": "2000-01-01 00:00:00",
                    "type": "string"
                },
                "endTime": {
                    "default": "2000-01-01 00:00:00",
                    "format": "date-time",
                    "description": "",
                    "example": "2000-01-01 00:00:00",
                    "type": "string"
                },
                "duration": {
                    "default": "0",
                    "format": "float",
                    "description": "",
                    "example": "0",
                    "type": "number"
                },
                "direction": {
                    "description": "",
                    "type": "string"
                },
                "caller": {
                    "maxLength": 128,
                    "description": "",
                    "type": "string"
                },
                "callee": {
                    "maxLength": 128,
                    "description": "",
                    "type": "string"
                },
                "diversion": {
                    "maxLength": 64,
                    "description": "",
                    "type": "string"
                },
                "referee": {
                    "maxLength": 128,
                    "description": "",
                    "type": "string"
                },
                "referrer": {
                    "maxLength": 128,
                    "description": "",
                    "type": "string"
                },
                "callid": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "callidHash": {
                    "maxLength": 128,
                    "description": "",
                    "type": "string"
                },
                "xcallid": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "user": {
                    "description": "",
                    "type": "integer"
                },
                "friend": {
                    "description": "",
                    "type": "integer"
                },
                "residentialDevice": {
                    "description": "",
                    "type": "integer"
                },
                "retailAccount": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "UsersCdr-collection": {
            "type": "object",
            "properties": {
                "startTime": {
                    "default": "2000-01-01 00:00:00",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "",
                    "example": "2000-01-01 00:00:00",
                    "type": "string"
                },
                "endTime": {
                    "default": "2000-01-01 00:00:00",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "",
                    "example": "2000-01-01 00:00:00",
                    "type": "string"
                }
            }
        },
        "UsersCdr-detailed": {
            "type": "object",
            "properties": {
                "startTime": {
                    "default": "2000-01-01 00:00:00",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "",
                    "example": "2000-01-01 00:00:00",
                    "type": "string"
                },
                "endTime": {
                    "default": "2000-01-01 00:00:00",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "",
                    "example": "2000-01-01 00:00:00",
                    "type": "string"
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "user": {
                    "$ref": "#/definitions/User"
                },
                "friend": {
                    "$ref": "#/definitions/Friend"
                },
                "residentialDevice": {
                    "$ref": "#/definitions/ResidentialDevice"
                },
                "retailAccount": {
                    "$ref": "#/definitions/RetailAccount"
                }
            }
        },
        "WebTheme": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "",
                    "type": "string"
                },
                "theme": {
                    "description": "",
                    "type": "string"
                },
                "logo": {
                    "description": "",
                    "type": "string"
                }
            }
        }
    }
}
