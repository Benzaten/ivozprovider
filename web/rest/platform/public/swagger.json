{
    "swagger": "2.0",
    "basePath": "/api/platform/",
    "info": {
        "title": "Ivoz Provider",
        "version": "3",
        "description": "Platform REST API"
    },
    "paths": {
        "/admin_login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "operationId": "postAdminAuthenticate",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve JWT token",
                "parameters": [
                    {
                        "name": "username",
                        "in": "formData",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "type": "string",
                        "format": "password",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Valid credentials"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Bad credentials"
                    }
                }
            }
        },
        "/token/refresh": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "operationId": "postTokenRefresh",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieve JWT token",
                "parameters": [
                    {
                        "name": "refresh_token",
                        "in": "formData",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Valid credentials"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Bad credentials"
                    }
                }
            }
        },
        "/administrator_rel_public_entities": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getAdministratorRelPublicEntityCollection",
                "summary": "Retrieves the collection of AdministratorRelPublicEntity resources.",
                "responses": {
                    "200": {
                        "description": "AdministratorRelPublicEntity collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AdministratorRelPublicEntity-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "administrator",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "administrator[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "create",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "delete",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "publicEntity",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "publicEntity[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "read",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "update",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[create]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[delete]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[read]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[update]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/administrator_rel_public_entities/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getAdministratorRelPublicEntityItem",
                "summary": "Retrieves a AdministratorRelPublicEntity resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "AdministratorRelPublicEntity resource response",
                        "schema": {
                            "$ref": "#/definitions/AdministratorRelPublicEntity-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putAdministratorRelPublicEntityItem",
                "summary": "Replaces the AdministratorRelPublicEntity resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "AdministratorRelPublicEntity resource updated",
                        "schema": {
                            "$ref": "#/definitions/AdministratorRelPublicEntity"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/administrators": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getAdministratorCollection",
                "summary": "Retrieves the collection of Administrator resources.",
                "responses": {
                    "200": {
                        "description": "Administrator collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Administrator-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastname",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastname[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "brand",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "brand[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timezone[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "restricted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[active]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[restricted]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[username]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[lastname]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[email]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[name]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[lastname]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[brand]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[company]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[timezone]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postAdministratorCollection",
                "summary": "Creates a Administrator resource.",
                "responses": {
                    "201": {
                        "description": "Administrator resource created",
                        "schema": {
                            "$ref": "#/definitions/Administrator"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "administrator",
                        "in": "body",
                        "description": "The new Administrator resource",
                        "schema": {
                            "$ref": "#/definitions/Administrator"
                        }
                    }
                ]
            }
        },
        "/administrators/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getAdministratorItem",
                "summary": "Retrieves a Administrator resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Administrator resource response",
                        "schema": {
                            "$ref": "#/definitions/Administrator-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putAdministratorItem",
                "summary": "Replaces the Administrator resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Administrator resource updated",
                        "schema": {
                            "$ref": "#/definitions/Administrator"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteAdministratorItem",
                "summary": "Removes the Administrator resource.",
                "responses": {
                    "204": {
                        "description": "Administrator resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/application_servers": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getApplicationServerCollection",
                "summary": "Retrieves the collection of ApplicationServer resources.",
                "responses": {
                    "200": {
                        "description": "ApplicationServer collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ApplicationServer-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[name]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postApplicationServerCollection",
                "summary": "Creates a ApplicationServer resource.",
                "responses": {
                    "201": {
                        "description": "ApplicationServer resource created",
                        "schema": {
                            "$ref": "#/definitions/ApplicationServer"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "applicationServer",
                        "in": "body",
                        "description": "The new ApplicationServer resource",
                        "schema": {
                            "$ref": "#/definitions/ApplicationServer"
                        }
                    }
                ]
            }
        },
        "/application_servers/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getApplicationServerItem",
                "summary": "Retrieves a ApplicationServer resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ApplicationServer resource response",
                        "schema": {
                            "$ref": "#/definitions/ApplicationServer-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putApplicationServerItem",
                "summary": "Replaces the ApplicationServer resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ApplicationServer resource updated",
                        "schema": {
                            "$ref": "#/definitions/ApplicationServer"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteApplicationServerItem",
                "summary": "Removes the ApplicationServer resource.",
                "responses": {
                    "204": {
                        "description": "ApplicationServer resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/banned_addresses": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getBannedAddressCollection",
                "summary": "Retrieves the collection of BannedAddress resources.",
                "responses": {
                    "200": {
                        "description": "BannedAddress collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BannedAddress-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "aor",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "aor[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "blocker",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "blocker[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "exists[aor]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[blocker]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[ip]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[lastTimeBanned]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "ip",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastTimeBanned",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastTimeBanned[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastTimeBanned[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastTimeBanned[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastTimeBanned[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastTimeBanned[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[aor]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[blocker]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[ip]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[lastTimeBanned]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            }
        },
        "/banned_addresses/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getBannedAddressItem",
                "summary": "Retrieves a BannedAddress resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BannedAddress resource response",
                        "schema": {
                            "$ref": "#/definitions/BannedAddress-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/billable_calls": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json",
                    "text/csv"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getBillableCallCollection",
                "summary": "Retrieves the collection of BillableCall resources.",
                "responses": {
                    "200": {
                        "description": "BillableCall collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BillableCall-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "brand",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "brand[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callee",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callee[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "caller",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "caller[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callid",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "callid[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "carrier",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "carrier[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cost",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cost[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cost[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cost[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cost[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cost[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddi",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddiProvider",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddiProvider[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ddi[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "direction[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration",
                        "in": "query",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "duration[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "duration[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointId",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "endpointId[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointId[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointId[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointId[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointId[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointName",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointName[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endpointType[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[brand]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[callee]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[caller]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[callid]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[carrier]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[company]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[cost]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[ddiProvider]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[ddi]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[direction]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[endpointId]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[endpointName]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[endpointType]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[invoice]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[price]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[startTime]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "invoice",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "price",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "price[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "price[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "price[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "price[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "price[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime[after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime[before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime[start]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime[strictly_after]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTime[strictly_before]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[callee]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[caller]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[callid]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[cost]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[direction]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[duration]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[endpointId]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[endpointName]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[endpointType]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[price]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[startTime]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_pagination",
                        "in": "query",
                        "required": false,
                        "description": "Enable or disable pagination",
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            }
        },
        "/billable_calls/{callid}/rate": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Provider"
                ],
                "parameters": [
                    {
                        "name": "callid",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "callid"
                    },
                    {
                        "name": "rating",
                        "in": "body",
                        "required": true,
                        "description": "The rating values",
                        "schema": {
                            "$ref": "#/definitions/BillableCall-rating"
                        }
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "operationId": "put_billable_call_rate_by_callidBillableCallItem",
                "summary": "Replaces the BillableCall resource.",
                "responses": {
                    "200": {
                        "description": "BillableCall resource updated",
                        "schema": {
                            "$ref": "#/definitions/BillableCall"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/billable_calls/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getBillableCallItem",
                "summary": "Retrieves a BillableCall resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BillableCall resource response",
                        "schema": {
                            "$ref": "#/definitions/BillableCall-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/brand_services": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getBrandServiceCollection",
                "summary": "Retrieves the collection of BrandService resources.",
                "responses": {
                    "200": {
                        "description": "BrandService collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BrandService-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "brand",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "brand[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "service",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "service[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[code]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postBrandServiceCollection",
                "summary": "Creates a BrandService resource.",
                "responses": {
                    "201": {
                        "description": "BrandService resource created",
                        "schema": {
                            "$ref": "#/definitions/BrandService"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "brandService",
                        "in": "body",
                        "description": "The new BrandService resource",
                        "schema": {
                            "$ref": "#/definitions/BrandService"
                        }
                    }
                ]
            }
        },
        "/brand_services/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getBrandServiceItem",
                "summary": "Retrieves a BrandService resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BrandService resource response",
                        "schema": {
                            "$ref": "#/definitions/BrandService-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putBrandServiceItem",
                "summary": "Replaces the BrandService resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BrandService resource updated",
                        "schema": {
                            "$ref": "#/definitions/BrandService"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteBrandServiceItem",
                "summary": "Removes the BrandService resource.",
                "responses": {
                    "204": {
                        "description": "BrandService resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/brands": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getBrandCollection",
                "summary": "Retrieves the collection of Brand resources.",
                "responses": {
                    "200": {
                        "description": "Brand collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Brand-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "language[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultTimezone",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultTimezone[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[language]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "multipart/form-data",
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postBrandCollection",
                "summary": "Creates a Brand resource.",
                "responses": {
                    "201": {
                        "description": "Brand resource created",
                        "schema": {
                            "$ref": "#/definitions/Brand-withFeatures"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "brand",
                        "in": "formData",
                        "description": "The new Brand resource",
                        "type": "string"
                    },
                    {
                        "name": "Logo",
                        "in": "formData",
                        "type": "file",
                        "required": false
                    }
                ]
            }
        },
        "/brands/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getBrandItem",
                "summary": "Retrieves a Brand resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Brand resource response",
                        "schema": {
                            "$ref": "#/definitions/Brand-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "multipart/form-data",
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putBrandItem",
                "summary": "Replaces the Brand resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "brand",
                        "in": "formData",
                        "description": "The updated Brand resource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Brand resource updated",
                        "schema": {
                            "$ref": "#/definitions/Brand-withFeatures"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteBrandItem",
                "summary": "Removes the Brand resource.",
                "responses": {
                    "204": {
                        "description": "Brand resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/brands/{id}/logo": {
            "get": {
                "produces": [
                    "application/octet-stream"
                ],
                "responses": {
                    "200": {
                        "description": "Brand logo"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "tags": [
                    "Provider"
                ],
                "operationId": "/brand_logoBrandItem",
                "summary": "Retrieves a Brand resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/countries": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCountryCollection",
                "summary": "Retrieves the collection of Country resources.",
                "responses": {
                    "200": {
                        "description": "Country collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Country-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "countryCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "countryCode[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[countryCode]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[name.en]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[name.es]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "name.ca",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[code]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[countryCode]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.en]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.es]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_pagination",
                        "in": "query",
                        "required": false,
                        "description": "Enable or disable pagination",
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/countries/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getCountryItem",
                "summary": "Retrieves a Country resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Country resource response",
                        "schema": {
                            "$ref": "#/definitions/Country-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/domains": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getDomainCollection",
                "summary": "Retrieves the collection of Domain resources.",
                "responses": {
                    "200": {
                        "description": "Domain collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Domain-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "domain",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "domain[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pointsTo",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "pointsTo[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[domain]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[pointsTo]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            }
        },
        "/domains/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getDomainItem",
                "summary": "Retrieves a Domain resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Domain resource response",
                        "schema": {
                            "$ref": "#/definitions/Domain-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/features": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFeatureCollection",
                "summary": "Retrieves the collection of Feature resources.",
                "responses": {
                    "200": {
                        "description": "Feature collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Feature-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "iden",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[iden]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postFeatureCollection",
                "summary": "Creates a Feature resource.",
                "responses": {
                    "201": {
                        "description": "Feature resource created",
                        "schema": {
                            "$ref": "#/definitions/Feature"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "feature",
                        "in": "body",
                        "description": "The new Feature resource",
                        "schema": {
                            "$ref": "#/definitions/Feature"
                        }
                    }
                ]
            }
        },
        "/features/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFeatureItem",
                "summary": "Retrieves a Feature resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Feature resource response",
                        "schema": {
                            "$ref": "#/definitions/Feature-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putFeatureItem",
                "summary": "Replaces the Feature resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Feature resource updated",
                        "schema": {
                            "$ref": "#/definitions/Feature"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteFeatureItem",
                "summary": "Removes the Feature resource.",
                "responses": {
                    "204": {
                        "description": "Feature resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/features_rel_brands": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFeaturesRelBrandCollection",
                "summary": "Retrieves the collection of FeaturesRelBrand resources.",
                "responses": {
                    "200": {
                        "description": "FeaturesRelBrand collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FeaturesRelBrand-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "brand",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "brand[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "feature",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "feature[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postFeaturesRelBrandCollection",
                "summary": "Creates a FeaturesRelBrand resource.",
                "responses": {
                    "201": {
                        "description": "FeaturesRelBrand resource created",
                        "schema": {
                            "$ref": "#/definitions/FeaturesRelBrand"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "featuresRelBrand",
                        "in": "body",
                        "description": "The new FeaturesRelBrand resource",
                        "schema": {
                            "$ref": "#/definitions/FeaturesRelBrand"
                        }
                    }
                ]
            }
        },
        "/features_rel_brands/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getFeaturesRelBrandItem",
                "summary": "Retrieves a FeaturesRelBrand resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FeaturesRelBrand resource response",
                        "schema": {
                            "$ref": "#/definitions/FeaturesRelBrand-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putFeaturesRelBrandItem",
                "summary": "Replaces the FeaturesRelBrand resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FeaturesRelBrand resource updated",
                        "schema": {
                            "$ref": "#/definitions/FeaturesRelBrand"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteFeaturesRelBrandItem",
                "summary": "Removes the FeaturesRelBrand resource.",
                "responses": {
                    "204": {
                        "description": "FeaturesRelBrand resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/invoice_templates": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getInvoiceTemplateCollection",
                "summary": "Retrieves the collection of InvoiceTemplate resources.",
                "responses": {
                    "200": {
                        "description": "InvoiceTemplate collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InvoiceTemplate-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "brand",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "brand[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[brand]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postInvoiceTemplateCollection",
                "summary": "Creates a InvoiceTemplate resource.",
                "responses": {
                    "201": {
                        "description": "InvoiceTemplate resource created",
                        "schema": {
                            "$ref": "#/definitions/InvoiceTemplate"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "invoiceTemplate",
                        "in": "body",
                        "description": "The new InvoiceTemplate resource",
                        "schema": {
                            "$ref": "#/definitions/InvoiceTemplate"
                        }
                    }
                ]
            }
        },
        "/invoice_templates/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getInvoiceTemplateItem",
                "summary": "Retrieves a InvoiceTemplate resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "InvoiceTemplate resource response",
                        "schema": {
                            "$ref": "#/definitions/InvoiceTemplate-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putInvoiceTemplateItem",
                "summary": "Replaces the InvoiceTemplate resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "InvoiceTemplate resource updated",
                        "schema": {
                            "$ref": "#/definitions/InvoiceTemplate"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteInvoiceTemplateItem",
                "summary": "Removes the InvoiceTemplate resource.",
                "responses": {
                    "204": {
                        "description": "InvoiceTemplate resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/languages": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getLanguageCollection",
                "summary": "Retrieves the collection of Language resources.",
                "responses": {
                    "200": {
                        "description": "Language collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Language-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "iden",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[iden]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            }
        },
        "/languages/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getLanguageItem",
                "summary": "Retrieves a Language resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Language resource response",
                        "schema": {
                            "$ref": "#/definitions/Language-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/media_relay_sets": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getMediaRelaySetCollection",
                "summary": "Retrieves the collection of MediaRelaySet resources.",
                "responses": {
                    "200": {
                        "description": "MediaRelaySet collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MediaRelaySet-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[description]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postMediaRelaySetCollection",
                "summary": "Creates a MediaRelaySet resource.",
                "responses": {
                    "201": {
                        "description": "MediaRelaySet resource created",
                        "schema": {
                            "$ref": "#/definitions/MediaRelaySet"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "mediaRelaySet",
                        "in": "body",
                        "description": "The new MediaRelaySet resource",
                        "schema": {
                            "$ref": "#/definitions/MediaRelaySet"
                        }
                    }
                ]
            }
        },
        "/media_relay_sets/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getMediaRelaySetItem",
                "summary": "Retrieves a MediaRelaySet resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MediaRelaySet resource response",
                        "schema": {
                            "$ref": "#/definitions/MediaRelaySet-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putMediaRelaySetItem",
                "summary": "Replaces the MediaRelaySet resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MediaRelaySet resource updated",
                        "schema": {
                            "$ref": "#/definitions/MediaRelaySet"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteMediaRelaySetItem",
                "summary": "Removes the MediaRelaySet resource.",
                "responses": {
                    "204": {
                        "description": "MediaRelaySet resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/my/active_calls": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "My"
                ],
                "parameters": [
                    {
                        "name": "brand",
                        "in": "query",
                        "type": "integer",
                        "required": false,
                        "description": "Brand Id"
                    }
                ],
                "operationId": "get_my_active_callsActiveCallsItem",
                "summary": "Retrieves a ActiveCalls resource.",
                "responses": {
                    "200": {
                        "description": "ActiveCalls resource response",
                        "schema": {
                            "$ref": "#/definitions/ActiveCalls"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/proxy_trunks": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getProxyTrunkCollection",
                "summary": "Retrieves the collection of ProxyTrunk resources.",
                "responses": {
                    "200": {
                        "description": "ProxyTrunk collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProxyTrunk-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[ip]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[name]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            }
        },
        "/proxy_trunks/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getProxyTrunkItem",
                "summary": "Retrieves a ProxyTrunk resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProxyTrunk resource response",
                        "schema": {
                            "$ref": "#/definitions/ProxyTrunk-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putProxyTrunkItem",
                "summary": "Replaces the ProxyTrunk resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProxyTrunk resource updated",
                        "schema": {
                            "$ref": "#/definitions/ProxyTrunk"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/proxy_trunks_rel_brands": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getProxyTrunksRelBrandCollection",
                "summary": "Retrieves the collection of ProxyTrunksRelBrand resources.",
                "responses": {
                    "200": {
                        "description": "ProxyTrunksRelBrand collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProxyTrunksRelBrand-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "brand",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "brand[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "proxyTrunk",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "proxyTrunk[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postProxyTrunksRelBrandCollection",
                "summary": "Creates a ProxyTrunksRelBrand resource.",
                "responses": {
                    "201": {
                        "description": "ProxyTrunksRelBrand resource created",
                        "schema": {
                            "$ref": "#/definitions/ProxyTrunksRelBrand"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "proxyTrunksRelBrand",
                        "in": "body",
                        "description": "The new ProxyTrunksRelBrand resource",
                        "schema": {
                            "$ref": "#/definitions/ProxyTrunksRelBrand"
                        }
                    }
                ]
            }
        },
        "/proxy_trunks_rel_brands/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getProxyTrunksRelBrandItem",
                "summary": "Retrieves a ProxyTrunksRelBrand resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProxyTrunksRelBrand resource response",
                        "schema": {
                            "$ref": "#/definitions/ProxyTrunksRelBrand-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putProxyTrunksRelBrandItem",
                "summary": "Replaces the ProxyTrunksRelBrand resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProxyTrunksRelBrand resource updated",
                        "schema": {
                            "$ref": "#/definitions/ProxyTrunksRelBrand"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteProxyTrunksRelBrandItem",
                "summary": "Removes the ProxyTrunksRelBrand resource.",
                "responses": {
                    "204": {
                        "description": "ProxyTrunksRelBrand resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/proxy_users": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getProxyUserCollection",
                "summary": "Retrieves the collection of ProxyUser resources.",
                "responses": {
                    "200": {
                        "description": "ProxyUser collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProxyUser-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ip[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[ip]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[name]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[ip]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            }
        },
        "/proxy_users/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getProxyUserItem",
                "summary": "Retrieves a ProxyUser resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProxyUser resource response",
                        "schema": {
                            "$ref": "#/definitions/ProxyUser-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putProxyUserItem",
                "summary": "Replaces the ProxyUser resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProxyUser resource updated",
                        "schema": {
                            "$ref": "#/definitions/ProxyUser"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/public_entities": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getPublicEntityCollection",
                "summary": "Retrieves the collection of PublicEntity resources.",
                "responses": {
                    "200": {
                        "description": "PublicEntity collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PublicEntity-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "exists[name.ca]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[name.en]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[name.es]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[name.it]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "iden",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "name.ca",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.ca[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.en[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.es[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name.it[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[iden]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.ca]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.en]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.es]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name.it]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            }
        },
        "/public_entities/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getPublicEntityItem",
                "summary": "Retrieves a PublicEntity resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PublicEntity resource response",
                        "schema": {
                            "$ref": "#/definitions/PublicEntity-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/rtpengines": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Kam"
                ],
                "operationId": "getRtpengineCollection",
                "summary": "Retrieves the collection of Rtpengine resources.",
                "responses": {
                    "200": {
                        "description": "Rtpengine collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Rtpengine-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "url",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "url[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "mediaRelaySet",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "mediaRelaySet[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "disabled",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "weight",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "weight[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "weight[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "weight[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "weight[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "weight[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[url]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[weight]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[disabled]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[description]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[description]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[mediaRelaySet]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Kam"
                ],
                "operationId": "postRtpengineCollection",
                "summary": "Creates a Rtpengine resource.",
                "responses": {
                    "201": {
                        "description": "Rtpengine resource created",
                        "schema": {
                            "$ref": "#/definitions/Rtpengine"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "rtpengine",
                        "in": "body",
                        "description": "The new Rtpengine resource",
                        "schema": {
                            "$ref": "#/definitions/Rtpengine"
                        }
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ]
            }
        },
        "/rtpengines/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Kam"
                ],
                "operationId": "getRtpengineItem",
                "summary": "Retrieves a Rtpengine resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rtpengine resource response",
                        "schema": {
                            "$ref": "#/definitions/Rtpengine-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Kam"
                ],
                "operationId": "putRtpengineItem",
                "summary": "Replaces the Rtpengine resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "_timezone",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "description": "Use a time zone of choice instead of the token user one (Applies to both input and output)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rtpengine resource updated",
                        "schema": {
                            "$ref": "#/definitions/Rtpengine"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Kam"
                ],
                "operationId": "deleteRtpengineItem",
                "summary": "Removes the Rtpengine resource.",
                "responses": {
                    "204": {
                        "description": "Rtpengine resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/services": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getServiceCollection",
                "summary": "Retrieves the collection of Service resources.",
                "responses": {
                    "200": {
                        "description": "Service collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Service-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "iden",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultCode",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "defaultCode[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "extraArgs",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[iden]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[defaultCode]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[extraArgs]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            }
        },
        "/services/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getServiceItem",
                "summary": "Retrieves a Service resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service resource response",
                        "schema": {
                            "$ref": "#/definitions/Service-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putServiceItem",
                "summary": "Replaces the Service resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service resource updated",
                        "schema": {
                            "$ref": "#/definitions/Service"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            }
        },
        "/special_numbers": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getSpecialNumberCollection",
                "summary": "Retrieves the collection of SpecialNumber resources.",
                "responses": {
                    "200": {
                        "description": "SpecialNumber collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SpecialNumber-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "country",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "country[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "disableCDR",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "disableCDR[between]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "disableCDR[gt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "disableCDR[gte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "disableCDR[lt]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "disableCDR[lte]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[disableCDR]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[number]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postSpecialNumberCollection",
                "summary": "Creates a SpecialNumber resource.",
                "responses": {
                    "201": {
                        "description": "SpecialNumber resource created",
                        "schema": {
                            "$ref": "#/definitions/SpecialNumber"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "specialNumber",
                        "in": "body",
                        "description": "The new SpecialNumber resource",
                        "schema": {
                            "$ref": "#/definitions/SpecialNumber"
                        }
                    }
                ]
            }
        },
        "/special_numbers/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getSpecialNumberItem",
                "summary": "Retrieves a SpecialNumber resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SpecialNumber resource response",
                        "schema": {
                            "$ref": "#/definitions/SpecialNumber-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putSpecialNumberItem",
                "summary": "Replaces the SpecialNumber resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SpecialNumber resource updated",
                        "schema": {
                            "$ref": "#/definitions/SpecialNumber"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteSpecialNumberItem",
                "summary": "Removes the SpecialNumber resource.",
                "responses": {
                    "204": {
                        "description": "SpecialNumber resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/terminal_manufacturers": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getTerminalManufacturerCollection",
                "summary": "Retrieves the collection of TerminalManufacturer resources.",
                "responses": {
                    "200": {
                        "description": "TerminalManufacturer collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TerminalManufacturer-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "iden",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[iden]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postTerminalManufacturerCollection",
                "summary": "Creates a TerminalManufacturer resource.",
                "responses": {
                    "201": {
                        "description": "TerminalManufacturer resource created",
                        "schema": {
                            "$ref": "#/definitions/TerminalManufacturer"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "terminalManufacturer",
                        "in": "body",
                        "description": "The new TerminalManufacturer resource",
                        "schema": {
                            "$ref": "#/definitions/TerminalManufacturer"
                        }
                    }
                ]
            }
        },
        "/terminal_manufacturers/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getTerminalManufacturerItem",
                "summary": "Retrieves a TerminalManufacturer resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TerminalManufacturer resource response",
                        "schema": {
                            "$ref": "#/definitions/TerminalManufacturer-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putTerminalManufacturerItem",
                "summary": "Replaces the TerminalManufacturer resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TerminalManufacturer resource updated",
                        "schema": {
                            "$ref": "#/definitions/TerminalManufacturer"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteTerminalManufacturerItem",
                "summary": "Removes the TerminalManufacturer resource.",
                "responses": {
                    "204": {
                        "description": "TerminalManufacturer resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/terminal_models": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getTerminalModelCollection",
                "summary": "Retrieves the collection of TerminalModel resources.",
                "responses": {
                    "200": {
                        "description": "TerminalModel collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TerminalModel-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "iden",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "iden[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "terminalManufacturer",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "terminalManufacturer[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[iden]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postTerminalModelCollection",
                "summary": "Creates a TerminalModel resource.",
                "responses": {
                    "201": {
                        "description": "TerminalModel resource created",
                        "schema": {
                            "$ref": "#/definitions/TerminalModel"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "terminalModel",
                        "in": "body",
                        "description": "The new TerminalModel resource",
                        "schema": {
                            "$ref": "#/definitions/TerminalModel"
                        }
                    }
                ]
            }
        },
        "/terminal_models/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getTerminalModelItem",
                "summary": "Retrieves a TerminalModel resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TerminalModel resource response",
                        "schema": {
                            "$ref": "#/definitions/TerminalModel-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putTerminalModelItem",
                "summary": "Replaces the TerminalModel resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TerminalModel resource updated",
                        "schema": {
                            "$ref": "#/definitions/TerminalModel"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteTerminalModelItem",
                "summary": "Removes the TerminalModel resource.",
                "responses": {
                    "204": {
                        "description": "TerminalModel resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/timezones": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getTimezoneCollection",
                "summary": "Retrieves the collection of Timezone resources.",
                "responses": {
                    "200": {
                        "description": "Timezone collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Timezone-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "tz",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tz[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "country[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[tz]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[country]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    },
                    {
                        "name": "_pagination",
                        "in": "query",
                        "required": false,
                        "description": "Enable or disable pagination",
                        "type": "boolean"
                    }
                ]
            }
        },
        "/timezones/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getTimezoneItem",
                "summary": "Retrieves a Timezone resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Timezone resource response",
                        "schema": {
                            "$ref": "#/definitions/Timezone-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/web_portals": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getWebPortalCollection",
                "summary": "Retrieves the collection of WebPortal resources.",
                "responses": {
                    "200": {
                        "description": "WebPortal collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WebPortal-collection"
                            }
                        },
                        "headers": {
                            "X-Total-Items": {
                                "type": "integer"
                            },
                            "X-Total-Pages": {
                                "type": "integer"
                            },
                            "X-First-Page": {
                                "type": "string"
                            },
                            "X-Next-Page": {
                                "type": "string"
                            },
                            "X-Last-Page": {
                                "type": "string"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "url",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "url[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "urlType",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "urlType[partial]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "brand",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "brand[]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[id]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[url]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[name]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "name": "_order[urlType]",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exists[name]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "exists[brand]",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Allows you to reduce the response to contain only the properties you need. If your desired property is nested, you can address it using nested arrays. Example: _properties[]={propertyName}&_properties[]={anotherPropertyName}&_properties[{nestedPropertyParent}][]={nestedProperty}",
                        "name": "_properties[]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false,
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "_page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    },
                    {
                        "name": "_itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "consumes": [
                    "multipart/form-data",
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "postWebPortalCollection",
                "summary": "Creates a WebPortal resource.",
                "responses": {
                    "201": {
                        "description": "WebPortal resource created",
                        "schema": {
                            "$ref": "#/definitions/WebPortal"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "parameters": [
                    {
                        "name": "webPortal",
                        "in": "formData",
                        "description": "The new WebPortal resource",
                        "type": "string"
                    },
                    {
                        "name": "Logo",
                        "in": "formData",
                        "type": "file",
                        "required": false
                    }
                ]
            }
        },
        "/web_portals/{id}": {
            "get": {
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "getWebPortalItem",
                "summary": "Retrieves a WebPortal resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "WebPortal resource response",
                        "schema": {
                            "$ref": "#/definitions/WebPortal-detailed"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "consumes": [
                    "multipart/form-data",
                    "application/json",
                    "application/ld+json"
                ],
                "produces": [
                    "application/json",
                    "application/ld+json"
                ],
                "tags": [
                    "Provider"
                ],
                "operationId": "putWebPortalItem",
                "summary": "Replaces the WebPortal resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "webPortal",
                        "in": "formData",
                        "description": "The updated WebPortal resource",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "WebPortal resource updated",
                        "schema": {
                            "$ref": "#/definitions/WebPortal"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Provider"
                ],
                "operationId": "deleteWebPortalItem",
                "summary": "Removes the WebPortal resource.",
                "responses": {
                    "204": {
                        "description": "WebPortal resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/web_portals/{id}/logo": {
            "get": {
                "produces": [
                    "application/octet-stream"
                ],
                "responses": {
                    "200": {
                        "description": "WebPortal logo"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "tags": [
                    "Provider"
                ],
                "operationId": "/webportal_logoWebPortalItem",
                "summary": "Retrieves a WebPortal resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        }
    },
    "security": [
        {
            "bearer": []
        }
    ],
    "securityDefinitions": {
        "bearer": {
            "type": "apiKey",
            "in": "header",
            "description": "Value for the Authorization header",
            "name": "Authorization"
        }
    },
    "definitions": {
        "ActiveCalls": {
            "type": "object",
            "properties": {
                "inbound": {
                    "description": "",
                    "type": "integer"
                },
                "outbound": {
                    "description": "",
                    "type": "integer"
                },
                "total": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Administrator": {
            "type": "object",
            "required": [
                "username",
                "pass",
                "email",
                "active",
                "restricted",
                "timezone"
            ],
            "properties": {
                "username": {
                    "maxLength": 65,
                    "description": "",
                    "type": "string"
                },
                "pass": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "email": {
                    "default": "",
                    "maxLength": 100,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "active": {
                    "default": "1",
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "restricted": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "name": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "lastname": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "brand": {
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "timezone": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Administrator-collection": {
            "type": "object"
        },
        "Administrator-detailed": {
            "type": "object",
            "properties": {
                "brand": {
                    "$ref": "#/definitions/Brand"
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "timezone": {
                    "$ref": "#/definitions/Timezone"
                }
            },
            "required": [
                "timezone"
            ]
        },
        "AdministratorRelPublicEntity": {
            "type": "object",
            "required": [
                "create",
                "read",
                "update",
                "delete",
                "administrator",
                "publicEntity"
            ],
            "properties": {
                "create": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "read": {
                    "default": "1",
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "update": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "delete": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "administrator": {
                    "description": "",
                    "type": "integer"
                },
                "publicEntity": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "AdministratorRelPublicEntity-collection": {
            "type": "object",
            "required": [
                "administrator",
                "publicEntity"
            ],
            "properties": {
                "administrator": {
                    "description": "",
                    "type": "integer"
                },
                "publicEntity": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "AdministratorRelPublicEntity-detailed": {
            "type": "object",
            "required": [
                "administrator",
                "publicEntity"
            ],
            "properties": {
                "administrator": {
                    "$ref": "#/definitions/Administrator"
                },
                "publicEntity": {
                    "$ref": "#/definitions/PublicEntity"
                }
            }
        },
        "ApplicationServer": {
            "type": "object",
            "required": [
                "ip"
            ],
            "properties": {
                "ip": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "maxLength": 64,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "ApplicationServer-collection": {
            "type": "object"
        },
        "ApplicationServer-detailed": {
            "type": "object"
        },
        "BannedAddress-collection": {
            "type": "object",
            "properties": {
                "lastTimeBanned": {
                    "format": "date-time",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "BannedAddress-detailed": {
            "type": "object",
            "properties": {
                "lastTimeBanned": {
                    "format": "date-time",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                },
                "company": {
                    "$ref": "#/definitions/Company"
                }
            }
        },
        "BillableCall": {
            "type": "object",
            "properties": {
                "callid": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "startTime": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "duration": {
                    "default": "0",
                    "format": "float",
                    "description": "",
                    "example": "0",
                    "type": "number"
                },
                "caller": {
                    "maxLength": 128,
                    "description": "",
                    "type": "string"
                },
                "callee": {
                    "maxLength": 128,
                    "description": "",
                    "type": "string"
                },
                "cost": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "price": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "priceDetails": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "carrierName": {
                    "maxLength": 200,
                    "description": "",
                    "type": "string"
                },
                "destinationName": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "ratingPlanName": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "endpointType": {
                    "enum": [
                        "RetailAccount",
                        "ResidentialDevice",
                        "User",
                        "Friend",
                        "Fax"
                    ],
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "endpointId": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "endpointName": {
                    "maxLength": 65,
                    "description": "",
                    "type": "string"
                },
                "direction": {
                    "default": "outbound",
                    "enum": [
                        "inbound",
                        "outbound"
                    ],
                    "description": "",
                    "example": "outbound",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "brand": {
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "carrier": {
                    "description": "",
                    "type": "integer"
                },
                "destination": {
                    "description": "",
                    "type": "integer"
                },
                "ratingPlanGroup": {
                    "description": "",
                    "type": "integer"
                },
                "invoice": {
                    "description": "",
                    "type": "integer"
                },
                "ddi": {
                    "description": "",
                    "type": "integer"
                },
                "ddiProvider": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "duration"
            ]
        },
        "BillableCall-collection": {
            "type": "object",
            "properties": {
                "startTime": {
                    "format": "date-time",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                },
                "brand": {
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "carrier": {
                    "description": "",
                    "type": "integer"
                },
                "ddiProvider": {
                    "description": "",
                    "type": "integer"
                },
                "invoice": {
                    "description": "",
                    "type": "integer"
                },
                "ddi": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "BillableCall-detailed": {
            "type": "object",
            "properties": {
                "startTime": {
                    "format": "date-time",
                    "readOnly": true,
                    "description": "",
                    "type": "string"
                },
                "brand": {
                    "$ref": "#/definitions/Brand"
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "carrier": {
                    "$ref": "#/definitions/Carrier"
                },
                "destination": {
                    "$ref": "#/definitions/Destination"
                },
                "ratingPlanGroup": {
                    "$ref": "#/definitions/RatingPlanGroup"
                },
                "invoice": {
                    "$ref": "#/definitions/Invoice"
                },
                "ddi": {
                    "$ref": "#/definitions/Ddi"
                },
                "ddiProvider": {
                    "$ref": "#/definitions/DdiProvider"
                }
            }
        },
        "BillableCall-rating": {
            "type": "object",
            "properties": {
                "price": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "cost": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "destinationName": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "ratingPlanName": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "Brand": {
            "type": "object",
            "required": [
                "name",
                "maxCalls",
                "defaultTimezone"
            ],
            "properties": {
                "name": {
                    "maxLength": 75,
                    "description": "",
                    "type": "string"
                },
                "domainUsers": {
                    "maxLength": 190,
                    "description": "",
                    "type": "string"
                },
                "maxCalls": {
                    "default": "0",
                    "minimum": 0,
                    "description": "",
                    "example": "0",
                    "type": "integer"
                },
                "logo": {
                    "$ref": "#/definitions/Brand_Logo"
                },
                "invoice": {
                    "$ref": "#/definitions/Brand_Invoice"
                },
                "language": {
                    "description": "",
                    "type": "integer"
                },
                "defaultTimezone": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Brand-collection": {
            "type": "object"
        },
        "Brand-detailed": {
            "type": "object",
            "properties": {
                "logo": {
                    "readOnly": true,
                    "$ref": "#/definitions/Brand_Logo"
                },
                "invoice": {
                    "readOnly": true,
                    "$ref": "#/definitions/Brand_Invoice"
                },
                "language": {
                    "$ref": "#/definitions/Language"
                },
                "defaultTimezone": {
                    "$ref": "#/definitions/Timezone"
                },
                "features": {
                    "description": "Active feature ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "required": [
                "defaultTimezone"
            ]
        },
        "Brand-withFeatures": {
            "type": "object",
            "required": [
                "name",
                "maxCalls",
                "defaultTimezone"
            ],
            "properties": {
                "name": {
                    "maxLength": 75,
                    "description": "",
                    "type": "string"
                },
                "domainUsers": {
                    "maxLength": 190,
                    "description": "",
                    "type": "string"
                },
                "maxCalls": {
                    "default": "0",
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "logo": {
                    "$ref": "#/definitions/Brand_Logo"
                },
                "invoice": {
                    "$ref": "#/definitions/Brand_Invoice"
                },
                "language": {
                    "$ref": "#/definitions/Language"
                },
                "defaultTimezone": {
                    "$ref": "#/definitions/Timezone"
                },
                "features": {
                    "description": "Active feature ids",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "logoPath": {
                    "readOnly": true,
                    "description": ""
                }
            }
        },
        "BrandService": {
            "type": "object",
            "required": [
                "code",
                "brand",
                "service"
            ],
            "properties": {
                "code": {
                    "maxLength": 3,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "brand": {
                    "description": "",
                    "type": "integer"
                },
                "service": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "BrandService-collection": {
            "type": "object"
        },
        "BrandService-detailed": {
            "type": "object",
            "required": [
                "brand",
                "service"
            ],
            "properties": {
                "brand": {
                    "$ref": "#/definitions/Brand"
                },
                "service": {
                    "$ref": "#/definitions/Service"
                }
            }
        },
        "Brand_Invoice": {
            "type": "object",
            "required": [
                "nif",
                "postalAddress",
                "postalCode",
                "town",
                "province",
                "country"
            ],
            "properties": {
                "nif": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "postalAddress": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "postalCode": {
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "town": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "province": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "country": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "registryData": {
                    "maxLength": 1024,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "Brand_Logo": {
            "type": "object",
            "properties": {
                "fileSize": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "mimeType": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "baseName": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "Carrier": {
            "type": "object",
            "required": [
                "description",
                "name",
                "brand"
            ],
            "properties": {
                "description": {
                    "default": "",
                    "maxLength": 500,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "name": {
                    "maxLength": 200,
                    "description": "",
                    "type": "string"
                },
                "externallyRated": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "balance": {
                    "default": "0",
                    "format": "float",
                    "description": "",
                    "example": "0",
                    "type": "number"
                },
                "calculateCost": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "brand": {
                    "description": "",
                    "type": "integer"
                },
                "proxyTrunk": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Company": {
            "type": "object",
            "required": [
                "type",
                "name",
                "nif",
                "distributeMethod",
                "maxCalls",
                "maxDailyUsage",
                "postalAddress",
                "postalCode",
                "town",
                "province",
                "countryName",
                "allowRecordingRemoval",
                "billingMethod",
                "language",
                "mediaRelaySets",
                "defaultTimezone",
                "brand",
                "applicationServer",
                "country",
                "outgoingDdi"
            ],
            "properties": {
                "type": {
                    "default": "vpbx",
                    "enum": [
                        "vpbx",
                        "retail",
                        "wholesale",
                        "residential"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "vpbx",
                    "type": "string"
                },
                "name": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "domainUsers": {
                    "maxLength": 190,
                    "description": "",
                    "type": "string"
                },
                "nif": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "distributeMethod": {
                    "default": "hash",
                    "enum": [
                        "static",
                        "rr",
                        "hash"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "hash",
                    "type": "string"
                },
                "maxCalls": {
                    "default": "0",
                    "minimum": 0,
                    "description": "",
                    "example": "0",
                    "type": "integer"
                },
                "maxDailyUsage": {
                    "default": "1000000",
                    "minimum": 0,
                    "description": "",
                    "example": "1000000",
                    "type": "integer"
                },
                "currentDayUsage": {
                    "default": "0",
                    "format": "float",
                    "description": "",
                    "example": "0",
                    "type": "number"
                },
                "maxDailyUsageEmail": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "postalAddress": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "postalCode": {
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "town": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "province": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "countryName": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "ipfilter": {
                    "default": "1",
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "onDemandRecord": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "integer"
                },
                "allowRecordingRemoval": {
                    "default": "1",
                    "description": "",
                    "example": "1",
                    "type": "boolean"
                },
                "onDemandRecordCode": {
                    "maxLength": 3,
                    "description": "",
                    "type": "string"
                },
                "externallyextraopts": {
                    "maxLength": 65535,
                    "description": "",
                    "type": "string"
                },
                "recordingsLimitMB": {
                    "description": "",
                    "type": "integer"
                },
                "recordingsLimitEmail": {
                    "maxLength": 250,
                    "description": "",
                    "type": "string"
                },
                "billingMethod": {
                    "default": "postpaid",
                    "enum": [
                        "postpaid",
                        "prepaid",
                        "pseudoprepaid"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "postpaid",
                    "type": "string"
                },
                "balance": {
                    "default": "0",
                    "format": "float",
                    "description": "",
                    "example": "0",
                    "type": "number"
                },
                "showInvoices": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "language": {
                    "description": "",
                    "type": "integer"
                },
                "mediaRelaySets": {
                    "description": "",
                    "type": "integer"
                },
                "defaultTimezone": {
                    "description": "",
                    "type": "integer"
                },
                "brand": {
                    "description": "",
                    "type": "integer"
                },
                "applicationServer": {
                    "description": "",
                    "type": "integer"
                },
                "country": {
                    "description": "",
                    "type": "integer"
                },
                "outgoingDdi": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Country": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "default": "",
                    "maxLength": 100,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "countryCode": {
                    "maxLength": 10,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "name": {
                    "$ref": "#/definitions/Country_Name"
                },
                "zone": {
                    "$ref": "#/definitions/Country_Zone"
                }
            }
        },
        "Country-collection": {
            "type": "object",
            "properties": {
                "name": {
                    "readOnly": true,
                    "$ref": "#/definitions/Country_Name"
                }
            }
        },
        "Country-detailed": {
            "type": "object",
            "properties": {
                "name": {
                    "readOnly": true,
                    "$ref": "#/definitions/Country_Name"
                },
                "zone": {
                    "readOnly": true,
                    "$ref": "#/definitions/Country_Zone"
                }
            }
        },
        "Country_Name": {
            "type": "object",
            "properties": {
                "en": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "es": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "ca": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "it": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "Country_Zone": {
            "type": "object",
            "required": [
                "en",
                "es",
                "ca",
                "it"
            ],
            "properties": {
                "en": {
                    "default": "",
                    "maxLength": 55,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "es": {
                    "default": "",
                    "maxLength": 55,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "ca": {
                    "default": "",
                    "maxLength": 55,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "it": {
                    "default": "",
                    "maxLength": 55,
                    "description": "",
                    "example": "",
                    "type": "string"
                }
            }
        },
        "Ddi": {
            "type": "object",
            "required": [
                "ddi",
                "recordCalls",
                "billInboundCalls",
                "company",
                "brand"
            ],
            "properties": {
                "ddi": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "ddie164": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "recordCalls": {
                    "default": "none",
                    "enum": [
                        "none",
                        "all",
                        "inbound",
                        "outbound"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "example": "none",
                    "type": "string"
                },
                "displayName": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "routeType": {
                    "enum": [
                        "user",
                        "ivr",
                        "huntGroup",
                        "fax",
                        "conferenceRoom",
                        "friend",
                        "queue",
                        "conditional",
                        "residential",
                        "retail"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "billInboundCalls": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "friendValue": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                },
                "brand": {
                    "description": "",
                    "type": "integer"
                },
                "language": {
                    "description": "",
                    "type": "integer"
                },
                "ddiProvider": {
                    "description": "",
                    "type": "integer"
                },
                "country": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "DdiProvider": {
            "type": "object",
            "required": [
                "description",
                "name",
                "brand",
                "proxyTrunk"
            ],
            "properties": {
                "description": {
                    "default": "",
                    "maxLength": 500,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "name": {
                    "maxLength": 200,
                    "description": "",
                    "type": "string"
                },
                "externallyRated": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "brand": {
                    "description": "",
                    "type": "integer"
                },
                "proxyTrunk": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Description": {
            "type": "object",
            "required": [
                "en",
                "es",
                "ca",
                "it"
            ],
            "properties": {
                "en": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "es": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "ca": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "it": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "Destination": {
            "type": "object",
            "required": [
                "prefix",
                "brand"
            ],
            "properties": {
                "prefix": {
                    "maxLength": 24,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "name": {
                    "description": "",
                    "type": "integer"
                },
                "brand": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Domain-collection": {
            "type": "object"
        },
        "Domain-detailed": {
            "type": "object"
        },
        "Feature": {
            "type": "object",
            "required": [
                "iden"
            ],
            "properties": {
                "iden": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "name": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Feature-collection": {
            "type": "object"
        },
        "Feature-detailed": {
            "type": "object",
            "properties": {
                "name": {
                    "readOnly": true,
                    "$ref": "#/definitions/Name"
                }
            }
        },
        "FeaturesRelBrand": {
            "type": "object",
            "properties": {
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "brand": {
                    "description": "",
                    "type": "integer"
                },
                "feature": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "brand",
                "feature"
            ]
        },
        "FeaturesRelBrand-collection": {
            "type": "object",
            "required": [
                "brand",
                "feature"
            ],
            "properties": {
                "brand": {
                    "description": "",
                    "type": "integer"
                },
                "feature": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "FeaturesRelBrand-detailed": {
            "type": "object",
            "required": [
                "brand",
                "feature"
            ],
            "properties": {
                "brand": {
                    "$ref": "#/definitions/Brand"
                },
                "feature": {
                    "$ref": "#/definitions/Feature"
                }
            }
        },
        "Invoice": {
            "type": "object",
            "properties": {
                "number": {
                    "maxLength": 30,
                    "description": "",
                    "type": "string"
                },
                "inDate": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "outDate": {
                    "format": "date-time",
                    "description": "",
                    "type": "string"
                },
                "total": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "taxRate": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "totalWithTax": {
                    "format": "float",
                    "description": "",
                    "type": "number"
                },
                "status": {
                    "enum": [
                        "waiting",
                        "processing",
                        "created",
                        "error"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "statusMsg": {
                    "maxLength": 140,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "pdf": {
                    "description": "",
                    "type": "integer"
                },
                "invoiceTemplate": {
                    "description": "",
                    "type": "integer"
                },
                "brand": {
                    "description": "",
                    "type": "integer"
                },
                "company": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "brand",
                "company"
            ]
        },
        "InvoiceTemplate": {
            "type": "object",
            "required": [
                "name",
                "template"
            ],
            "properties": {
                "name": {
                    "maxLength": 55,
                    "description": "",
                    "type": "string"
                },
                "description": {
                    "maxLength": 300,
                    "description": "",
                    "type": "string"
                },
                "template": {
                    "maxLength": 65535,
                    "description": "",
                    "type": "string"
                },
                "templateHeader": {
                    "maxLength": 65535,
                    "description": "",
                    "type": "string"
                },
                "templateFooter": {
                    "maxLength": 65535,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "brand": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "InvoiceTemplate-collection": {
            "type": "object"
        },
        "InvoiceTemplate-detailed": {
            "type": "object",
            "properties": {
                "brand": {
                    "$ref": "#/definitions/Brand"
                }
            }
        },
        "Label": {
            "type": "object",
            "required": [
                "en",
                "es",
                "ca",
                "it"
            ],
            "properties": {
                "en": {
                    "default": "",
                    "maxLength": 20,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "es": {
                    "default": "",
                    "maxLength": 20,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "ca": {
                    "default": "",
                    "maxLength": 20,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "it": {
                    "default": "",
                    "maxLength": 20,
                    "description": "",
                    "example": "",
                    "type": "string"
                }
            }
        },
        "Language": {
            "type": "object",
            "required": [
                "iden"
            ],
            "properties": {
                "iden": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "name": {
                    "$ref": "#/definitions/Language_Name"
                }
            }
        },
        "Language-collection": {
            "type": "object"
        },
        "Language-detailed": {
            "type": "object",
            "properties": {
                "name": {
                    "readOnly": true,
                    "$ref": "#/definitions/Language_Name"
                }
            }
        },
        "Language_Name": {
            "type": "object",
            "required": [
                "en",
                "es",
                "ca",
                "it"
            ],
            "properties": {
                "en": {
                    "default": "",
                    "maxLength": 100,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "es": {
                    "default": "",
                    "maxLength": 100,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "ca": {
                    "default": "",
                    "maxLength": 100,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "it": {
                    "default": "",
                    "maxLength": 100,
                    "description": "",
                    "example": "",
                    "type": "string"
                }
            }
        },
        "Logo": {
            "type": "object",
            "properties": {
                "fileSize": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "mimeType": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "baseName": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "MediaRelaySet": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "default": "0",
                    "maxLength": 32,
                    "description": "",
                    "example": "0",
                    "type": "string"
                },
                "description": {
                    "maxLength": 200,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "MediaRelaySet-collection": {
            "type": "object"
        },
        "MediaRelaySet-detailed": {
            "type": "object"
        },
        "Name": {
            "type": "object",
            "properties": {
                "en": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "es": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "ca": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "it": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "Pdf": {
            "type": "object",
            "properties": {
                "fileSize": {
                    "minimum": 0,
                    "description": "",
                    "type": "integer"
                },
                "mimeType": {
                    "maxLength": 80,
                    "description": "",
                    "type": "string"
                },
                "baseName": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                }
            }
        },
        "ProxyTrunk": {
            "type": "object",
            "properties": {
                "name": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "ip": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "ip"
            ]
        },
        "ProxyTrunk-collection": {
            "type": "object"
        },
        "ProxyTrunk-detailed": {
            "type": "object"
        },
        "ProxyTrunksRelBrand": {
            "type": "object",
            "properties": {
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "brand": {
                    "description": "",
                    "type": "integer"
                },
                "proxyTrunk": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "brand",
                "proxyTrunk"
            ]
        },
        "ProxyTrunksRelBrand-collection": {
            "type": "object",
            "required": [
                "brand",
                "proxyTrunk"
            ],
            "properties": {
                "brand": {
                    "description": "",
                    "type": "integer"
                },
                "proxyTrunk": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "ProxyTrunksRelBrand-detailed": {
            "type": "object",
            "required": [
                "brand",
                "proxyTrunk"
            ],
            "properties": {
                "brand": {
                    "$ref": "#/definitions/Brand"
                },
                "proxyTrunk": {
                    "$ref": "#/definitions/ProxyTrunk"
                }
            }
        },
        "ProxyUser": {
            "type": "object",
            "properties": {
                "name": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "ip": {
                    "maxLength": 50,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "ProxyUser-collection": {
            "type": "object"
        },
        "ProxyUser-detailed": {
            "type": "object"
        },
        "PublicEntity": {
            "type": "object",
            "required": [
                "iden",
                "platform",
                "brand",
                "client"
            ],
            "properties": {
                "iden": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "fqdn": {
                    "maxLength": 200,
                    "description": "",
                    "type": "string"
                },
                "platform": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "brand": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "client": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "name": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "PublicEntity-collection": {
            "type": "object",
            "properties": {
                "name": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "PublicEntity-detailed": {
            "type": "object",
            "properties": {
                "name": {
                    "readOnly": true,
                    "$ref": "#/definitions/Name"
                }
            }
        },
        "RatingPlanGroup": {
            "type": "object",
            "properties": {
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "name": {
                    "description": "",
                    "type": "integer"
                },
                "description": {
                    "description": "",
                    "type": "integer"
                },
                "brand": {
                    "description": "",
                    "type": "integer"
                }
            },
            "required": [
                "brand"
            ]
        },
        "Rtpengine": {
            "type": "object",
            "required": [
                "setid",
                "url",
                "weight",
                "disabled",
                "stamp",
                "mediaRelaySet"
            ],
            "properties": {
                "setid": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "integer"
                },
                "url": {
                    "maxLength": 64,
                    "description": "",
                    "type": "string"
                },
                "weight": {
                    "default": "1",
                    "minimum": 0,
                    "description": "",
                    "example": "1",
                    "type": "integer"
                },
                "disabled": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "stamp": {
                    "default": "2000-01-01 00:00:00",
                    "format": "date-time",
                    "description": "",
                    "example": "2000-01-01 00:00:00",
                    "type": "string"
                },
                "description": {
                    "maxLength": 200,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "mediaRelaySet": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Rtpengine-collection": {
            "type": "object"
        },
        "Rtpengine-detailed": {
            "type": "object",
            "properties": {
                "stamp": {
                    "default": "2000-01-01 00:00:00",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "",
                    "example": "2000-01-01 00:00:00",
                    "type": "string"
                },
                "mediaRelaySet": {
                    "$ref": "#/definitions/MediaRelaySet"
                }
            },
            "required": [
                "mediaRelaySet"
            ]
        },
        "Service": {
            "type": "object",
            "required": [
                "iden",
                "defaultCode",
                "extraArgs"
            ],
            "properties": {
                "iden": {
                    "default": "",
                    "maxLength": 50,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "defaultCode": {
                    "maxLength": 3,
                    "description": "",
                    "type": "string"
                },
                "extraArgs": {
                    "default": "0",
                    "description": "",
                    "example": "0",
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "name": {
                    "description": "",
                    "type": "integer"
                },
                "description": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Service-collection": {
            "type": "object"
        },
        "Service-detailed": {
            "type": "object",
            "properties": {
                "name": {
                    "readOnly": true,
                    "$ref": "#/definitions/Name"
                },
                "description": {
                    "readOnly": true,
                    "$ref": "#/definitions/Description"
                }
            }
        },
        "SpecialNumber": {
            "type": "object",
            "required": [
                "number",
                "disableCDR",
                "country"
            ],
            "properties": {
                "number": {
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "disableCDR": {
                    "default": "1",
                    "minimum": 0,
                    "description": "",
                    "example": "1",
                    "type": "integer"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "country": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "SpecialNumber-collection": {
            "type": "object",
            "required": [
                "country"
            ],
            "properties": {
                "country": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "SpecialNumber-detailed": {
            "type": "object",
            "required": [
                "country"
            ],
            "properties": {
                "country": {
                    "$ref": "#/definitions/Country"
                }
            }
        },
        "TerminalManufacturer": {
            "type": "object",
            "required": [
                "iden",
                "name",
                "description"
            ],
            "properties": {
                "iden": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "default": "",
                    "maxLength": 100,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "maxLength": 500,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "TerminalManufacturer-collection": {
            "type": "object"
        },
        "TerminalManufacturer-detailed": {
            "type": "object"
        },
        "TerminalModel": {
            "type": "object",
            "required": [
                "iden",
                "name",
                "description",
                "terminalManufacturer"
            ],
            "properties": {
                "iden": {
                    "maxLength": 100,
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "default": "",
                    "maxLength": 100,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "description": {
                    "default": "",
                    "maxLength": 500,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "genericTemplate": {
                    "maxLength": 65535,
                    "description": "",
                    "type": "string"
                },
                "specificTemplate": {
                    "maxLength": 65535,
                    "description": "",
                    "type": "string"
                },
                "genericUrlPattern": {
                    "maxLength": 225,
                    "description": "",
                    "type": "string"
                },
                "specificUrlPattern": {
                    "maxLength": 225,
                    "description": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "terminalManufacturer": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "TerminalModel-collection": {
            "type": "object"
        },
        "TerminalModel-detailed": {
            "type": "object",
            "required": [
                "terminalManufacturer"
            ],
            "properties": {
                "terminalManufacturer": {
                    "$ref": "#/definitions/TerminalManufacturer"
                }
            }
        },
        "Timezone": {
            "type": "object",
            "required": [
                "tz"
            ],
            "properties": {
                "tz": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "comment": {
                    "default": "",
                    "maxLength": 150,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "label": {
                    "description": "",
                    "type": "integer"
                },
                "country": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "Timezone-collection": {
            "type": "object"
        },
        "Timezone-detailed": {
            "type": "object",
            "properties": {
                "label": {
                    "readOnly": true,
                    "$ref": "#/definitions/Label"
                },
                "country": {
                    "$ref": "#/definitions/Country"
                }
            }
        },
        "WebPortal": {
            "type": "object",
            "required": [
                "url",
                "urlType"
            ],
            "properties": {
                "url": {
                    "maxLength": 255,
                    "description": "",
                    "type": "string"
                },
                "klearTheme": {
                    "default": "",
                    "maxLength": 200,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "urlType": {
                    "enum": [
                        "god",
                        "brand",
                        "admin",
                        "user"
                    ],
                    "maxLength": 25,
                    "description": "",
                    "type": "string"
                },
                "name": {
                    "default": "",
                    "maxLength": 200,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "userTheme": {
                    "default": "",
                    "maxLength": 200,
                    "description": "",
                    "example": "",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "description": "",
                    "type": "integer"
                },
                "logo": {
                    "description": "",
                    "type": "integer"
                },
                "brand": {
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "WebPortal-collection": {
            "type": "object"
        },
        "WebPortal-detailed": {
            "type": "object",
            "properties": {
                "logo": {
                    "readOnly": true,
                    "$ref": "#/definitions/Logo"
                },
                "brand": {
                    "$ref": "#/definitions/Brand"
                }
            }
        }
    }
}
